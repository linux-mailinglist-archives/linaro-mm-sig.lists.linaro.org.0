Return-Path: <linaro-mm-sig-bounces@lists.linaro.org>
X-Original-To: lists+linaro-mm-sig@lfdr.de
Delivered-To: lists+linaro-mm-sig@lfdr.de
Received: from lists.linaro.org (lists.linaro.org [107.22.173.205])
	by mail.lfdr.de (Postfix) with ESMTPS id 60C96203320
	for <lists+linaro-mm-sig@lfdr.de>; Mon, 22 Jun 2020 11:17:29 +0200 (CEST)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 84EF2615EF
	for <lists+linaro-mm-sig@lfdr.de>; Mon, 22 Jun 2020 09:17:28 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
	id 79D006171A; Mon, 22 Jun 2020 09:17:28 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on lists.linaro.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.9 required=5.0 tests=BAYES_00,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_NONE,RCVD_IN_MSPIKE_H3,RCVD_IN_MSPIKE_WL,SPF_HELO_NONE
	autolearn=disabled version=3.4.2
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 1955D6164A;
	Mon, 22 Jun 2020 09:16:32 +0000 (UTC)
X-Original-To: linaro-mm-sig@lists.linaro.org
Delivered-To: linaro-mm-sig@lists.linaro.org
Received: from lists.linaro.org (localhost [127.0.0.1])
 by lists.linaro.org (Postfix) with ESMTP id 2D632615EF
 for <linaro-mm-sig@lists.linaro.org>; Mon, 22 Jun 2020 09:16:28 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
 id 116706164A; Mon, 22 Jun 2020 09:16:28 +0000 (UTC)
Received: from mail-ot1-f67.google.com (mail-ot1-f67.google.com
 [209.85.210.67])
 by lists.linaro.org (Postfix) with ESMTPS id 6F290615EF
 for <linaro-mm-sig@lists.linaro.org>; Mon, 22 Jun 2020 09:16:26 +0000 (UTC)
Received: by mail-ot1-f67.google.com with SMTP id 64so1564655oti.5
 for <linaro-mm-sig@lists.linaro.org>; Mon, 22 Jun 2020 02:16:26 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:mime-version:references:in-reply-to:from:date
 :message-id:subject:to:cc;
 bh=ZSeaMlE7GUutcCnGTBRyHmDL2wVD0AT7mD7yKh2KGMo=;
 b=Gckw0pqWYtUeQxJo9VEgaEh/Hof7tomqr/BHo+mmIRhxhHg2KHIMeUwylrOT8XrxdB
 BUe7nwh67N/rj/dkBQzAu2k8At4G0zpY0WdGgWK6QjlCK1joF9XdOvsFGRVJ6vRkboeE
 wQPooM06TeLKjEDSPzZ29kWM8lG3I1GwA6M2Dp2jSd55gFAUgYqTuLIT5h5ACAql7TzS
 Z+r01GGHmSaooCODhOxb5Ta7JPwyZRSesIfveURq9BUVBDt3P45mgTnFqCAZ5Cun79Rs
 xvlmFJu++LbCJUTI80luZcKznPQkjeUtfC5/4ZtIE5rNiPGmyMkLi8kAQhOfQwOicfIA
 YcnA==
X-Gm-Message-State: AOAM530W3e1LxWOBSlX8zkZp8x8Lr1/wcNnJ++nLwkRsmqN666Bjp7R3
 P1i/aTbbeTElxUae3HSge+ArrUNE/e3QmEo5oacvxA==
X-Google-Smtp-Source: ABdhPJzIZC4iHlgUR+Yu5PeT4ypjAmYK05V91KLSkvEtVAiftAA5v9bvKYgkF5yc4xBoBP7cOtRYbpIjiRIH9kD4kJM=
X-Received: by 2002:a9d:4cd:: with SMTP id 71mr14110772otm.188.1592817385783; 
 Mon, 22 Jun 2020 02:16:25 -0700 (PDT)
MIME-Version: 1.0
References: <20200604081224.863494-1-daniel.vetter@ffwll.ch>
 <20200604081224.863494-4-daniel.vetter@ffwll.ch>
 <159186243606.1506.4437341616828968890@build.alporthouse.com>
 <CAPM=9ty6r1LuXAH_rf98GH0R9yN3x8xzKPjZG3QyvokpQBR-Hg@mail.gmail.com>
 <CAPj87rM0S2OPssf+WA+pjanT-0Om3yuUM1zUJCv4qTx5VYE=Fw@mail.gmail.com>
 <159255511144.7737.12635440776531222029@build.alporthouse.com>
 <CAKMK7uHEwj6jiZkRZ5PaCUNWcuU9oE4KYm4XHZwHnFzEuChZ7w@mail.gmail.com>
 <159255801588.7737.4425728073225310839@build.alporthouse.com>
 <20200619094309.GT20149@phenom.ffwll.local>
 <159257233754.7737.17318605310513355800@build.alporthouse.com>
In-Reply-To: <159257233754.7737.17318605310513355800@build.alporthouse.com>
From: Daniel Vetter <daniel@ffwll.ch>
Date: Mon, 22 Jun 2020 11:16:14 +0200
Message-ID: <CAKMK7uG4KzUa5yJMXQ0ffUwC_fR+pPTEnag7=qfJNtobFH3+pQ@mail.gmail.com>
To: Chris Wilson <chris@chris-wilson.co.uk>
X-Virus-Scanned: ClamAV using ClamSMTP
Cc: linux-rdma <linux-rdma@vger.kernel.org>,
 Intel Graphics Development <intel-gfx@lists.freedesktop.org>,
 LKML <linux-kernel@vger.kernel.org>,
 DRI Development <dri-devel@lists.freedesktop.org>,
 "moderated list:DMA BUFFER SHARING FRAMEWORK" <linaro-mm-sig@lists.linaro.org>,
 Thomas Hellstrom <thomas.hellstrom@intel.com>,
 amd-gfx mailing list <amd-gfx@lists.freedesktop.org>,
 Daniel Vetter <daniel.vetter@intel.com>,
 Linux Media Mailing List <linux-media@vger.kernel.org>,
 =?UTF-8?Q?Christian_K=C3=B6nig?= <christian.koenig@amd.com>,
 Mika Kuoppala <mika.kuoppala@intel.com>
Subject: Re: [Linaro-mm-sig] [Intel-gfx] [PATCH 03/18] dma-fence: basic
	lockdep annotations
X-BeenThere: linaro-mm-sig@lists.linaro.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: "Unified memory management interest group."
 <linaro-mm-sig.lists.linaro.org>
List-Unsubscribe: <https://lists.linaro.org/mailman/options/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=unsubscribe>
List-Archive: <http://lists.linaro.org/pipermail/linaro-mm-sig/>
List-Post: <mailto:linaro-mm-sig@lists.linaro.org>
List-Help: <mailto:linaro-mm-sig-request@lists.linaro.org?subject=help>
List-Subscribe: <https://lists.linaro.org/mailman/listinfo/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linaro-mm-sig-bounces@lists.linaro.org
Sender: "Linaro-mm-sig" <linaro-mm-sig-bounces@lists.linaro.org>
X-Virus-Scanned: ClamAV using ClamSMTP

T24gRnJpLCBKdW4gMTksIDIwMjAgYXQgMzoxMiBQTSBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlz
LXdpbHNvbi5jby51az4gd3JvdGU6Cj4KPiBRdW90aW5nIERhbmllbCBWZXR0ZXIgKDIwMjAtMDYt
MTkgMTA6NDM6MDkpCj4gPiBPbiBGcmksIEp1biAxOSwgMjAyMCBhdCAxMDoxMzozNUFNICswMTAw
LCBDaHJpcyBXaWxzb24gd3JvdGU6Cj4gPiA+IFF1b3RpbmcgRGFuaWVsIFZldHRlciAoMjAyMC0w
Ni0xOSAwOTo1MTo1OSkKPiA+ID4gPiBPbiBGcmksIEp1biAxOSwgMjAyMCBhdCAxMDoyNSBBTSBD
aHJpcyBXaWxzb24gPGNocmlzQGNocmlzLXdpbHNvbi5jby51az4gd3JvdGU6Cj4gPiA+ID4gPiBG
b3JjaW5nIGEgZ2VuZXJpYyBwcmltaXRpdmUgdG8gYWx3YXlzIGJlIHBhcnQgb2YgdGhlIHNhbWUg
Z2xvYmFsIG1hcCBpcwo+ID4gPiA+ID4gaG9ycmlibGUuCj4gPiA+ID4KPiA+ID4gPiBBbmQgIG5v
IGNvbmNyZXRlIGV4YW1wbGUgb3IgcmVhc29uIGZvciB3aHkgdGhhdCdzIG5vdCBwb3NzaWJsZS4K
PiA+ID4gPiBCZWNhdXNlIGZyYW5rbHkgaXQncyBub3QgaG9ycmlibGUsIHRoaXMgaXMgd2hhdCB1
cHN0cmVhbSBpcyBhbGwgYWJvdXQ6Cj4gPiA+ID4gU2hhcmVkIGNvbmNlcHRzLCBzaGFyZWQgY29u
dHJhY3RzLCBzaGFyZWQgY29kZS4KPiA+ID4gPgo+ID4gPiA+IFRoZSBwcm9wb3NlZCBwYXRjaGVz
IG1pZ2h0IHZlcnkgd2VsbCBlbmNvZGUgdGhlIHdyb25nIGNvbnRyYWN0LCB0aGF0J3MKPiA+ID4g
PiBhbGwgdXAgZm9yIGRpc2N1c3Npb24uIEJ1dCBmdW5kYW1lbnRhbGx5IHF1ZXN0aW9uaW5nIHRo
YXQgd2UgbmVlZCBvbmUKPiA+ID4gPiBpcyBtaXNzaW5nIHdoYXQgdXBzdHJlYW0gaXMgYWxsIGFi
b3V0Lgo+ID4gPgo+ID4gPiBUaGVuIEkgaGF2ZSBub3QgY2xlYXJseSBjb21tdW5pY2F0ZWQsIGFz
IG15IG9waW5pb24gaXMgbm90IHRoYXQKPiA+ID4gdmFsaWRhdGlvbiBpcyB3b3J0aGxlc3MsIGJ1
dCB0aGF0IHRoZSBpbXBsZW1lbnRhdGlvbiBpcyBlbnNocmluaW5nIGEKPiA+ID4gZ2xvYmFsIHBy
b3BlcnR5IG9uIGEgbG93IGxldmVsIHByaW1pdGl2ZSB0aGF0IHByZXZlbnRzIGl0IGZyb20gYmVp
bmcKPiA+ID4gdXNlZCBlbHNld2hlcmUuIEFuZCBJIHdhbnQgdG8gcmVwbGFjZSBjb21wbGV0aW9u
IFtjaGFpbnNdIHdpdGggZmVuY2VzLCBhbmQKPiA+ID4gYmlvIHdpdGggZmVuY2VzLCBhbmQgY2xv
c3VyZXMgd2l0aCBmZW5jZXMsIGFuZCB3aGF0IG90aGVyIGVxdWl2YWxlbmNpZXMKPiA+ID4gdGhl
cmUgYXJlIGluIHRoZSBrZXJuZWwuIFRoZSBmZW5jZSBpcyBhcyBjZW50cmFsIGEgbG9ja2luZyBj
b25zdHJ1Y3QgYXMKPiA+ID4gc3RydWN0IGNvbXBsZXRpb24gYW5kIGRlc2VydmVzIHRvIGJlIGEg
Zm91bmRhdGlvbmFsIHByaW1pdGl2ZSBwcm92aWRlZAo+ID4gPiBieSBrZXJuZWwvIHVzZWQgdGhy
b3VnaG91dCBhbGwgZHJpdmVycyBmb3IgZGlzY3JldGUgcHJvYmxlbSBkb21haW5zLgo+ID4gPgo+
ID4gPiBUaGlzIGlzIG5hcnJvd2luZyBkbWFfZmVuY2Ugd2hlcmVieSBhZGRpbmcKPiA+ID4gICAg
ICAgc3RydWN0IGxvY2tkZXBfbWFwICpkbWFfZmVuY2U6OndhaXRfbWFwCj4gPiA+IGFuZCBhbm5v
dGF0aW5nIGxpbmthZ2UsIGFsbG93cyB5b3UgdG8gY29udGludWUgdG8gc3BlY2lmeSB0aGF0IGFs
bAo+ID4gPiBkbWFfZmVuY2UgdXNlZCBmb3IgYSBwYXJ0aWN1bGFyIHB1cnBvc2UgbXVzdCBmb2xs
b3cgY29tbW9uIHJ1bGVzLAo+ID4gPiB3aXRob3V0IHJlc3RyaWN0aW5nIHRoZSBwcmltaXRpdmUg
Zm9yIHVzZXMgb3V0c2lkZSBvZiB0aGlzIHNjb3BlLgo+ID4KPiA+IFNvbWV3aGVyZSBlbHNlIGlu
IHRoaXMgdGhyZWFkIEkgaGFkIGRpc2N1c3Npb25zIHdpdGggSmFzb24gR3VudGhvcnBlIGFib3V0
Cj4gPiB0aGlzIHRvcGljLiBJdCBtaWdodCBtYXliZSBjaGFuZ2Ugc29tZXdoYXQgZGVwZW5kaW5n
IHVwb24gZXhhY3QgcnVsZXMsIGJ1dAo+ID4gaGlzIHRha2UgaXMgdmVyeSBtdWNoICJJIGRvbid0
IHdhbnQgZG1hX2ZlbmNlIGluIHJkbWEiLiBPciBwcmV0dHkgY2xvc2UgdG8KPiA+IHRoYXQgYXQg
bGVhc3QuCj4gPgo+ID4gU2ltaWxhciBkaXNjdXNzaW9ucyB3aXRoIGhhYmFuYWxhYnMsIHRoZXkn
cmUgdXNpbmcgZG1hX2ZlbmNlIGludGVybmFsbHkKPiA+IHdpdGhvdXQgYW55IG9mIHRoZSB1YXBp
LiBEaXNjdXNzaW9uIHRoZXJlIGhhcyBhbHNvIG5vdyBjb25jbHVkZWQgdGhhdCBpdCdzCj4gPiBi
ZXN0IGlmIHRoZXkgcmVtb3ZlIHRoZW0sIGFuZCBzaW1wbHkgc3dpdGNoIG92ZXIgdG8gYSB3YWl0
X3F1ZXVlIG9yCj4gPiBjb21wbGV0aW9uIGxpa2UgZXZlcnkgb3RoZXIgZHJpdmVyIGRvZXMuCj4g
Pgo+ID4gVGhlIG5leHQgcm91bmQgb2YgdGhlIHBhdGNoZXMgYWxyZWFkeSBoYXZlIGEgcGFyYWdy
YXBoIHRvIGF0IGxlYXN0Cj4gPiBzb21ld2hhdCBsaW1pdCBob3cgbm9uLWdwdSBkcml2ZXJzIHVz
ZSBkbWFfZmVuY2UuIEFuZCBJIGd1ZXNzIGFjdHVhbAo+ID4gY29uc2Vuc3VzIG1pZ2h0IGJlIHBv
aW50aW5nIGV2ZW4gbW9yZSBzdHJvbmdseSBhdCBkbWFfZmVuY2UgYmVpbmcgc29sZWx5Cj4gPiBz
b21ldGhpbmcgZm9yIGdwdXMgYW5kIGNsb3NlbHkgcmVsYXRlZCBzdWJzeXN0ZW0gKG1heWJlIG1l
ZGlhKSBmb3Igc3luY2luZwo+ID4gZG1hLWJ1ZiBhY2Nlc3MuCj4gPgo+ID4gU28gZG1hX2ZlbmNl
IGFzIGdlbmVyYWwgcmVwbGFjZW1lbnQgZm9yIGNvbXBsZXRpb24gY2hhaW5zIEkgdGhpbmsganVz
dAo+ID4gd29udCBoYXBwZW4uCj4KPiBUaGF0IGlzIHNhZC4gSSBjYW5ub3QgY29tcHJlaGVuZCBn
b2luZyBiYWNrIHRvIHB1cmUgY29tcGxldGlvbnMgYWZ0ZXIgYQo+IHRhc3RlIG9mIGZlbmNlIHNj
aGVkdWxpbmcuIEFuZCB3ZSBhcmUgbm90IGV2ZW4gY2xvc2UgdG8gZnVsbHkgdXRpbGlzaW5nCj4g
dGhlbSwgYXMgbm90IGFsbCB0aGUgYXN5bmMgY3B1IFthbGxvY2F0aW9uIV0gdGFza3MgYXJlIGZ1
bGx5IHRyYWNrZWQgYnkKPiBmZW5jZXMgeWV0IGFuZCBhcmUgc3RpbGwgc3R1Y2sgaW4gYSBGSUZP
IHdvcmtxdWV1ZS4KPgo+ID4gV2hhdCBtaWdodCBtYWtlIHNlbnNlIGlzIGlmIGUuZy4gdGhlIGxv
Y2tkZXAgYW5ub3RhdGlvbnMgY291bGQgYmUgcmV1c2VkLAo+ID4gYXQgbGVhc3QgaW4gZGVzaWdu
LCBmb3Igd2FpdF9xdWV1ZSBvciBjb21wbGV0aW9uIG9yIGFueXRoaW5nIGVsc2UKPiA+IHJlYWxs
eS4gSSBkbyB0aGluayB0aGF0IGhhcyBhIGZhaXIgY2hhbmNlIGNvbXBhcmVkIHRvIHRoZSBhdXRv
bWFnaWMKPiA+IGNyb3NzLXJlbGVhc2UgYW5ub3RhdGlvbnMgYXBwcm9hY2gsIHdoaWNoIHJlbGll
ZCB3YXkgdG9vIGhlYXZpbHkgb24KPiA+IGd1ZXNzaW5nIHdoZXJlIGJhcnJpZXJzIGFyZS4gTXkg
ZXhwZXJpZW5jZSBmcm9tIGp1c3QgYSBiaXQgb2YgcGxheWluZwo+ID4gYXJvdW5kIHdpdGggdGhl
c2UgcGF0Y2hlcyBoZXJlIGFuZCBkaXNjdXNzaW5nIHRoZW0gd2l0aCBvdGhlciBkcml2ZXIKPiA+
IG1haW50YWluZXJzIGlzIHRoYXQgYWNjdXJhdGVseSBkZWNpZGluZyB3aGVyZSBjcml0aWNhbCBz
ZWN0aW9ucyBzdGFydCBhbmQKPiA+IGVuZCBpcyBhIGpvYiBmb3IgaHVtYW5zIG9ubHkuIEFuZCBp
ZiB5b3UgZ2V0IGl0IHdyb25nLCB5b3Ugd2lsbCBoYXZlIGEKPiA+IGZhbHNlIHBvc2l0aXZlLgo+
ID4KPiA+IEFuZCB5b3UncmUgaW5kZWVkIGNvcnJlY3QgdGhhdCBpZiB3ZSdkIGRvIGFubm90YXRp
b25zIGZvciBjb21wbGV0aW9ucyBhbmQKPiA+IHdhaXQgcXVldWVzLCB0aGVuIHRoYXQgd291bGQg
bmVlZCB0byBoYXZlIGEgY2xhc3MgcGVyIHNlbWFudGljYWxseQo+ID4gZXF1aXZhbGVudCB1c2Vy
LCBsaWtlIHdlIGhhdmUgbG9ja2RlcCBjbGFzc2VzIGZvciBtdXRleGVzLCBub3QganVzdCBvbmUK
PiA+IG92ZXJhbGwuCj4gPgo+ID4gQnV0IGRtYV9mZW5jZSBvdG9oIGlzIHNvbWV0aGluZyB2ZXJ5
IHNwZWNpZmljLCB3aGljaCBjb21lcyB3aXRoIHZlcnkKPiA+IHNwZWNpZmljIHJ1bGVzIGF0dGFj
aGVkIC0gaXQncyBub3QgYSBnZW5lcmljIHdhaXRfcXVldWUgYXQgYWxsLiBPcmlnaW5hbGx5Cj4g
PiBpdCBkaWQgc3RhcnQgb3V0IGFzIG9uZSBldmVuLCBidXQgaXQgaXMgYSB2ZXJ5IHNwZWNpYWxp
emVkIHdhaXRfcXVldWUuCj4gPgo+ID4gU28gdGhlcmUncyBpbW8gdHdvIGNhc2VzOgo+ID4KPiA+
IC0gWW91ciBjb21wbGV0aW9uIGlzIGVudGlyZWx5IG9ydGhvZ29uYWwgb2YgZG1hX2ZlbmNlcywg
YW5kIGNhbiBuZXZlciBldmVyCj4gPiAgIGJsb2NrIGEgZG1hX2ZlbmNlLiBEb24ndCB1c2UgZG1h
X2ZlbmNlIGZvciB0aGlzLCBhbmQgbm8gcHJvYmxlbS4gSXQncwo+ID4gICBqdXN0IGFub3RoZXIg
d2FpdF9xdWV1ZSBzb21ld2hlcmUuCj4gPgo+ID4gLSBZb3VyIGNvbXBsZXRpb24gY2FuIGV2ZW50
dWFsbHksIG1heWJlIHRocm91Z2ggbG90cyBvZiBjb252b2x1dGlvbnMgYW5kCj4gPiAgIGRlcGRl
bmNpZXMsIGJsb2NrIGEgZG1hX2ZlbmNlLiBJbiB0aGF0IGNhc2UgZnVsbCBkbWFfZmVuY2UgcnVs
ZXMgYXBwbHksCj4gPiAgIGFuZCB0aGUgb25seSB0aGluZyB5b3UgY2FuIGRvIHdpdGggYSBjdXN0
b20gYW5ub3RhdGlvbiBpcyBtYWtlIHRoZSBydWxlcwo+ID4gICBldmVuIHN0cmljdGVyLiBFLmcu
IGlmIGEgc3ViLXRpbWVsaW5lIGluIHRoZSBzY2hlZHVsZXIgaXNuJ3QgYWxsb3dlZCB0bwo+ID4g
ICB0YWtlIGNlcnRhaW4gc2NoZWR1bGVyIGxvY2tzLiBCdXQgdGhlIHVzZXJzcGFjZSB2aXNpYmxl
L3B1Ymxpc2hlZCBmZW5jZQo+ID4gICBkbyB0YWtlIHRoZW0sIG1heWJlIGFzIHBhcnQgb2YgY29t
bWFuZCBzdWJtaXNzaW9uIG9yIHJldGlyZW1lbnQuCj4gPiAgIEVudGlyZWx5IGh5cG90ZXRoaWNh
bCwgbm8gaWRlYSBhbnkgZHJpdmVyIGFjdHVhbGx5IG5lZWRzIHRoaXMuCj4KPiBJIHRoaW5rIHdl
IGFyZSBmYWNlZCB3aXRoIHRoaXMgdmVyeSByZWFsIHByb2JsZW0uCj4KPiBUaGUgcGFwZXJpbmcg
d2UgaGF2ZSB0b2RheSBvdmVyIHVzZXJwdHIgaXMgc28gdmVyeSB0aGluLCBhbmQgaWYgeW91Cj4g
c3F1aW50IHlvdSBjYW4gYWxyZWFkeSBzZWUgaXQgaXMgY291cGxlZCBpbnRvIHRoZSBjb21wbGV0
aW9uIHNpZ25hbC4gSnVzdAo+IGl0IGhhcHBlbnMgdG8gYmUgb24gdGhlIG90aGVyIHNpZGUgb2Yg
dGhlIGZlbmNlLgo+Cj4gVGhlIG5leHQgYmF0Y2ggb2YgcHJpb3JpdHkgaW52ZXJzaW9ucyBpbnZv
bHZlIGludGVncmF0aW5nIHRoZSBhc3luYyBjcHUKPiB0YXNrcyBpbnRvIHRoZSBzY2hlZHVsZXIs
IGFuZCBoYXZlIGZ1bGwgZGVwZW5kZW5jeSB0cmFja2luZyBvdmVyIGV2ZXJ5Cj4gaW50ZXJuYWwg
ZmVuY2UuIEkgZG8gbm90IHNlZSBhbnkgd2F5IHRvIGF2b2lkIGNvdXBsaW5nIHRoZSBjb21wbGV0
aW9uCj4gc2lnbmFsIGZyb20gdGhlIEdQVSB0byB0aGUgZWFybGllc3QgcmVzb3VyY2UgYWxsb2Nh
dGlvbiwgYXMgaXQncyBhbgo+IHVuYnJva2VuIGNoYWluIG9mIHdvcmssIGF0IGxlYXN0IGZyb20g
dGhlIHVzZXIncyBwZXJzcGVjdGl2ZS4gW05leHQgdXAKPiBmb3IgYW5ub3RhdGlvbnMgaXMgdGhh
dCB3ZSBuZWVkIHRvIGFsd2F5cyBhc3N1bWUgdGhhdCB1c2Vyc3BhY2UgaGFzIGFuCj4gaW1wbGlj
aXQgbG9jayBvbiBHUFUgcmVzb3VyY2VzOyBoYXZpbmcgdG8gYnJlYWsgdGhhdCBsb2NrIHdpdGgg
YSBHUFUKPiByZXNldCBzaG91bGQgYmUgYSBicmVhY2ggb2Ygb3VyIGRhdGEgaW50ZWdyaXR5LCBh
bmQgYmVzdCBhdm9pZGVkLCBmb3IKPiBjb21wdXRlIGRvZXMgbm90IGNhcmUgb25lIGlvdGEgYWJv
dXQgc3lzdGVtIGludGVncml0eSBhbmQgaW5zaXN0Cj4gdXNlcnNwYWNlIGtub3dzIGJlc3QuXSBT
dWNoIGFsbG9jYXRpb25zIGhhdmUgdG8gYmUgYWxsb3dlZCB0byBmYWlsIGFuZAo+IGZvciB0aGF0
IGZhaWx1cmUgdG8gcHJvcGFnYXRlIGNhbmNlbGxpbmcgdGhlIHF1ZXVlZCB3b3JrLCBzdWNoIHRo
YXQgSSdtCj4gY29uc2lkZXJpbmcgd2hhdCBydWxlcyB3ZSBuZWVkIGZvciBnZnBfdC4gVGhhdCBt
aWdodCBhbGxvdyBlbm91Z2gKPiBsZXZlcmFnZSB0byBicmVhayBhbnkgZnNfcmVjbGFpbSBsb29w
cywgYnV0IHVzZXJwdHIgaXMgbGlrZWx5IGZvcmV2ZXIKPiBkb29tZWQgW2FzaWRlIGZyb20gaXRz
IGZzX3JlY2xhaW0gbG9vcCBpcyBhcyBwcmV2ZW50YWJsZSBhcyB0aGUgbm9ybWFsCj4gc2hyaW5r
ZXIgcGF0aHNdLCBidXQgd2Ugc3RpbGwgbmVlZCB0byBzdWdnZXN0IHRvIHBpbl91c2VyX3BhZ2Vz
IHRoYXQKPiBmYWlsdXJlIGlzIGJldHRlciB0aGFuIG9vbSBhbmQgdGhhdCBpcyBub3QgY2xlYXIg
YXRtLiBQbHVzIHRoZSB1c3VhbAo+IGZhaWx1cmUgY2FuIGhhcHBlbiBhdCBhbnkgdGltZSBhZnRl
ciB1cGRhdGluZyB0aGUgdXNlciBmYWNpbmcKPiBib29ra2VlcGluZywgYnV0IHRoYXQgaXMganVz
dCBleHRyYSBsYXllcnMgaW4gdGhlIGV4ZWN1dGlvbiBtb25pdG9yCj4gcmVhZHkgdG8gc3RlcCBp
biBhbmQgcmVwbGFjaW5nIGZhaWxpbmcgd29yayB3aXRoIHRoZSBlcnJvciBwcm9wYWdhdGlvbi4K
PiBPciB3aGVyZSB0aGUgc3lzdGVtIGdyaW5kcyB0byBhIGhhbHQsIHJlcXVpcmluZyB0aGUgbW9u
aXRvciB0byBwYXRjaCBpbgo+IGEgbmV3IHBhZ2UgLyByZXNvdXJjZS4KClpvb21pbmcgb3V0IGEg
YnVuY2gsIHNpbmNlIHRoaXMgaXMgYSBsb3QgYWJvdXQgdGhlIGRldGFpbHMgb2YgbWFraW5nCnRo
aXMgaGFwcGVuLCBhbmQgSSB3YW50IHRvIG1ha2Ugc3VyZSBJJ20gdW5kZXJzdGFuZGluZyB5b3Vy
IGFpbQpjb3JyZWN0bHkuIEkgdGhpbmsgd2UgaGF2ZSAyIGJpZyB0aGluZ3MgaGVyZSBpbnRlcmFj
dGluZzoKCk9uIG9uZSBzaWRlIHRoZSAiZXZlcnl0aGluZyBhc3luYyIgcHVzaCwgZm9yIHNvbWUg
dmFsdWUgb2YgZXZlcnl0aGluZy4KT25jZSBldmVyeXRoaW5nIGlzIGFzeW5jIHdlIGxldCBlaXRo
ZXIgdGhlIGxpbnV4IHNjaGVkdWxlciAoZm9yCmRtYV9mZW5jZV93b3JrKSBvciB0aGUgZ3B1IHNj
aGVkdWxlciAoZm9yIGk5MTVfcmVxdWVzdCkgZmlndXJlIG91dCBob3cKdG8gb3JkZXIgZXZlcnl0
aGluZywgd2l0aCBhbGwgdGhlIGRlcGVuZGVuY2llcy4gRm9yIG1lbW9yeSBhbGxvY2F0aW9ucwp0
aGVyZSdzIGxpa2VseSBxdWl0ZSBhIGJpdCBvZiByZXRyeWluZyAob24gdGhlIGFsbG9jYXRpb24g
c2lkZSkgYW5kCnNraXBwaW5nIChvbiB0aGUgc2hyaW5rZXIvbW11IG5vdGlmaWVyIHNpZGUpIGlu
dm9sdmVkIHRvIG1ha2UgdGhpcyBhbGwKcGFuIG91dC4gTWF5YmUgc29tZXRoaW5nIGxpa2UgYSBH
RlBfTk9HUFUgZmxhZy4KCk9uIHRoZSBvdGhlciBzaWRlIHdlIGhhdmUgb3BpbmlvbmF0ZWQgdXNl
cnNwYWNlIHdpdGggYm90aCB2ZXJ5CmxvbmctcnVubmluZyBiYXRjaGVzICh0aGV5IG1pZ2h0IGFz
IHdlbGwgYmUgaW5maW5pdGUsIGJlc3Qgd2UgY2FuIGRvCmlzIGNoZWNrIHRoYXQgdGhleSBzdGls
bCBwcmVlbXB0IHdpdGhpbiBhIHJlYXNvbmFibGUgYW1vdW50IG9mIHRpbWUsCmxhY2sgb2YgaHcg
c3VwcG9ydCBmb3IgcHJlZW1wdGlvbiBpbiBhbGwgY2FzZXMgbm90d2l0aHN0YW5kaW5nKS4gQW5k
CmJhdGNoZXMgd2hpY2ggc3luY2hyb25pemUgYWNyb3NzIGVuZ2luZXMgYW5kIHdoYXRldmVyIGVu
dGlyZWx5IHVuZGVyCnVzZXJzcGFjZSBjb250cm9scywgd2l0aCBzdHVmZiBsaWtlIGdwdSBzZW1h
cGhvcmUgd2FpdHMgZW50aXJlbHkgaW4KdGhlIGNtZCBzdHJlYW0sIHdpdGhvdXQgYW55IGtlcm5l
bCBvciBncHUgc2NoZWR1bGVyIGludm9sdmVtZW50LiBXZWxsCm1heWJlIGEgc2xpZ2h0bHkgc21h
cnRlciBncHUgc2NoZWR1bGVyIHdoaWNoIGNvbnZlcnRzIHRoZSBzZW1hcGhvcmUKd2FpdCBmcm9t
IGEgcHVyZSBidXN5IGxvb3AgaW50byBhICJyZXBvbGwgb24gZWFjaCBzY2hlZHVsZXIKdGltZXNs
aWNlIi4gQnV0IG5vdCBhY3R1YWwgZGVwZW5kZW5jeSB0cmFja2luZyBhd2FyZW5lc3MgaW4gdGhl
IGtlcm5lbAoob3IgZ3VjL2h3IGZ3aXcpIG9mIHdoYXQgdXNlcnNwYWNlIGlzIHJlYWxseSB0cnlp
bmcgdG8gZG8uCgpMYXRlciBpcyBhIGJpZyBtb3RpdmF0b3IgZm9yIHRoZSBmb3JtZXIsIHNpbmNl
IHdpdGggYXJiaXRyYXJ5IGxvbmcKYmF0Y2hlcyBhbmQgYXJiaXRyYXJ5IGZlbmNlcyBhbnkgd2Fp
dCBmb3IgYSBiYXRjaCB0byBjb21wbGV0ZSBjYW4gdGFrZQpmb3JldmVyLCBoZW5jZSBhbnl0aGlu
ZyB0aGF0IG1pZ2h0IGVuZCB1cCBkb2luZyB0aGF0IG5lZWRzIHRvIGJlIGRvbmUKYXN5bmMgYW5k
IHdpdGhvdXQgbG9ja3MuIFRoYXQgd2F5IHdlIGRvbid0IGhhdmUgdG8gc2hvb3QgYW55dGhpbmcg
aWYgYQpiYXRjaCB0YWtlcyB0b28gbG9uZy4KCkZpbmFsbHkgaWYgYW55dGhpbmcgZ29lcyB3cm9u
ZyAob24gdGhlIGtlcm5lbCBzaWRlIGF0IGxlYXN0KSB3ZSBqdXN0CnByb3BhZ2V0ZSBmZW5jZSBl
cnJvciBzdGF0ZSB0aHJvdWdoIHRoZSBlbnRpcmUgbGFkZGVyIG9mIGluLWZsaWdodAp0aGluZ3Mg
KG9ubHkgaWYgaXQgZ29lcyB3cm9uZyB0ZXJtaW5hbGx5IG9mYykuCgpSb3VnaGx5IGNvcnJlY3Qg
b3IgZGlkIEkgbWlzcyBhIGJpZyAob3Igc21hbGwgYnV0IHJlYWxseSBpbXBvcnRhbnQpIHRoaW5n
PwoKVGhhbmtzLCBEYW5pZWwKLS0gCkRhbmllbCBWZXR0ZXIKU29mdHdhcmUgRW5naW5lZXIsIElu
dGVsIENvcnBvcmF0aW9uCmh0dHA6Ly9ibG9nLmZmd2xsLmNoCl9fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fCkxpbmFyby1tbS1zaWcgbWFpbGluZyBsaXN0Ckxp
bmFyby1tbS1zaWdAbGlzdHMubGluYXJvLm9yZwpodHRwczovL2xpc3RzLmxpbmFyby5vcmcvbWFp
bG1hbi9saXN0aW5mby9saW5hcm8tbW0tc2lnCg==
