Return-Path: <linaro-mm-sig-bounces@lists.linaro.org>
X-Original-To: lists+linaro-mm-sig@lfdr.de
Delivered-To: lists+linaro-mm-sig@lfdr.de
Received: from lists.linaro.org (lists.linaro.org [107.22.173.205])
	by mail.lfdr.de (Postfix) with ESMTPS id EBA98247BEB
	for <lists+linaro-mm-sig@lfdr.de>; Tue, 18 Aug 2020 03:40:59 +0200 (CEST)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 15282617B9
	for <lists+linaro-mm-sig@lfdr.de>; Tue, 18 Aug 2020 01:40:59 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
	id 077AE617EF; Tue, 18 Aug 2020 01:40:59 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on lists.linaro.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.9 required=5.0 tests=BAYES_00,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_HI,RCVD_IN_MSPIKE_H3,RCVD_IN_MSPIKE_WL,SPF_HELO_NONE
	autolearn=disabled version=3.4.2
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 84E0A60665;
	Tue, 18 Aug 2020 01:38:48 +0000 (UTC)
X-Original-To: linaro-mm-sig@lists.linaro.org
Delivered-To: linaro-mm-sig@lists.linaro.org
Received: from lists.linaro.org (localhost [127.0.0.1])
 by lists.linaro.org (Postfix) with ESMTP id 7065160665
 for <linaro-mm-sig@lists.linaro.org>; Tue, 18 Aug 2020 01:38:35 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
 id 625B061813; Tue, 18 Aug 2020 01:38:35 +0000 (UTC)
Received: from mail-pg1-f194.google.com (mail-pg1-f194.google.com
 [209.85.215.194])
 by lists.linaro.org (Postfix) with ESMTPS id 6DDBA60665
 for <linaro-mm-sig@lists.linaro.org>; Tue, 18 Aug 2020 01:38:12 +0000 (UTC)
Received: by mail-pg1-f194.google.com with SMTP id g33so8985117pgb.4
 for <linaro-mm-sig@lists.linaro.org>; Mon, 17 Aug 2020 18:38:12 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=yTXHltcdbKvyh8GcpxIR1d2yJ6IbFWnfq+GN4/YNr4U=;
 b=iWV1BaItIVXQCiN5D7sW4msYlqG2hg8YxIb1SXW5l1b7+5OsjJlpSbXp7YtxAtVKT9
 IcV37qAyITLg2pylu/LIPwp/B5ikDnyS8mpIVZf7X/CI/mSqiOt1xxRv8+r/3N+Qucik
 0yngu3fTwlykpacWLGYzAh376khBLxjr4JbPCykKFLXNrMRLrZDEuflxekskVsJf4Qla
 EmGl76uJouSNDNlMT7UAwnaFeHwOCzMkwibCuMkUi8ZQwPhQKdu3XhkjAYoZLhb1Mb0s
 0aqokxyFYfeAgr52VCtSA/pZdQZsaiRAvwMdkXIvvblM2BuI5WCNqJRAAv+YJSrDNb99
 xSNQ==
X-Gm-Message-State: AOAM533Dg0sOHl1dTsMfz9zBdrnGh6yB2/0/Fe4MaFaaEVPslg2U7Pet
 qIZYJbxJeP/0OdZZwGPVwRgOvQ==
X-Google-Smtp-Source: ABdhPJxgdfDqMxdNvEw5qMYhQbUx8h6Di5aRczTvfCQ+euLTk5u9tWDXHUglhX2SyYcROCo85B2tpw==
X-Received: by 2002:aa7:8a50:: with SMTP id n16mr13454624pfa.81.1597714691626; 
 Mon, 17 Aug 2020 18:38:11 -0700 (PDT)
Received: from localhost ([2401:fa00:8f:203:f693:9fff:fef4:a930])
 by smtp.gmail.com with ESMTPSA id n26sm21331726pff.30.2020.08.17.18.38.08
 (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);
 Mon, 17 Aug 2020 18:38:11 -0700 (PDT)
From: David Stevens <stevensd@chromium.org>
To: Gerd Hoffmann <kraxel@redhat.com>
Date: Tue, 18 Aug 2020 10:37:44 +0900
Message-Id: <20200818013744.3327271-4-stevensd@chromium.org>
X-Mailer: git-send-email 2.28.0.220.ged08abb693-goog
In-Reply-To: <20200818013744.3327271-1-stevensd@chromium.org>
References: <20200818013744.3327271-1-stevensd@chromium.org>
MIME-Version: 1.0
X-Virus-Scanned: ClamAV using ClamSMTP
Cc: dri-devel@lists.freedesktop.org, virtio-dev@lists.oasis-open.org,
 Thomas Zimmermann <tzimmermann@suse.de>,
 "Michael S . Tsirkin" <mst@redhat.com>, David Airlie <airlied@linux.ie>,
 Jason Wang <jasowang@redhat.com>,
 Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
 linux-kernel@vger.kernel.org, Maxime Ripard <mripard@kernel.org>,
 virtualization@lists.linux-foundation.org, linaro-mm-sig@lists.linaro.org,
 David Stevens <stevensd@chromium.org>, Daniel Vetter <daniel@ffwll.ch>,
 linux-media@vger.kernel.org
Subject: [Linaro-mm-sig] [PATCH v6 3/3] drm/virtio: Support virtgpu exported
	resources
X-BeenThere: linaro-mm-sig@lists.linaro.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: "Unified memory management interest group."
 <linaro-mm-sig.lists.linaro.org>
List-Unsubscribe: <https://lists.linaro.org/mailman/options/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=unsubscribe>
List-Archive: <http://lists.linaro.org/pipermail/linaro-mm-sig/>
List-Post: <mailto:linaro-mm-sig@lists.linaro.org>
List-Help: <mailto:linaro-mm-sig-request@lists.linaro.org?subject=help>
List-Subscribe: <https://lists.linaro.org/mailman/listinfo/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linaro-mm-sig-bounces@lists.linaro.org
Sender: "Linaro-mm-sig" <linaro-mm-sig-bounces@lists.linaro.org>
X-Virus-Scanned: ClamAV using ClamSMTP

QWRkIHN1cHBvcnQgZm9yIFVVSUQtYmFzZWQgcmVzb3VyY2Ugc2hhcmluZyBtZWNoYW5pc20gdG8g
dmlydGdwdS4gVGhpcwppbXBsZW1lbnRzIHRoZSBuZXcgdmlydGdwdSBjb21tYW5kcyBhbmQgaG9v
a3MgdGhlbSB1cCB0byBkbWEtYnVmJ3MKZ2V0X3V1aWQgY2FsbGJhY2suCgpTaWduZWQtb2ZmLWJ5
OiBEYXZpZCBTdGV2ZW5zIDxzdGV2ZW5zZEBjaHJvbWl1bS5vcmc+Ci0tLQogZHJpdmVycy9ncHUv
ZHJtL3ZpcnRpby92aXJ0Z3B1X2Rydi5jICAgfCAgMyArCiBkcml2ZXJzL2dwdS9kcm0vdmlydGlv
L3ZpcnRncHVfZHJ2LmggICB8IDIwICsrKysrKwogZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0
Z3B1X2ttcy5jICAgfCAgNCArKwogZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3ByaW1l
LmMgfCA5NiArKysrKysrKysrKysrKysrKysrKysrKysrLQogZHJpdmVycy9ncHUvZHJtL3ZpcnRp
by92aXJ0Z3B1X3ZxLmMgICAgfCA1NSArKysrKysrKysrKysrKysKIDUgZmlsZXMgY2hhbmdlZCwg
MTc1IGluc2VydGlvbnMoKyksIDMgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL3ZpcnRpby92aXJ0Z3B1X2Rydi5jIGIvZHJpdmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0
Z3B1X2Rydi5jCmluZGV4IGFiNGJlZDc4ZTY1Ni4uYjAzOWY0OTNiZGE5IDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfZHJ2LmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L3ZpcnRpby92aXJ0Z3B1X2Rydi5jCkBAIC0xNjUsNiArMTY1LDcgQEAgc3RhdGljIHVuc2lnbmVk
IGludCBmZWF0dXJlc1tdID0gewogCVZJUlRJT19HUFVfRl9WSVJHTCwKICNlbmRpZgogCVZJUlRJ
T19HUFVfRl9FRElELAorCVZJUlRJT19HUFVfRl9SRVNPVVJDRV9VVUlELAogfTsKIHN0YXRpYyBz
dHJ1Y3QgdmlydGlvX2RyaXZlciB2aXJ0aW9fZ3B1X2RyaXZlciA9IHsKIAkuZmVhdHVyZV90YWJs
ZSA9IGZlYXR1cmVzLApAQCAtMjAyLDYgKzIwMyw4IEBAIHN0YXRpYyBzdHJ1Y3QgZHJtX2RyaXZl
ciBkcml2ZXIgPSB7CiAJLnByaW1lX2hhbmRsZV90b19mZCA9IGRybV9nZW1fcHJpbWVfaGFuZGxl
X3RvX2ZkLAogCS5wcmltZV9mZF90b19oYW5kbGUgPSBkcm1fZ2VtX3ByaW1lX2ZkX3RvX2hhbmRs
ZSwKIAkuZ2VtX3ByaW1lX21tYXAgPSBkcm1fZ2VtX3ByaW1lX21tYXAsCisJLmdlbV9wcmltZV9l
eHBvcnQgPSB2aXJ0Z3B1X2dlbV9wcmltZV9leHBvcnQsCisJLmdlbV9wcmltZV9pbXBvcnQgPSB2
aXJ0Z3B1X2dlbV9wcmltZV9pbXBvcnQsCiAJLmdlbV9wcmltZV9pbXBvcnRfc2dfdGFibGUgPSB2
aXJ0Z3B1X2dlbV9wcmltZV9pbXBvcnRfc2dfdGFibGUsCiAKIAkuZ2VtX2NyZWF0ZV9vYmplY3Qg
PSB2aXJ0aW9fZ3B1X2NyZWF0ZV9vYmplY3QsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
dmlydGlvL3ZpcnRncHVfZHJ2LmggYi9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfZHJ2
LmgKaW5kZXggNDliZWJkZWU2ZDkxLi4zOWRjOTA3YWE4MDUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS92aXJ0aW8vdmlydGdwdV9kcnYuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vdmlydGlv
L3ZpcnRncHVfZHJ2LmgKQEAgLTQ5LDYgKzQ5LDEwIEBACiAjZGVmaW5lIERSSVZFUl9NSU5PUiAx
CiAjZGVmaW5lIERSSVZFUl9QQVRDSExFVkVMIDAKIAorI2RlZmluZSBVVUlEX0lOSVRJQUxJWklO
RyAwCisjZGVmaW5lIFVVSURfSU5JVElBTElaRUQgMQorI2RlZmluZSBVVUlEX0lOSVRJQUxJWkFU
SU9OX0ZBSUxFRCAyCisKIHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdF9wYXJhbXMgewogCXVpbnQz
Ml90IGZvcm1hdDsKIAl1aW50MzJfdCB3aWR0aDsKQEAgLTcxLDYgKzc1LDkgQEAgc3RydWN0IHZp
cnRpb19ncHVfb2JqZWN0IHsKIAl1aW50MzJfdCBod19yZXNfaGFuZGxlOwogCWJvb2wgZHVtYjsK
IAlib29sIGNyZWF0ZWQ7CisKKwlpbnQgdXVpZF9zdGF0ZTsKKwl1dWlkX3QgdXVpZDsKIH07CiAj
ZGVmaW5lIGdlbV90b192aXJ0aW9fZ3B1X29iaihnb2JqKSBcCiAJY29udGFpbmVyX29mKChnb2Jq
KSwgc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0LCBiYXNlLmJhc2UpCkBAIC0yMDAsNiArMjA3LDcg
QEAgc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlIHsKIAlib29sIGhhc192aXJnbF8zZDsKIAlib29s
IGhhc19lZGlkOwogCWJvb2wgaGFzX2luZGlyZWN0OworCWJvb2wgaGFzX3Jlc291cmNlX2Fzc2ln
bl91dWlkOwogCiAJc3RydWN0IHdvcmtfc3RydWN0IGNvbmZpZ19jaGFuZ2VkX3dvcms7CiAKQEAg
LTIxMCw2ICsyMTgsOCBAQCBzdHJ1Y3QgdmlydGlvX2dwdV9kZXZpY2UgewogCXN0cnVjdCB2aXJ0
aW9fZ3B1X2Rydl9jYXBzZXQgKmNhcHNldHM7CiAJdWludDMyX3QgbnVtX2NhcHNldHM7CiAJc3Ry
dWN0IGxpc3RfaGVhZCBjYXBfY2FjaGU7CisKKwlzcGlubG9ja190IHJlc291cmNlX2V4cG9ydF9s
b2NrOwogfTsKIAogc3RydWN0IHZpcnRpb19ncHVfZnByaXYgewpAQCAtMzM1LDYgKzM0NSwxMCBA
QCB2b2lkIHZpcnRpb19ncHVfZGVxdWV1ZV9mZW5jZV9mdW5jKHN0cnVjdCB3b3JrX3N0cnVjdCAq
d29yayk7CiAKIHZvaWQgdmlydGlvX2dwdV9ub3RpZnkoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNl
ICp2Z2Rldik7CiAKK2ludAordmlydGlvX2dwdV9jbWRfcmVzb3VyY2VfYXNzaWduX3V1aWQoc3Ry
dWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldiwKKwkJCQkgICAgc3RydWN0IHZpcnRpb19ncHVf
b2JqZWN0X2FycmF5ICpvYmpzKTsKKwogLyogdmlydGdwdV9kaXNwbGF5LmMgKi8KIHZvaWQgdmly
dGlvX2dwdV9tb2Rlc2V0X2luaXQoc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2Rldik7CiB2
b2lkIHZpcnRpb19ncHVfbW9kZXNldF9maW5pKHN0cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdk
ZXYpOwpAQCAtMzY2LDYgKzM4MCwxMiBAQCBpbnQgdmlydGlvX2dwdV9vYmplY3RfY3JlYXRlKHN0
cnVjdCB2aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXYsCiBib29sIHZpcnRpb19ncHVfaXNfc2htZW0o
c3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibyk7CiAKIC8qIHZpcnRncHVfcHJpbWUuYyAqLwor
c3RydWN0IGRtYV9idWYgKnZpcnRncHVfZ2VtX3ByaW1lX2V4cG9ydChzdHJ1Y3QgZHJtX2dlbV9v
YmplY3QgKm9iaiwKKwkJCQkJIGludCBmbGFncyk7CitzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKnZp
cnRncHVfZ2VtX3ByaW1lX2ltcG9ydChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAorCQkJCQkJc3Ry
dWN0IGRtYV9idWYgKmJ1Zik7CitpbnQgdmlydGdwdV9nZW1fcHJpbWVfZ2V0X3V1aWQoc3RydWN0
IGRybV9nZW1fb2JqZWN0ICpvYmosCisJCQkgICAgICAgdXVpZF90ICp1dWlkKTsKIHN0cnVjdCBk
cm1fZ2VtX29iamVjdCAqdmlydGdwdV9nZW1fcHJpbWVfaW1wb3J0X3NnX3RhYmxlKAogCXN0cnVj
dCBkcm1fZGV2aWNlICpkZXYsIHN0cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQgKmF0dGFjaCwKIAlz
dHJ1Y3Qgc2dfdGFibGUgKnNndCk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlv
L3ZpcnRncHVfa21zLmMgYi9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfa21zLmMKaW5k
ZXggMDIzYTAzMGNhN2I5Li43YmNkMGM3NWVmZmEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS92aXJ0aW8vdmlydGdwdV9rbXMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRn
cHVfa21zLmMKQEAgLTEyNSw2ICsxMjUsNyBAQCBpbnQgdmlydGlvX2dwdV9pbml0KHN0cnVjdCBk
cm1fZGV2aWNlICpkZXYpCiAJdmdkZXYtPmRldiA9IGRldi0+ZGV2OwogCiAJc3Bpbl9sb2NrX2lu
aXQoJnZnZGV2LT5kaXNwbGF5X2luZm9fbG9jayk7CisJc3Bpbl9sb2NrX2luaXQoJnZnZGV2LT5y
ZXNvdXJjZV9leHBvcnRfbG9jayk7CiAJaWRhX2luaXQoJnZnZGV2LT5jdHhfaWRfaWRhKTsKIAlp
ZGFfaW5pdCgmdmdkZXYtPnJlc291cmNlX2lkYSk7CiAJaW5pdF93YWl0cXVldWVfaGVhZCgmdmdk
ZXYtPnJlc3Bfd3EpOwpAQCAtMTUzLDYgKzE1NCw5IEBAIGludCB2aXJ0aW9fZ3B1X2luaXQoc3Ry
dWN0IGRybV9kZXZpY2UgKmRldikKIAlpZiAodmlydGlvX2hhc19mZWF0dXJlKHZnZGV2LT52ZGV2
LCBWSVJUSU9fUklOR19GX0lORElSRUNUX0RFU0MpKSB7CiAJCXZnZGV2LT5oYXNfaW5kaXJlY3Qg
PSB0cnVlOwogCX0KKwlpZiAodmlydGlvX2hhc19mZWF0dXJlKHZnZGV2LT52ZGV2LCBWSVJUSU9f
R1BVX0ZfUkVTT1VSQ0VfVVVJRCkpIHsKKwkJdmdkZXYtPmhhc19yZXNvdXJjZV9hc3NpZ25fdXVp
ZCA9IHRydWU7CisJfQogCiAJRFJNX0lORk8oImZlYXR1cmVzOiAlY3ZpcmdsICVjZWRpZFxuIiwK
IAkJIHZnZGV2LT5oYXNfdmlyZ2xfM2QgPyAnKycgOiAnLScsCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfcHJpbWUuYyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8v
dmlydGdwdV9wcmltZS5jCmluZGV4IDA1MGQyNGMzOWE4Zi4uYWNkMTRlZjczZDU2IDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfcHJpbWUuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vdmlydGlvL3ZpcnRncHVfcHJpbWUuYwpAQCAtMjMsMTIgKzIzLDEwMiBAQAogICov
CiAKICNpbmNsdWRlIDxkcm0vZHJtX3ByaW1lLmg+CisjaW5jbHVkZSA8bGludXgvdmlydGlvX2Rt
YV9idWYuaD4KIAogI2luY2x1ZGUgInZpcnRncHVfZHJ2LmgiCiAKLS8qIEVtcHR5IEltcGxlbWVu
dGF0aW9ucyBhcyB0aGVyZSBzaG91bGQgbm90IGJlIGFueSBvdGhlciBkcml2ZXIgZm9yIGEgdmly
dHVhbAotICogZGV2aWNlIHRoYXQgbWlnaHQgc2hhcmUgYnVmZmVycyB3aXRoIHZpcnRncHUKLSAq
Lworc3RhdGljIGludCB2aXJ0Z3B1X3ZpcnRpb19nZXRfdXVpZChzdHJ1Y3QgZG1hX2J1ZiAqYnVm
LAorCQkJCSAgIHV1aWRfdCAqdXVpZCkKK3sKKwlzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaiA9
IGJ1Zi0+cHJpdjsKKwlzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKmJvID0gZ2VtX3RvX3ZpcnRp
b19ncHVfb2JqKG9iaik7CisJc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2Z2RldiA9IG9iai0+
ZGV2LT5kZXZfcHJpdmF0ZTsKKworCXdhaXRfZXZlbnQodmdkZXYtPnJlc3Bfd3EsIGJvLT51dWlk
X3N0YXRlICE9IFVVSURfSU5JVElBTElaSU5HKTsKKwlpZiAoYm8tPnV1aWRfc3RhdGUgIT0gVVVJ
RF9JTklUSUFMSVpFRCkKKwkJcmV0dXJuIC1FTk9ERVY7CisKKwl1dWlkX2NvcHkodXVpZCwgJmJv
LT51dWlkKTsKKworCXJldHVybiAwOworfQorCitjb25zdCBzdHJ1Y3QgdmlydGlvX2RtYV9idWZf
b3BzIHZpcnRncHVfZG1hYnVmX29wcyA9ICB7CisJLm9wcyA9IHsKKwkJLmNhY2hlX3NndF9tYXBw
aW5nID0gdHJ1ZSwKKwkJLmF0dGFjaCA9IHZpcnRpb19kbWFfYnVmX2F0dGFjaCwKKwkJLmRldGFj
aCA9IGRybV9nZW1fbWFwX2RldGFjaCwKKwkJLm1hcF9kbWFfYnVmID0gZHJtX2dlbV9tYXBfZG1h
X2J1ZiwKKwkJLnVubWFwX2RtYV9idWYgPSBkcm1fZ2VtX3VubWFwX2RtYV9idWYsCisJCS5yZWxl
YXNlID0gZHJtX2dlbV9kbWFidWZfcmVsZWFzZSwKKwkJLm1tYXAgPSBkcm1fZ2VtX2RtYWJ1Zl9t
bWFwLAorCQkudm1hcCA9IGRybV9nZW1fZG1hYnVmX3ZtYXAsCisJCS52dW5tYXAgPSBkcm1fZ2Vt
X2RtYWJ1Zl92dW5tYXAsCisJfSwKKwkuZGV2aWNlX2F0dGFjaCA9IGRybV9nZW1fbWFwX2F0dGFj
aCwKKwkuZ2V0X3V1aWQgPSB2aXJ0Z3B1X3ZpcnRpb19nZXRfdXVpZCwKK307CisKK3N0cnVjdCBk
bWFfYnVmICp2aXJ0Z3B1X2dlbV9wcmltZV9leHBvcnQoc3RydWN0IGRybV9nZW1fb2JqZWN0ICpv
YmosCisJCQkJCSBpbnQgZmxhZ3MpCit7CisJc3RydWN0IGRtYV9idWYgKmJ1ZjsKKwlzdHJ1Y3Qg
ZHJtX2RldmljZSAqZGV2ID0gb2JqLT5kZXY7CisJc3RydWN0IHZpcnRpb19ncHVfZGV2aWNlICp2
Z2RldiA9IGRldi0+ZGV2X3ByaXZhdGU7CisJc3RydWN0IHZpcnRpb19ncHVfb2JqZWN0ICpibyA9
IGdlbV90b192aXJ0aW9fZ3B1X29iaihvYmopOworCXN0cnVjdCB2aXJ0aW9fZ3B1X29iamVjdF9h
cnJheSAqb2JqczsKKwlpbnQgcmV0ID0gMDsKKwlERUZJTkVfRE1BX0JVRl9FWFBPUlRfSU5GTyhl
eHBfaW5mbyk7CisKKwlpZiAodmdkZXYtPmhhc19yZXNvdXJjZV9hc3NpZ25fdXVpZCkgeworCQlv
YmpzID0gdmlydGlvX2dwdV9hcnJheV9hbGxvYygxKTsKKwkJaWYgKCFvYmpzKQorCQkJcmV0dXJu
IEVSUl9QVFIoLUVOT01FTSk7CisJCXZpcnRpb19ncHVfYXJyYXlfYWRkX29iaihvYmpzLCAmYm8t
PmJhc2UuYmFzZSk7CisKKwkJcmV0ID0gdmlydGlvX2dwdV9jbWRfcmVzb3VyY2VfYXNzaWduX3V1
aWQodmdkZXYsIG9ianMpOworCQlpZiAocmV0KQorCQkJcmV0dXJuIEVSUl9QVFIocmV0KTsKKwkJ
dmlydGlvX2dwdV9ub3RpZnkodmdkZXYpOworCX0gZWxzZSB7CisJCWJvLT51dWlkX3N0YXRlID0g
VVVJRF9JTklUSUFMSVpBVElPTl9GQUlMRUQ7CisJfQorCisJZXhwX2luZm8ub3BzID0gJnZpcnRn
cHVfZG1hYnVmX29wcy5vcHM7CisJZXhwX2luZm8uc2l6ZSA9IG9iai0+c2l6ZTsKKwlleHBfaW5m
by5mbGFncyA9IGZsYWdzOworCWV4cF9pbmZvLnByaXYgPSBvYmo7CisJZXhwX2luZm8ucmVzdiA9
IG9iai0+cmVzdjsKKworCWJ1ZiA9IHZpcnRpb19kbWFfYnVmX2V4cG9ydCgmZXhwX2luZm8pOwor
CWlmIChJU19FUlIoYnVmKSkKKwkJcmV0dXJuIGJ1ZjsKKworCWRybV9kZXZfZ2V0KGRldik7CisJ
ZHJtX2dlbV9vYmplY3RfZ2V0KG9iaik7CisKKwlyZXR1cm4gYnVmOworfQorCitzdHJ1Y3QgZHJt
X2dlbV9vYmplY3QgKnZpcnRncHVfZ2VtX3ByaW1lX2ltcG9ydChzdHJ1Y3QgZHJtX2RldmljZSAq
ZGV2LAorCQkJCQkJc3RydWN0IGRtYV9idWYgKmJ1ZikKK3sKKwlzdHJ1Y3QgZHJtX2dlbV9vYmpl
Y3QgKm9iajsKKworCWlmIChidWYtPm9wcyA9PSAmdmlydGdwdV9kbWFidWZfb3BzLm9wcykgewor
CQlvYmogPSBidWYtPnByaXY7CisJCWlmIChvYmotPmRldiA9PSBkZXYpIHsKKwkJCS8qCisJCQkg
KiBJbXBvcnRpbmcgZG1hYnVmIGV4cG9ydGVkIGZyb20gb3VyIG93biBnZW0gaW5jcmVhc2VzCisJ
CQkgKiByZWZjb3VudCBvbiBnZW0gaXRzZWxmIGluc3RlYWQgb2YgZl9jb3VudCBvZiBkbWFidWYu
CisJCQkgKi8KKwkJCWRybV9nZW1fb2JqZWN0X2dldChvYmopOworCQkJcmV0dXJuIG9iajsKKwkJ
fQorCX0KKworCXJldHVybiBkcm1fZ2VtX3ByaW1lX2ltcG9ydChkZXYsIGJ1Zik7Cit9CiAKIHN0
cnVjdCBkcm1fZ2VtX29iamVjdCAqdmlydGdwdV9nZW1fcHJpbWVfaW1wb3J0X3NnX3RhYmxlKAog
CXN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHN0cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQgKmF0dGFj
aCwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV92cS5jIGIvZHJp
dmVycy9ncHUvZHJtL3ZpcnRpby92aXJ0Z3B1X3ZxLmMKaW5kZXggOWU2NjNhNWQ5OTUyLi41NWFm
NmZjN2JjN2MgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV92cS5j
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS92aXJ0aW8vdmlydGdwdV92cS5jCkBAIC0xMTA3LDMgKzEx
MDcsNTggQEAgdm9pZCB2aXJ0aW9fZ3B1X2N1cnNvcl9waW5nKHN0cnVjdCB2aXJ0aW9fZ3B1X2Rl
dmljZSAqdmdkZXYsCiAJbWVtY3B5KGN1cl9wLCAmb3V0cHV0LT5jdXJzb3IsIHNpemVvZihvdXRw
dXQtPmN1cnNvcikpOwogCXZpcnRpb19ncHVfcXVldWVfY3Vyc29yKHZnZGV2LCB2YnVmKTsKIH0K
Kworc3RhdGljIHZvaWQgdmlydGlvX2dwdV9jbWRfcmVzb3VyY2VfdXVpZF9jYihzdHJ1Y3Qgdmly
dGlvX2dwdV9kZXZpY2UgKnZnZGV2LAorCQkJCQkgICAgc3RydWN0IHZpcnRpb19ncHVfdmJ1ZmZl
ciAqdmJ1ZikKK3sKKwlzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKm9iaiA9CisJCWdlbV90b192
aXJ0aW9fZ3B1X29iaih2YnVmLT5vYmpzLT5vYmpzWzBdKTsKKwlzdHJ1Y3QgdmlydGlvX2dwdV9y
ZXNwX3Jlc291cmNlX3V1aWQgKnJlc3AgPQorCQkoc3RydWN0IHZpcnRpb19ncHVfcmVzcF9yZXNv
dXJjZV91dWlkICopdmJ1Zi0+cmVzcF9idWY7CisJdWludDMyX3QgcmVzcF90eXBlID0gbGUzMl90
b19jcHUocmVzcC0+aGRyLnR5cGUpOworCisJc3Bpbl9sb2NrKCZ2Z2Rldi0+cmVzb3VyY2VfZXhw
b3J0X2xvY2spOworCVdBUk5fT04ob2JqLT51dWlkX3N0YXRlICE9IFVVSURfSU5JVElBTElaSU5H
KTsKKworCWlmIChyZXNwX3R5cGUgPT0gVklSVElPX0dQVV9SRVNQX09LX1JFU09VUkNFX1VVSUQg
JiYKKwkJCW9iai0+dXVpZF9zdGF0ZSA9PSBVVUlEX0lOSVRJQUxJWklORykgeworCQltZW1jcHko
Jm9iai0+dXVpZC5iLCByZXNwLT51dWlkLCBzaXplb2Yob2JqLT51dWlkLmIpKTsKKwkJb2JqLT51
dWlkX3N0YXRlID0gVVVJRF9JTklUSUFMSVpFRDsKKwl9IGVsc2UgeworCQlvYmotPnV1aWRfc3Rh
dGUgPSBVVUlEX0lOSVRJQUxJWkFUSU9OX0ZBSUxFRDsKKwl9CisJc3Bpbl91bmxvY2soJnZnZGV2
LT5yZXNvdXJjZV9leHBvcnRfbG9jayk7CisKKwl3YWtlX3VwX2FsbCgmdmdkZXYtPnJlc3Bfd3Ep
OworfQorCitpbnQKK3ZpcnRpb19ncHVfY21kX3Jlc291cmNlX2Fzc2lnbl91dWlkKHN0cnVjdCB2
aXJ0aW9fZ3B1X2RldmljZSAqdmdkZXYsCisJCQkJICAgIHN0cnVjdCB2aXJ0aW9fZ3B1X29iamVj
dF9hcnJheSAqb2JqcykKK3sKKwlzdHJ1Y3QgdmlydGlvX2dwdV9vYmplY3QgKmJvID0gZ2VtX3Rv
X3ZpcnRpb19ncHVfb2JqKG9ianMtPm9ianNbMF0pOworCXN0cnVjdCB2aXJ0aW9fZ3B1X3Jlc291
cmNlX2Fzc2lnbl91dWlkICpjbWRfcDsKKwlzdHJ1Y3QgdmlydGlvX2dwdV92YnVmZmVyICp2YnVm
OworCXN0cnVjdCB2aXJ0aW9fZ3B1X3Jlc3BfcmVzb3VyY2VfdXVpZCAqcmVzcF9idWY7CisKKwly
ZXNwX2J1ZiA9IGt6YWxsb2Moc2l6ZW9mKCpyZXNwX2J1ZiksIEdGUF9LRVJORUwpOworCWlmICgh
cmVzcF9idWYpIHsKKwkJc3Bpbl9sb2NrKCZ2Z2Rldi0+cmVzb3VyY2VfZXhwb3J0X2xvY2spOwor
CQliby0+dXVpZF9zdGF0ZSA9IFVVSURfSU5JVElBTElaQVRJT05fRkFJTEVEOworCQlzcGluX3Vu
bG9jaygmdmdkZXYtPnJlc291cmNlX2V4cG9ydF9sb2NrKTsKKwkJdmlydGlvX2dwdV9hcnJheV9w
dXRfZnJlZShvYmpzKTsKKwkJcmV0dXJuIC1FTk9NRU07CisJfQorCisJY21kX3AgPSB2aXJ0aW9f
Z3B1X2FsbG9jX2NtZF9yZXNwKHZnZGV2LAorCQl2aXJ0aW9fZ3B1X2NtZF9yZXNvdXJjZV91dWlk
X2NiLCAmdmJ1Ziwgc2l6ZW9mKCpjbWRfcCksCisJCXNpemVvZihzdHJ1Y3QgdmlydGlvX2dwdV9y
ZXNwX3Jlc291cmNlX3V1aWQpLCByZXNwX2J1Zik7CisJbWVtc2V0KGNtZF9wLCAwLCBzaXplb2Yo
KmNtZF9wKSk7CisKKwljbWRfcC0+aGRyLnR5cGUgPSBjcHVfdG9fbGUzMihWSVJUSU9fR1BVX0NN
RF9SRVNPVVJDRV9BU1NJR05fVVVJRCk7CisJY21kX3AtPnJlc291cmNlX2lkID0gY3B1X3RvX2xl
MzIoYm8tPmh3X3Jlc19oYW5kbGUpOworCisJdmJ1Zi0+b2JqcyA9IG9ianM7CisJdmlydGlvX2dw
dV9xdWV1ZV9jdHJsX2J1ZmZlcih2Z2RldiwgdmJ1Zik7CisJcmV0dXJuIDA7Cit9Ci0tIAoyLjI4
LjAuMjIwLmdlZDA4YWJiNjkzLWdvb2cKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fCkxpbmFyby1tbS1zaWcgbWFpbGluZyBsaXN0CkxpbmFyby1tbS1zaWdA
bGlzdHMubGluYXJvLm9yZwpodHRwczovL2xpc3RzLmxpbmFyby5vcmcvbWFpbG1hbi9saXN0aW5m
by9saW5hcm8tbW0tc2lnCg==
