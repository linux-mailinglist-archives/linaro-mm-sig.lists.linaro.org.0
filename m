Return-Path: <linaro-mm-sig-bounces@lists.linaro.org>
X-Original-To: lists+linaro-mm-sig@lfdr.de
Delivered-To: lists+linaro-mm-sig@lfdr.de
Received: from lists.linaro.org (lists.linaro.org [107.22.173.205])
	by mail.lfdr.de (Postfix) with ESMTPS id 09C8C3D5C70
	for <lists+linaro-mm-sig@lfdr.de>; Mon, 26 Jul 2021 16:57:09 +0200 (CEST)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 26245634E2
	for <lists+linaro-mm-sig@lfdr.de>; Mon, 26 Jul 2021 14:57:08 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
	id 166B0634DE; Mon, 26 Jul 2021 14:57:06 +0000 (UTC)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id BD3E0634D1;
	Mon, 26 Jul 2021 14:57:02 +0000 (UTC)
X-Original-To: linaro-mm-sig@lists.linaro.org
Delivered-To: linaro-mm-sig@lists.linaro.org
Received: from lists.linaro.org (localhost [127.0.0.1])
 by lists.linaro.org (Postfix) with ESMTP id 91384634CD
 for <linaro-mm-sig@lists.linaro.org>; Mon, 26 Jul 2021 14:57:00 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
 id 69D2260570; Mon, 26 Jul 2021 14:56:59 +0000 (UTC)
Received: from mail-pl1-f169.google.com (mail-pl1-f169.google.com
 [209.85.214.169])
 by lists.linaro.org (Postfix) with ESMTPS id DBEAC634D1
 for <linaro-mm-sig@lists.linaro.org>; Mon, 26 Jul 2021 14:56:56 +0000 (UTC)
Received: by mail-pl1-f169.google.com with SMTP id d17so11871429plh.10
 for <linaro-mm-sig@lists.linaro.org>; Mon, 26 Jul 2021 07:56:56 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=jHOVb6r3WpAofmlGsmL5mtg0yFx6CL86twSso5VEFMc=;
 b=nASXoX0u7PbJ5b5yDhy2tDjlhCB1i3pzkZap/gO8wA+EpivKEaTfP6fVxGm1L26jd8
 H2Wgrq1Pgnj0OA7zAdt6/U/+OIdSAFZIxSnQrbcEdVPodzQw7YXfJFr1gt42Pl/wK6LO
 qhfX9UuJRI/bT440gaW+xkftI5+0atNWWYisOJi96rcup/PDRgp1JPTNiBj/TgUfkkYv
 +Vchb3UV6V0b3dfFscYppZYo4Tq3cbEPzhrYDBtieRl0XtpTaq+oZ5yLr0ylFqHvk+jq
 q0C1Jn3aLQkImlSog5JcVRSdhA/ANKfmr6RLmw+AePBMI6o6MlkZ01fU9/QV9yucK5jW
 Wo6g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=jHOVb6r3WpAofmlGsmL5mtg0yFx6CL86twSso5VEFMc=;
 b=G/IMpNlBtnY9PsW+DdI1Qc53KjgrYwWfg429AWmoEp1ZF/yBdTOjyrPnQIWpuBQ4F6
 EnGHQM3vS+2vgVGJh3b9LFk6IkJXGiAsDnkeCzIC55OLNczMJ/90YOStxsD1EQOhSg+j
 LZmuZF6Xk0OjcPJzwU7MvW2A/QDrYXlD99iEcQCDNMFTf3ytl2QwNpDplJSYcjPL/X4k
 NMQ4M/ycQVox39AqyP9oARMF/mPfA3N395v3oAH5CZERATU1j8UKHgZ9GvDlbeoA+MVm
 W4wOEwGOZwvaZeuhkBBm5cO7C94BRcXPVyInZeWNFFvrhOeEKZ07xLI3pQ7LuTsdzTwU
 ow1Q==
X-Gm-Message-State: AOAM5330xACXKBTdJXvcWiQFOMJpZYjyQFRgBNQa26lCo8pSX5YZsZ/K
 36QBS6Iiyy0tBZAHHQ9Z2Ng=
X-Google-Smtp-Source: ABdhPJyU3D09tWWyq5XsRn3NEufDpH+uG/cjmiUcn5bNss01MB3N13+RNI0a0xXny1WftzqenLoAgg==
X-Received: by 2002:a17:903:1cf:b029:12a:da08:f8e3 with SMTP id
 e15-20020a17090301cfb029012ada08f8e3mr14554030plh.15.1627311415760; 
 Mon, 26 Jul 2021 07:56:55 -0700 (PDT)
Received: from localhost ([2601:1c0:5200:a6:307:a401:7b76:c6e5])
 by smtp.gmail.com with ESMTPSA id g3sm232577pfi.197.2021.07.26.07.56.54
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Mon, 26 Jul 2021 07:56:54 -0700 (PDT)
From: Rob Clark <robdclark@gmail.com>
To: dri-devel@lists.freedesktop.org
Date: Mon, 26 Jul 2021 08:00:23 -0700
Message-Id: <20210726150038.2187631-10-robdclark@gmail.com>
X-Mailer: git-send-email 2.31.1
In-Reply-To: <20210726150038.2187631-1-robdclark@gmail.com>
References: <20210726150038.2187631-1-robdclark@gmail.com>
MIME-Version: 1.0
X-Virus-Scanned: ClamAV using ClamSMTP
Subject: [Linaro-mm-sig] [PATCH v2 09/12] drm/msm: Conversion to drm
 scheduler
X-BeenThere: linaro-mm-sig@lists.linaro.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: "Unified memory management interest group."
 <linaro-mm-sig.lists.linaro.org>
List-Unsubscribe: <https://lists.linaro.org/mailman/options/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=unsubscribe>
List-Archive: <http://lists.linaro.org/pipermail/linaro-mm-sig/>
List-Post: <mailto:linaro-mm-sig@lists.linaro.org>
List-Help: <mailto:linaro-mm-sig-request@lists.linaro.org?subject=help>
List-Subscribe: <https://lists.linaro.org/mailman/listinfo/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=subscribe>
Cc: Rob Clark <robdclark@chromium.org>,
 "open list:DRM DRIVER FOR MSM ADRENO GPU"
 <freedreno@lists.freedesktop.org>, David Airlie <airlied@linux.ie>,
 "open list:DRM DRIVER FOR MSM ADRENO GPU" <linux-arm-msm@vger.kernel.org>,
 open list <linux-kernel@vger.kernel.org>,
 "moderated list:DMA BUFFER SHARING FRAMEWORK" <linaro-mm-sig@lists.linaro.org>,
 Rob Clark <robdclark@gmail.com>, Daniel Vetter <daniel@ffwll.ch>,
 Sean Paul <sean@poorly.run>,
 =?UTF-8?q?Christian=20K=C3=B6nig?= <christian.koenig@amd.com>,
 "open list:DMA BUFFER SHARING FRAMEWORK" <linux-media@vger.kernel.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linaro-mm-sig-bounces@lists.linaro.org
Sender: "Linaro-mm-sig" <linaro-mm-sig-bounces@lists.linaro.org>
X-Virus-Scanned: ClamAV using ClamSMTP

RnJvbTogUm9iIENsYXJrIDxyb2JkY2xhcmtAY2hyb21pdW0ub3JnPgoKRm9yIGV4aXN0aW5nIGFk
cmVub3MsIHRoZXJlIGlzIG9uZSBvciBtb3JlIHJpbmdidWZmZXIsIGRlcGVuZGluZyBvbgp3aGV0
aGVyIHByZWVtcHRpb24gaXMgc3VwcG9ydGVkLiAgV2hlbiBwcmVlbXB0aW9uIGlzIHN1cHBvcnRl
ZCwgZWFjaApyaW5nYnVmZmVyIGhhcyBpdCdzIG93biBwcmlvcml0eS4gIEEgc3VibWl0cXVldWUg
KHdoaWNoIG1hcHMgdG8gYQpnbCBjb250ZXh0IG9yIHZrIHF1ZXVlIGluIHVzZXJzcGFjZSkgaXMg
bWFwcGVkIHRvIGEgc3BlY2lmaWMgcmluZy0KYnVmZmVyIGF0IGNyZWF0aW9uIHRpbWUsIGJhc2Vk
IG9uIHRoZSBzdWJtaXRxdWV1ZSdzIHByaW9yaXR5LgoKRWFjaCByaW5nYnVmZmVyIGhhcyBpdCdz
IG93biBkcm1fZ3B1X3NjaGVkdWxlci4gIEVhY2ggc3VibWl0cXVldWUKbWFwcyB0byBhIGRybV9z
Y2hlZF9lbnRpdHkuICBBbmQgZWFjaCBzdWJtaXQgbWFwcyB0byBhIGRybV9zY2hlZF9qb2IuCgpD
bG9zZXM6IGh0dHBzOi8vZ2l0bGFiLmZyZWVkZXNrdG9wLm9yZy9kcm0vbXNtLy0vaXNzdWVzLzQK
U2lnbmVkLW9mZi1ieTogUm9iIENsYXJrIDxyb2JkY2xhcmtAY2hyb21pdW0ub3JnPgpBY2tlZC1i
eTogQ2hyaXN0aWFuIEvDtm5pZyA8Y2hyaXN0aWFuLmtvZW5pZ0BhbWQuY29tPgotLS0KIGRyaXZl
cnMvZ3B1L2RybS9tc20vS2NvbmZpZyAgICAgICAgICAgfCAgIDEgKwogZHJpdmVycy9ncHUvZHJt
L21zbS9tc21fZ2VtLmMgICAgICAgICB8ICAzNSAtLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9tc20v
bXNtX2dlbS5oICAgICAgICAgfCAgMjYgKysrKy0KIGRyaXZlcnMvZ3B1L2RybS9tc20vbXNtX2dl
bV9zdWJtaXQuYyAgfCAxNjEgKysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0KIGRyaXZlcnMvZ3B1
L2RybS9tc20vbXNtX2dwdS5jICAgICAgICAgfCAgMTMgKy0tCiBkcml2ZXJzL2dwdS9kcm0vbXNt
L21zbV9ncHUuaCAgICAgICAgIHwgICAyICsKIGRyaXZlcnMvZ3B1L2RybS9tc20vbXNtX3JkLmMg
ICAgICAgICAgfCAgIDYgKy0KIGRyaXZlcnMvZ3B1L2RybS9tc20vbXNtX3JpbmdidWZmZXIuYyAg
fCAgNjYgKysrKysrKysrKysKIGRyaXZlcnMvZ3B1L2RybS9tc20vbXNtX3JpbmdidWZmZXIuaCAg
fCAgMTIgKysKIGRyaXZlcnMvZ3B1L2RybS9tc20vbXNtX3N1Ym1pdHF1ZXVlLmMgfCAgMjYgKysr
KysKIDEwIGZpbGVzIGNoYW5nZWQsIDIxNyBpbnNlcnRpb25zKCspLCAxMzEgZGVsZXRpb25zKC0p
CgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL21zbS9LY29uZmlnIGIvZHJpdmVycy9ncHUv
ZHJtL21zbS9LY29uZmlnCmluZGV4IDEwZjY5M2VhODlkMy4uODk2MjY2MjY3YWQ3IDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vbXNtL0tjb25maWcKKysrIGIvZHJpdmVycy9ncHUvZHJtL21z
bS9LY29uZmlnCkBAIC0xMiw2ICsxMiw3IEBAIGNvbmZpZyBEUk1fTVNNCiAJc2VsZWN0IFJFR1VM
QVRPUgogCXNlbGVjdCBEUk1fS01TX0hFTFBFUgogCXNlbGVjdCBEUk1fUEFORUwKKwlzZWxlY3Qg
RFJNX1NDSEVECiAJc2VsZWN0IFNITUVNCiAJc2VsZWN0IFRNUEZTCiAJc2VsZWN0IFFDT01fU0NN
IGlmIEFSQ0hfUUNPTQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL21zbS9tc21fZ2VtLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vbXNtL21zbV9nZW0uYwppbmRleCAwMGE2Mjg5Njc4ZGQuLjQxYTEx
MWM0OWNjNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL21zbS9tc21fZ2VtLmMKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL21zbS9tc21fZ2VtLmMKQEAgLTgwNiw0MSArODA2LDYgQEAgdm9pZCBt
c21fZ2VtX3Z1bm1hcChzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaikKIAltc21fb2JqLT52YWRk
ciA9IE5VTEw7CiB9CiAKLS8qIG11c3QgYmUgY2FsbGVkIGJlZm9yZSBfbW92ZV90b19hY3RpdmUo
KS4uICovCi1pbnQgbXNtX2dlbV9zeW5jX29iamVjdChzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9i
aiwKLQkJc3RydWN0IG1zbV9mZW5jZV9jb250ZXh0ICpmY3R4LCBib29sIGV4Y2x1c2l2ZSkKLXsK
LQlzdHJ1Y3QgZG1hX3Jlc3ZfbGlzdCAqZm9iajsKLQlzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZTsK
LQlpbnQgaSwgcmV0OwotCi0JZm9iaiA9IGRtYV9yZXN2X2dldF9saXN0KG9iai0+cmVzdik7Ci0J
aWYgKCFmb2JqIHx8IChmb2JqLT5zaGFyZWRfY291bnQgPT0gMCkpIHsKLQkJZmVuY2UgPSBkbWFf
cmVzdl9nZXRfZXhjbChvYmotPnJlc3YpOwotCQkvKiBkb24ndCBuZWVkIHRvIHdhaXQgb24gb3Vy
IG93biBmZW5jZXMsIHNpbmNlIHJpbmcgaXMgZmlmbyAqLwotCQlpZiAoZmVuY2UgJiYgKGZlbmNl
LT5jb250ZXh0ICE9IGZjdHgtPmNvbnRleHQpKSB7Ci0JCQlyZXQgPSBkbWFfZmVuY2Vfd2FpdChm
ZW5jZSwgdHJ1ZSk7Ci0JCQlpZiAocmV0KQotCQkJCXJldHVybiByZXQ7Ci0JCX0KLQl9Ci0KLQlp
ZiAoIWV4Y2x1c2l2ZSB8fCAhZm9iaikKLQkJcmV0dXJuIDA7Ci0KLQlmb3IgKGkgPSAwOyBpIDwg
Zm9iai0+c2hhcmVkX2NvdW50OyBpKyspIHsKLQkJZmVuY2UgPSByY3VfZGVyZWZlcmVuY2VfcHJv
dGVjdGVkKGZvYmotPnNoYXJlZFtpXSwKLQkJCQkJCWRtYV9yZXN2X2hlbGQob2JqLT5yZXN2KSk7
Ci0JCWlmIChmZW5jZS0+Y29udGV4dCAhPSBmY3R4LT5jb250ZXh0KSB7Ci0JCQlyZXQgPSBkbWFf
ZmVuY2Vfd2FpdChmZW5jZSwgdHJ1ZSk7Ci0JCQlpZiAocmV0KQotCQkJCXJldHVybiByZXQ7Ci0J
CX0KLQl9Ci0KLQlyZXR1cm4gMDsKLX0KLQogdm9pZCBtc21fZ2VtX2FjdGl2ZV9nZXQoc3RydWN0
IGRybV9nZW1fb2JqZWN0ICpvYmosIHN0cnVjdCBtc21fZ3B1ICpncHUpCiB7CiAJc3RydWN0IG1z
bV9nZW1fb2JqZWN0ICptc21fb2JqID0gdG9fbXNtX2JvKG9iaik7CmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vbXNtL21zbV9nZW0uaCBiL2RyaXZlcnMvZ3B1L2RybS9tc20vbXNtX2dlbS5o
CmluZGV4IGUwNTc5YWJkYTViOS4uYTQ4MTE0MDU4ZmY5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vbXNtL21zbV9nZW0uaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vbXNtL21zbV9nZW0uaApA
QCAtOSw2ICs5LDcgQEAKIAogI2luY2x1ZGUgPGxpbnV4L2tyZWYuaD4KICNpbmNsdWRlIDxsaW51
eC9kbWEtcmVzdi5oPgorI2luY2x1ZGUgImRybS9ncHVfc2NoZWR1bGVyLmgiCiAjaW5jbHVkZSAi
bXNtX2Rydi5oIgogCiAvKiBNYWtlIGFsbCBHRU0gcmVsYXRlZCBXQVJOX09OKClzIHJhdGVsaW1p
dGVkLi4gd2hlbiB0aGluZ3MgZ28gd3JvbmcgdGhleQpAQCAtMTQzLDggKzE0NCw2IEBAIHZvaWQg
Km1zbV9nZW1fZ2V0X3ZhZGRyX2FjdGl2ZShzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaik7CiB2
b2lkIG1zbV9nZW1fcHV0X3ZhZGRyX2xvY2tlZChzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaik7
CiB2b2lkIG1zbV9nZW1fcHV0X3ZhZGRyKHN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqKTsKIGlu
dCBtc21fZ2VtX21hZHZpc2Uoc3RydWN0IGRybV9nZW1fb2JqZWN0ICpvYmosIHVuc2lnbmVkIG1h
ZHYpOwotaW50IG1zbV9nZW1fc3luY19vYmplY3Qoc3RydWN0IGRybV9nZW1fb2JqZWN0ICpvYmos
Ci0JCXN0cnVjdCBtc21fZmVuY2VfY29udGV4dCAqZmN0eCwgYm9vbCBleGNsdXNpdmUpOwogdm9p
ZCBtc21fZ2VtX2FjdGl2ZV9nZXQoc3RydWN0IGRybV9nZW1fb2JqZWN0ICpvYmosIHN0cnVjdCBt
c21fZ3B1ICpncHUpOwogdm9pZCBtc21fZ2VtX2FjdGl2ZV9wdXQoc3RydWN0IGRybV9nZW1fb2Jq
ZWN0ICpvYmopOwogaW50IG1zbV9nZW1fY3B1X3ByZXAoc3RydWN0IGRybV9nZW1fb2JqZWN0ICpv
YmosIHVpbnQzMl90IG9wLCBrdGltZV90ICp0aW1lb3V0KTsKQEAgLTMxMSw2ICszMTAsNyBAQCB2
b2lkIG1zbV9nZW1fdnVubWFwKHN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqKTsKICAqIG1ha2Ug
aXQgZWFzaWVyIHRvIHVud2luZCB3aGVuIHRoaW5ncyBnbyB3cm9uZywgZXRjKS4KICAqLwogc3Ry
dWN0IG1zbV9nZW1fc3VibWl0IHsKKwlzdHJ1Y3QgZHJtX3NjaGVkX2pvYiBiYXNlOwogCXN0cnVj
dCBrcmVmIHJlZjsKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2OwogCXN0cnVjdCBtc21fZ3B1ICpn
cHU7CkBAIC0zMTksNyArMzE5LDIyIEBAIHN0cnVjdCBtc21fZ2VtX3N1Ym1pdCB7CiAJc3RydWN0
IGxpc3RfaGVhZCBib19saXN0OwogCXN0cnVjdCB3d19hY3F1aXJlX2N0eCB0aWNrZXQ7CiAJdWlu
dDMyX3Qgc2Vxbm87CQkvKiBTZXF1ZW5jZSBudW1iZXIgb2YgdGhlIHN1Ym1pdCBvbiB0aGUgcmlu
ZyAqLwotCXN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlOworCisJLyogQXJyYXkgb2Ygc3RydWN0IGRt
YV9mZW5jZSAqIHRvIGJsb2NrIG9uIGJlZm9yZSBzdWJtaXR0aW5nIHRoaXMgam9iLgorCSAqLwor
CXN0cnVjdCB4YXJyYXkgZGVwczsKKwl1bnNpZ25lZCBsb25nIGxhc3RfZGVwOworCisJLyogSHcg
ZmVuY2UsIHdoaWNoIGlzIGNyZWF0ZWQgd2hlbiB0aGUgc2NoZWR1bGVyIGV4ZWN1dGVzIHRoZSBq
b2IsIGFuZAorCSAqIGlzIHNpZ25hbGVkIHdoZW4gdGhlIGh3IGZpbmlzaGVzICh2aWEgc2Vxbm8g
d3JpdGUgZnJvbSBjbWRzdHJlYW0pCisJICovCisJc3RydWN0IGRtYV9mZW5jZSAqaHdfZmVuY2U7
CisKKwkvKiBVc2Vyc3BhY2UgdmlzaWJsZSBmZW5jZSwgd2hpY2ggaXMgc2lnbmFsZWQgYnkgdGhl
IHNjaGVkdWxlciBhZnRlcgorCSAqIHRoZSBod19mZW5jZSBpcyBzaWduYWxlZC4KKwkgKi8KKwlz
dHJ1Y3QgZG1hX2ZlbmNlICp1c2VyX2ZlbmNlOworCiAJaW50IGZlbmNlX2lkOyAgICAgICAvKiBr
ZXkgaW50byBxdWV1ZS0+ZmVuY2VfaWRyICovCiAJc3RydWN0IG1zbV9ncHVfc3VibWl0cXVldWUg
KnF1ZXVlOwogCXN0cnVjdCBwaWQgKnBpZDsgICAgLyogc3VibWl0dGluZyBwcm9jZXNzICovCkBA
IC0zNTAsNiArMzY1LDExIEBAIHN0cnVjdCBtc21fZ2VtX3N1Ym1pdCB7CiAJfSBib3NbXTsKIH07
CiAKK3N0YXRpYyBpbmxpbmUgc3RydWN0IG1zbV9nZW1fc3VibWl0ICp0b19tc21fc3VibWl0KHN0
cnVjdCBkcm1fc2NoZWRfam9iICpqb2IpCit7CisJcmV0dXJuIGNvbnRhaW5lcl9vZihqb2IsIHN0
cnVjdCBtc21fZ2VtX3N1Ym1pdCwgYmFzZSk7Cit9CisKIHZvaWQgX19tc21fZ2VtX3N1Ym1pdF9k
ZXN0cm95KHN0cnVjdCBrcmVmICprcmVmKTsKIAogc3RhdGljIGlubGluZSB2b2lkIG1zbV9nZW1f
c3VibWl0X2dldChzdHJ1Y3QgbXNtX2dlbV9zdWJtaXQgKnN1Ym1pdCkKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9tc20vbXNtX2dlbV9zdWJtaXQuYyBiL2RyaXZlcnMvZ3B1L2RybS9tc20v
bXNtX2dlbV9zdWJtaXQuYwppbmRleCBmNTcwMTU1YmMwODYuLjJiMTU4NDMzYTZlNSAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL21zbS9tc21fZ2VtX3N1Ym1pdC5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9tc20vbXNtX2dlbV9zdWJtaXQuYwpAQCAtMzMsNiArMzMsNyBAQCBzdGF0aWMgc3Ry
dWN0IG1zbV9nZW1fc3VibWl0ICpzdWJtaXRfY3JlYXRlKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYs
CiB7CiAJc3RydWN0IG1zbV9nZW1fc3VibWl0ICpzdWJtaXQ7CiAJdWludDY0X3Qgc3o7CisJaW50
IHJldDsKIAogCXN6ID0gc3RydWN0X3NpemUoc3VibWl0LCBib3MsIG5yX2JvcykgKwogCQkJKCh1
NjQpbnJfY21kcyAqIHNpemVvZihzdWJtaXQtPmNtZFswXSkpOwpAQCAtNDQsNiArNDUsMTQgQEAg
c3RhdGljIHN0cnVjdCBtc21fZ2VtX3N1Ym1pdCAqc3VibWl0X2NyZWF0ZShzdHJ1Y3QgZHJtX2Rl
dmljZSAqZGV2LAogCWlmICghc3VibWl0KQogCQlyZXR1cm4gRVJSX1BUUigtRU5PTUVNKTsKIAor
CXJldCA9IGRybV9zY2hlZF9qb2JfaW5pdCgmc3VibWl0LT5iYXNlLCAmcXVldWUtPmVudGl0eSwg
cXVldWUpOworCWlmIChyZXQpIHsKKwkJa2ZyZWUoc3VibWl0KTsKKwkJcmV0dXJuIEVSUl9QVFIo
cmV0KTsKKwl9CisKKwl4YV9pbml0X2ZsYWdzKCZzdWJtaXQtPmRlcHMsIFhBX0ZMQUdTX0FMTE9D
KTsKKwogCWtyZWZfaW5pdCgmc3VibWl0LT5yZWYpOwogCXN1Ym1pdC0+ZGV2ID0gZGV2OwogCXN1
Ym1pdC0+YXNwYWNlID0gcXVldWUtPmN0eC0+YXNwYWNlOwpAQCAtNjMsNiArNzIsOCBAQCB2b2lk
IF9fbXNtX2dlbV9zdWJtaXRfZGVzdHJveShzdHJ1Y3Qga3JlZiAqa3JlZikKIHsKIAlzdHJ1Y3Qg
bXNtX2dlbV9zdWJtaXQgKnN1Ym1pdCA9CiAJCQljb250YWluZXJfb2Yoa3JlZiwgc3RydWN0IG1z
bV9nZW1fc3VibWl0LCByZWYpOworCXVuc2lnbmVkIGxvbmcgaW5kZXg7CisJc3RydWN0IGRtYV9m
ZW5jZSAqZmVuY2U7CiAJdW5zaWduZWQgaTsKIAogCWlmIChzdWJtaXQtPmZlbmNlX2lkKSB7CkBA
IC03MSw3ICs4MiwxNCBAQCB2b2lkIF9fbXNtX2dlbV9zdWJtaXRfZGVzdHJveShzdHJ1Y3Qga3Jl
ZiAqa3JlZikKIAkJbXV0ZXhfdW5sb2NrKCZzdWJtaXQtPnF1ZXVlLT5sb2NrKTsKIAl9CiAKLQlk
bWFfZmVuY2VfcHV0KHN1Ym1pdC0+ZmVuY2UpOworCXhhX2Zvcl9lYWNoICgmc3VibWl0LT5kZXBz
LCBpbmRleCwgZmVuY2UpIHsKKwkJZG1hX2ZlbmNlX3B1dChmZW5jZSk7CisJfQorCisJeGFfZGVz
dHJveSgmc3VibWl0LT5kZXBzKTsKKworCWRtYV9mZW5jZV9wdXQoc3VibWl0LT51c2VyX2ZlbmNl
KTsKKwlkbWFfZmVuY2VfcHV0KHN1Ym1pdC0+aHdfZmVuY2UpOwogCiAJcHV0X3BpZChzdWJtaXQt
PnBpZCk7CiAJbXNtX3N1Ym1pdHF1ZXVlX3B1dChzdWJtaXQtPnF1ZXVlKTsKQEAgLTMwNyw3ICsz
MjUsNyBAQCBzdGF0aWMgaW50IHN1Ym1pdF9mZW5jZV9zeW5jKHN0cnVjdCBtc21fZ2VtX3N1Ym1p
dCAqc3VibWl0LCBib29sIG5vX2ltcGxpY2l0KQogCWludCBpLCByZXQgPSAwOwogCiAJZm9yIChp
ID0gMDsgaSA8IHN1Ym1pdC0+bnJfYm9zOyBpKyspIHsKLQkJc3RydWN0IG1zbV9nZW1fb2JqZWN0
ICptc21fb2JqID0gc3VibWl0LT5ib3NbaV0ub2JqOworCQlzdHJ1Y3QgZHJtX2dlbV9vYmplY3Qg
Km9iaiA9ICZzdWJtaXQtPmJvc1tpXS5vYmotPmJhc2U7CiAJCWJvb2wgd3JpdGUgPSBzdWJtaXQt
PmJvc1tpXS5mbGFncyAmIE1TTV9TVUJNSVRfQk9fV1JJVEU7CiAKIAkJaWYgKCF3cml0ZSkgewpA
QCAtMzE2LDggKzMzNCw3IEBAIHN0YXRpYyBpbnQgc3VibWl0X2ZlbmNlX3N5bmMoc3RydWN0IG1z
bV9nZW1fc3VibWl0ICpzdWJtaXQsIGJvb2wgbm9faW1wbGljaXQpCiAJCQkgKiBzdHJhbmdlIHBs
YWNlIHRvIGNhbGwgaXQuICBPVE9IIHRoaXMgaXMgYQogCQkJICogY29udmVuaWVudCBjYW4tZmFp
bCBwb2ludCB0byBob29rIGl0IGluLgogCQkJICovCi0JCQlyZXQgPSBkbWFfcmVzdl9yZXNlcnZl
X3NoYXJlZChtc21fb2JqLT5iYXNlLnJlc3YsCi0JCQkJCQkJCTEpOworCQkJcmV0ID0gZG1hX3Jl
c3ZfcmVzZXJ2ZV9zaGFyZWQob2JqLT5yZXN2LCAxKTsKIAkJCWlmIChyZXQpCiAJCQkJcmV0dXJu
IHJldDsKIAkJfQpAQCAtMzI1LDcgKzM0Miw3IEBAIHN0YXRpYyBpbnQgc3VibWl0X2ZlbmNlX3N5
bmMoc3RydWN0IG1zbV9nZW1fc3VibWl0ICpzdWJtaXQsIGJvb2wgbm9faW1wbGljaXQpCiAJCWlm
IChub19pbXBsaWNpdCkKIAkJCWNvbnRpbnVlOwogCi0JCXJldCA9IG1zbV9nZW1fc3luY19vYmpl
Y3QoJm1zbV9vYmotPmJhc2UsIHN1Ym1pdC0+cmluZy0+ZmN0eCwKKwkJcmV0ID0gZHJtX2dlbV9m
ZW5jZV9hcnJheV9hZGRfaW1wbGljaXQoJnN1Ym1pdC0+ZGVwcywgb2JqLAogCQkJd3JpdGUpOwog
CQlpZiAocmV0KQogCQkJYnJlYWs7CkBAIC0zNzYsOSArMzkzLDkgQEAgc3RhdGljIHZvaWQgc3Vi
bWl0X2F0dGFjaF9vYmplY3RfZmVuY2VzKHN0cnVjdCBtc21fZ2VtX3N1Ym1pdCAqc3VibWl0KQog
CQlzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaiA9ICZzdWJtaXQtPmJvc1tpXS5vYmotPmJhc2U7
CiAKIAkJaWYgKHN1Ym1pdC0+Ym9zW2ldLmZsYWdzICYgTVNNX1NVQk1JVF9CT19XUklURSkKLQkJ
CWRtYV9yZXN2X2FkZF9leGNsX2ZlbmNlKG9iai0+cmVzdiwgc3VibWl0LT5mZW5jZSk7CisJCQlk
bWFfcmVzdl9hZGRfZXhjbF9mZW5jZShvYmotPnJlc3YsIHN1Ym1pdC0+dXNlcl9mZW5jZSk7CiAJ
CWVsc2UgaWYgKHN1Ym1pdC0+Ym9zW2ldLmZsYWdzICYgTVNNX1NVQk1JVF9CT19SRUFEKQotCQkJ
ZG1hX3Jlc3ZfYWRkX3NoYXJlZF9mZW5jZShvYmotPnJlc3YsIHN1Ym1pdC0+ZmVuY2UpOworCQkJ
ZG1hX3Jlc3ZfYWRkX3NoYXJlZF9mZW5jZShvYmotPnJlc3YsIHN1Ym1pdC0+dXNlcl9mZW5jZSk7
CiAJfQogfQogCkBAIC01MTcsMTIgKzUzNCwxMiBAQCBzdHJ1Y3QgbXNtX3N1Ym1pdF9wb3N0X2Rl
cCB7CiAJc3RydWN0IGRtYV9mZW5jZV9jaGFpbiAqY2hhaW47CiB9OwogCi1zdGF0aWMgc3RydWN0
IGRybV9zeW5jb2JqICoqbXNtX3dhaXRfZGVwcyhzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAotICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RydWN0IGRybV9maWxlICpm
aWxlLAotICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdWludDY0X3Qg
aW5fc3luY29ianNfYWRkciwKLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIHVpbnQzMl90IG5yX2luX3N5bmNvYmpzLAotICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgc2l6ZV90IHN5bmNvYmpfc3RyaWRlLAotICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgc3RydWN0IG1zbV9yaW5nYnVmZmVyICpyaW5nKQorc3Rh
dGljIHN0cnVjdCBkcm1fc3luY29iaiAqKm1zbV9wYXJzZV9kZXBzKHN0cnVjdCBtc21fZ2VtX3N1
Ym1pdCAqc3VibWl0LAorICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IHN0cnVjdCBkcm1fZmlsZSAqZmlsZSwKKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICB1aW50NjRfdCBpbl9zeW5jb2Jqc19hZGRyLAorICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIHVpbnQzMl90IG5yX2luX3N5bmNvYmpzLAorICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemVfdCBzeW5jb2JqX3N0cmlk
ZSwKKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJ1Y3QgbXNt
X3JpbmdidWZmZXIgKnJpbmcpCiB7CiAJc3RydWN0IGRybV9zeW5jb2JqICoqc3luY29ianMgPSBO
VUxMOwogCXN0cnVjdCBkcm1fbXNtX2dlbV9zdWJtaXRfc3luY29iaiBzeW5jb2JqX2Rlc2MgPSB7
MH07CkBAIC01NDYsNyArNTYzLDcgQEAgc3RhdGljIHN0cnVjdCBkcm1fc3luY29iaiAqKm1zbV93
YWl0X2RlcHMoc3RydWN0IGRybV9kZXZpY2UgKmRldiwKIAkJfQogCiAJCWlmIChzeW5jb2JqX2Rl
c2MucG9pbnQgJiYKLQkJICAgICFkcm1fY29yZV9jaGVja19mZWF0dXJlKGRldiwgRFJJVkVSX1NZ
TkNPQkpfVElNRUxJTkUpKSB7CisJCSAgICAhZHJtX2NvcmVfY2hlY2tfZmVhdHVyZShzdWJtaXQt
PmRldiwgRFJJVkVSX1NZTkNPQkpfVElNRUxJTkUpKSB7CiAJCQlyZXQgPSAtRU9QTk9UU1VQUDsK
IAkJCWJyZWFrOwogCQl9CkBAIC01NjEsMTAgKzU3OCw3IEBAIHN0YXRpYyBzdHJ1Y3QgZHJtX3N5
bmNvYmogKiptc21fd2FpdF9kZXBzKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJCWlmIChyZXQp
CiAJCQlicmVhazsKIAotCQlpZiAoIWRtYV9mZW5jZV9tYXRjaF9jb250ZXh0KGZlbmNlLCByaW5n
LT5mY3R4LT5jb250ZXh0KSkKLQkJCXJldCA9IGRtYV9mZW5jZV93YWl0KGZlbmNlLCB0cnVlKTsK
LQotCQlkbWFfZmVuY2VfcHV0KGZlbmNlKTsKKwkJcmV0ID0gZHJtX2dlbV9mZW5jZV9hcnJheV9h
ZGQoJnN1Ym1pdC0+ZGVwcywgZmVuY2UpOwogCQlpZiAocmV0KQogCQkJYnJlYWs7CiAKQEAgLTc0
MSw0NyArNzU1LDYgQEAgaW50IG1zbV9pb2N0bF9nZW1fc3VibWl0KHN0cnVjdCBkcm1fZGV2aWNl
ICpkZXYsIHZvaWQgKmRhdGEsCiAJdHJhY2VfbXNtX2dwdV9zdWJtaXQocGlkX25yKHBpZCksIHJp
bmctPmlkLCBzdWJtaXRpZCwKIAkJYXJncy0+bnJfYm9zLCBhcmdzLT5ucl9jbWRzKTsKIAotCWlm
IChhcmdzLT5mbGFncyAmIE1TTV9TVUJNSVRfRkVOQ0VfRkRfSU4pIHsKLQkJc3RydWN0IGRtYV9m
ZW5jZSAqaW5fZmVuY2U7Ci0KLQkJaW5fZmVuY2UgPSBzeW5jX2ZpbGVfZ2V0X2ZlbmNlKGFyZ3Mt
PmZlbmNlX2ZkKTsKLQotCQlpZiAoIWluX2ZlbmNlKQotCQkJcmV0dXJuIC1FSU5WQUw7Ci0KLQkJ
LyoKLQkJICogV2FpdCBpZiB0aGUgZmVuY2UgaXMgZnJvbSBhIGZvcmVpZ24gY29udGV4dCwgb3Ig
aWYgdGhlIGZlbmNlCi0JCSAqIGFycmF5IGNvbnRhaW5zIGFueSBmZW5jZSBmcm9tIGEgZm9yZWln
biBjb250ZXh0LgotCQkgKi8KLQkJcmV0ID0gMDsKLQkJaWYgKCFkbWFfZmVuY2VfbWF0Y2hfY29u
dGV4dChpbl9mZW5jZSwgcmluZy0+ZmN0eC0+Y29udGV4dCkpCi0JCQlyZXQgPSBkbWFfZmVuY2Vf
d2FpdChpbl9mZW5jZSwgdHJ1ZSk7Ci0KLQkJZG1hX2ZlbmNlX3B1dChpbl9mZW5jZSk7Ci0JCWlm
IChyZXQpCi0JCQlyZXR1cm4gcmV0OwotCX0KLQotCWlmIChhcmdzLT5mbGFncyAmIE1TTV9TVUJN
SVRfU1lOQ09CSl9JTikgewotCQlzeW5jb2Jqc190b19yZXNldCA9IG1zbV93YWl0X2RlcHMoZGV2
LCBmaWxlLAotCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJncy0+aW5fc3lu
Y29ianMsCi0JCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcmdzLT5ucl9pbl9z
eW5jb2JqcywKLQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyZ3MtPnN5bmNv
Ympfc3RyaWRlLCByaW5nKTsKLQkJaWYgKElTX0VSUihzeW5jb2Jqc190b19yZXNldCkpCi0JCQly
ZXR1cm4gUFRSX0VSUihzeW5jb2Jqc190b19yZXNldCk7Ci0JfQotCi0JaWYgKGFyZ3MtPmZsYWdz
ICYgTVNNX1NVQk1JVF9TWU5DT0JKX09VVCkgewotCQlwb3N0X2RlcHMgPSBtc21fcGFyc2VfcG9z
dF9kZXBzKGRldiwgZmlsZSwKLQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcmdz
LT5vdXRfc3luY29ianMsCi0JCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJncy0+
bnJfb3V0X3N5bmNvYmpzLAotCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyZ3Mt
PnN5bmNvYmpfc3RyaWRlKTsKLQkJaWYgKElTX0VSUihwb3N0X2RlcHMpKSB7Ci0JCQlyZXQgPSBQ
VFJfRVJSKHBvc3RfZGVwcyk7Ci0JCQlnb3RvIG91dF9wb3N0X3VubG9jazsKLQkJfQotCX0KLQog
CXJldCA9IG11dGV4X2xvY2tfaW50ZXJydXB0aWJsZSgmZGV2LT5zdHJ1Y3RfbXV0ZXgpOwogCWlm
IChyZXQpCiAJCWdvdG8gb3V0X3Bvc3RfdW5sb2NrOwpAQCAtODA3LDIyICs3ODAsNTAgQEAgaW50
IG1zbV9pb2N0bF9nZW1fc3VibWl0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEs
CiAJaWYgKGFyZ3MtPmZsYWdzICYgTVNNX1NVQk1JVF9TVURPKQogCQlzdWJtaXQtPmluX3JiID0g
dHJ1ZTsKIAorCWlmIChhcmdzLT5mbGFncyAmIE1TTV9TVUJNSVRfRkVOQ0VfRkRfSU4pIHsKKwkJ
c3RydWN0IGRtYV9mZW5jZSAqaW5fZmVuY2U7CisKKwkJaW5fZmVuY2UgPSBzeW5jX2ZpbGVfZ2V0
X2ZlbmNlKGFyZ3MtPmZlbmNlX2ZkKTsKKworCQlpZiAoIWluX2ZlbmNlKSB7CisJCQlyZXQgPSAt
RUlOVkFMOworCQkJZ290byBvdXRfdW5sb2NrOworCQl9CisKKwkJcmV0ID0gZHJtX2dlbV9mZW5j
ZV9hcnJheV9hZGQoJnN1Ym1pdC0+ZGVwcywgaW5fZmVuY2UpOworCQlpZiAocmV0KQorCQkJZ290
byBvdXRfdW5sb2NrOworCX0KKworCWlmIChhcmdzLT5mbGFncyAmIE1TTV9TVUJNSVRfU1lOQ09C
Sl9JTikgeworCQlzeW5jb2Jqc190b19yZXNldCA9IG1zbV9wYXJzZV9kZXBzKHN1Ym1pdCwgZmls
ZSwKKwkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcmdzLT5pbl9zeW5jb2Jq
cywKKwkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcmdzLT5ucl9pbl9zeW5j
b2JqcywKKwkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcmdzLT5zeW5jb2Jq
X3N0cmlkZSwgcmluZyk7CisJCWlmIChJU19FUlIoc3luY29ianNfdG9fcmVzZXQpKSB7CisJCQly
ZXQgPSBQVFJfRVJSKHN5bmNvYmpzX3RvX3Jlc2V0KTsKKwkJCWdvdG8gb3V0X3VubG9jazsKKwkJ
fQorCX0KKworCWlmIChhcmdzLT5mbGFncyAmIE1TTV9TVUJNSVRfU1lOQ09CSl9PVVQpIHsKKwkJ
cG9zdF9kZXBzID0gbXNtX3BhcnNlX3Bvc3RfZGVwcyhkZXYsIGZpbGUsCisJCSAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgYXJncy0+b3V0X3N5bmNvYmpzLAorCQkgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIGFyZ3MtPm5yX291dF9zeW5jb2JqcywKKwkJICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICBhcmdzLT5zeW5jb2JqX3N0cmlkZSk7CisJCWlmIChJU19FUlIo
cG9zdF9kZXBzKSkgeworCQkJcmV0ID0gUFRSX0VSUihwb3N0X2RlcHMpOworCQkJZ290byBvdXRf
dW5sb2NrOworCQl9CisJfQorCiAJcmV0ID0gc3VibWl0X2xvb2t1cF9vYmplY3RzKHN1Ym1pdCwg
YXJncywgZmlsZSk7CiAJaWYgKHJldCkKLQkJZ290byBvdXRfcHJlX3BtOworCQlnb3RvIG91dDsK
IAogCXJldCA9IHN1Ym1pdF9sb29rdXBfY21kcyhzdWJtaXQsIGFyZ3MsIGZpbGUpOwogCWlmIChy
ZXQpCi0JCWdvdG8gb3V0X3ByZV9wbTsKLQotCS8qCi0JICogVGhhbmtzIHRvIGRldl9wbV9vcHAg
b3BwX3RhYmxlX2xvY2sgaW50ZXJhY3Rpb25zIHdpdGggbW0tPm1tYXBfc2VtCi0JICogaW4gdGhl
IHJlc3VtZSBwYXRoLCB3ZSBuZWVkIHRvIHRvIHJwbSBnZXQgYmVmb3JlIHdlIGxvY2sgb2Jqcy4K
LQkgKiBXaGljaCB1bmZvcnR1bmF0ZWx5IG1pZ2h0IGludm9sdmUgcG93ZXJpbmcgdXAgdGhlIEdQ
VSBzb29uZXIgdGhhbgotCSAqIGlzIG5lY2Vzc2FyeS4gIEJ1dCBhdCBsZWFzdCBpbiB0aGUgZXhw
bGljaXQgZmVuY2luZyBjYXNlLCB3ZSB3aWxsCi0JICogaGF2ZSBhbHJlYWR5IGRvbmUgYWxsIHRo
ZSBmZW5jZSB3YWl0aW5nLgotCSAqLwotCXBtX3J1bnRpbWVfZ2V0X3N5bmMoJmdwdS0+cGRldi0+
ZGV2KTsKKwkJZ290byBvdXQ7CiAKIAkvKiBjb3B5XypfdXNlciB3aGlsZSBob2xkaW5nIGEgd3cg
dGlja2V0IHVwc2V0cyBsb2NrZGVwICovCiAJd3dfYWNxdWlyZV9pbml0KCZzdWJtaXQtPnRpY2tl
dCwgJnJlc2VydmF0aW9uX3d3X2NsYXNzKTsKQEAgLTg2OSwxMiArODcwLDcgQEAgaW50IG1zbV9p
b2N0bF9nZW1fc3VibWl0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCiAKIAlz
dWJtaXQtPm5yX2NtZHMgPSBpOwogCi0Jc3VibWl0LT5mZW5jZSA9IG1zbV9mZW5jZV9hbGxvYyhy
aW5nLT5mY3R4KTsKLQlpZiAoSVNfRVJSKHN1Ym1pdC0+ZmVuY2UpKSB7Ci0JCXJldCA9IFBUUl9F
UlIoc3VibWl0LT5mZW5jZSk7Ci0JCXN1Ym1pdC0+ZmVuY2UgPSBOVUxMOwotCQlnb3RvIG91dDsK
LQl9CisJc3VibWl0LT51c2VyX2ZlbmNlID0gZG1hX2ZlbmNlX2dldCgmc3VibWl0LT5iYXNlLnNf
ZmVuY2UtPmZpbmlzaGVkKTsKIAogCS8qCiAJICogQWxsb2NhdGUgYW4gaWQgd2hpY2ggY2FuIGJl
IHVzZWQgYnkgV0FJVF9GRU5DRSBpb2N0bCB0byBtYXAgYmFjawpAQCAtODgyLDcgKzg3OCw3IEBA
IGludCBtc21faW9jdGxfZ2VtX3N1Ym1pdChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lkICpk
YXRhLAogCSAqLwogCW11dGV4X2xvY2soJnF1ZXVlLT5sb2NrKTsKIAlzdWJtaXQtPmZlbmNlX2lk
ID0gaWRyX2FsbG9jX2N5Y2xpYygmcXVldWUtPmZlbmNlX2lkciwKLQkJCXN1Ym1pdC0+ZmVuY2Us
IDAsIElOVF9NQVgsIEdGUF9LRVJORUwpOworCQkJc3VibWl0LT51c2VyX2ZlbmNlLCAwLCBJTlRf
TUFYLCBHRlBfS0VSTkVMKTsKIAltdXRleF91bmxvY2soJnF1ZXVlLT5sb2NrKTsKIAlpZiAoc3Vi
bWl0LT5mZW5jZV9pZCA8IDApIHsKIAkJcmV0ID0gc3VibWl0LT5mZW5jZV9pZCA9IDA7CkBAIC04
OTEsNyArODg3LDcgQEAgaW50IG1zbV9pb2N0bF9nZW1fc3VibWl0KHN0cnVjdCBkcm1fZGV2aWNl
ICpkZXYsIHZvaWQgKmRhdGEsCiAJfQogCiAJaWYgKGFyZ3MtPmZsYWdzICYgTVNNX1NVQk1JVF9G
RU5DRV9GRF9PVVQpIHsKLQkJc3RydWN0IHN5bmNfZmlsZSAqc3luY19maWxlID0gc3luY19maWxl
X2NyZWF0ZShzdWJtaXQtPmZlbmNlKTsKKwkJc3RydWN0IHN5bmNfZmlsZSAqc3luY19maWxlID0g
c3luY19maWxlX2NyZWF0ZShzdWJtaXQtPnVzZXJfZmVuY2UpOwogCQlpZiAoIXN5bmNfZmlsZSkg
ewogCQkJcmV0ID0gLUVOT01FTTsKIAkJCWdvdG8gb3V0OwpAQCAtOTAyLDE4ICs4OTgsMTkgQEAg
aW50IG1zbV9pb2N0bF9nZW1fc3VibWl0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRh
dGEsCiAKIAlzdWJtaXRfYXR0YWNoX29iamVjdF9mZW5jZXMoc3VibWl0KTsKIAotCW1zbV9ncHVf
c3VibWl0KGdwdSwgc3VibWl0KTsKKwkvKiBUaGUgc2NoZWR1bGVyIG93bnMgYSByZWYgbm93OiAq
LworCW1zbV9nZW1fc3VibWl0X2dldChzdWJtaXQpOworCisJZHJtX3NjaGVkX2VudGl0eV9wdXNo
X2pvYigmc3VibWl0LT5iYXNlLCAmcXVldWUtPmVudGl0eSk7CiAKIAlhcmdzLT5mZW5jZSA9IHN1
Ym1pdC0+ZmVuY2VfaWQ7CiAKIAltc21fcmVzZXRfc3luY29ianMoc3luY29ianNfdG9fcmVzZXQs
IGFyZ3MtPm5yX2luX3N5bmNvYmpzKTsKIAltc21fcHJvY2Vzc19wb3N0X2RlcHMocG9zdF9kZXBz
LCBhcmdzLT5ucl9vdXRfc3luY29ianMsCi0JICAgICAgICAgICAgICAgICAgICAgIHN1Ym1pdC0+
ZmVuY2UpOworCSAgICAgICAgICAgICAgICAgICAgICBzdWJtaXQtPnVzZXJfZmVuY2UpOwogCiAK
IG91dDoKLQlwbV9ydW50aW1lX3B1dCgmZ3B1LT5wZGV2LT5kZXYpOwotb3V0X3ByZV9wbToKIAlz
dWJtaXRfY2xlYW51cChzdWJtaXQsICEhcmV0KTsKIAlpZiAoaGFzX3d3X3RpY2tldCkKIAkJd3df
YWNxdWlyZV9maW5pKCZzdWJtaXQtPnRpY2tldCk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vbXNtL21zbV9ncHUuYyBiL2RyaXZlcnMvZ3B1L2RybS9tc20vbXNtX2dwdS5jCmluZGV4IDVi
ZmM0ZDI0YTk1Ni4uOGEzYTU5MmRhM2E0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vbXNt
L21zbV9ncHUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vbXNtL21zbV9ncHUuYwpAQCAtMTc2LDgg
KzE3Niw4IEBAIHN0YXRpYyB2b2lkIHVwZGF0ZV9mZW5jZXMoc3RydWN0IG1zbV9ncHUgKmdwdSwg
c3RydWN0IG1zbV9yaW5nYnVmZmVyICpyaW5nLAogCQkJYnJlYWs7CiAKIAkJbXNtX3VwZGF0ZV9m
ZW5jZShzdWJtaXQtPnJpbmctPmZjdHgsCi0JCQlzdWJtaXQtPmZlbmNlLT5zZXFubyk7Ci0JCWRt
YV9mZW5jZV9zaWduYWwoc3VibWl0LT5mZW5jZSk7CisJCQlzdWJtaXQtPmh3X2ZlbmNlLT5zZXFu
byk7CisJCWRtYV9mZW5jZV9zaWduYWwoc3VibWl0LT5od19mZW5jZSk7CiAJfQogCXNwaW5fdW5s
b2NrX2lycXJlc3RvcmUoJnJpbmctPnN1Ym1pdF9sb2NrLCBmbGFncyk7CiB9CkBAIC0zODAsMTAg
KzM4MCw2IEBAIHN0YXRpYyB2b2lkIHJlY292ZXJfd29ya2VyKHN0cnVjdCBrdGhyZWFkX3dvcmsg
KndvcmspCiAJCQlwdXRfdGFza19zdHJ1Y3QodGFzayk7CiAJCX0KIAotCQkvKiBtc21fcmRfZHVt
cF9zdWJtaXQoKSBuZWVkcyBibyBsb2NrZWQgdG8gZHVtcDogKi8KLQkJZm9yIChpID0gMDsgaSA8
IHN1Ym1pdC0+bnJfYm9zOyBpKyspCi0JCQltc21fZ2VtX2xvY2soJnN1Ym1pdC0+Ym9zW2ldLm9i
ai0+YmFzZSk7Ci0KIAkJaWYgKGNvbW0gJiYgY21kKSB7CiAJCQlEUk1fREVWX0VSUk9SKGRldi0+
ZGV2LCAiJXM6IG9mZmVuZGluZyB0YXNrOiAlcyAoJXMpXG4iLAogCQkJCWdwdS0+bmFtZSwgY29t
bSwgY21kKTsKQEAgLTM5Myw5ICszODksNiBAQCBzdGF0aWMgdm9pZCByZWNvdmVyX3dvcmtlcihz
dHJ1Y3Qga3RocmVhZF93b3JrICp3b3JrKQogCQl9IGVsc2UgewogCQkJbXNtX3JkX2R1bXBfc3Vi
bWl0KHByaXYtPmhhbmdyZCwgc3VibWl0LCBOVUxMKTsKIAkJfQotCi0JCWZvciAoaSA9IDA7IGkg
PCBzdWJtaXQtPm5yX2JvczsgaSsrKQotCQkJbXNtX2dlbV91bmxvY2soJnN1Ym1pdC0+Ym9zW2ld
Lm9iai0+YmFzZSk7CiAJfQogCiAJLyogUmVjb3JkIHRoZSBjcmFzaCBzdGF0ZSAqLwpAQCAtNzA0
LDcgKzY5Nyw3IEBAIHN0YXRpYyB2b2lkIHJldGlyZV9zdWJtaXRzKHN0cnVjdCBtc21fZ3B1ICpn
cHUpCiAJCQkgKiBiZWVuIHNpZ25hbGxlZCwgdGhlbiBsYXRlciBzdWJtaXRzIGFyZSBub3Qgc2ln
bmFsbGVkCiAJCQkgKiBlaXRoZXIsIHNvIHdlIGFyZSBhbHNvIGRvbmUuCiAJCQkgKi8KLQkJCWlm
IChzdWJtaXQgJiYgZG1hX2ZlbmNlX2lzX3NpZ25hbGVkKHN1Ym1pdC0+ZmVuY2UpKSB7CisJCQlp
ZiAoc3VibWl0ICYmIGRtYV9mZW5jZV9pc19zaWduYWxlZChzdWJtaXQtPmh3X2ZlbmNlKSkgewog
CQkJCXJldGlyZV9zdWJtaXQoZ3B1LCByaW5nLCBzdWJtaXQpOwogCQkJfSBlbHNlIHsKIAkJCQli
cmVhazsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9tc20vbXNtX2dwdS5oIGIvZHJpdmVy
cy9ncHUvZHJtL21zbS9tc21fZ3B1LmgKaW5kZXggNTc5NjI3MjUyNTQwLi5iOTEyY2FjYWVjYzAg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9tc20vbXNtX2dwdS5oCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9tc20vbXNtX2dwdS5oCkBAIC0yNjcsNiArMjY3LDcgQEAgc3RydWN0IG1zbV9ncHVf
cGVyZmNudHIgewogICogICAgICAgICAgICAgc2Vxbm8sIHByb3RlY3RlZCBieSBzdWJtaXRxdWV1
ZSBsb2NrCiAgKiBAbG9jazogICAgICBzdWJtaXRxdWV1ZSBsb2NrCiAgKiBAcmVmOiAgICAgICBy
ZWZlcmVuY2UgY291bnQKKyAqIEBlbnRpdHk6IHRoZSBzdWJtaXQgam9iLXF1ZXVlCiAgKi8KIHN0
cnVjdCBtc21fZ3B1X3N1Ym1pdHF1ZXVlIHsKIAlpbnQgaWQ7CkBAIC0yNzgsNiArMjc5LDcgQEAg
c3RydWN0IG1zbV9ncHVfc3VibWl0cXVldWUgewogCXN0cnVjdCBpZHIgZmVuY2VfaWRyOwogCXN0
cnVjdCBtdXRleCBsb2NrOwogCXN0cnVjdCBrcmVmIHJlZjsKKwlzdHJ1Y3QgZHJtX3NjaGVkX2Vu
dGl0eSBlbnRpdHk7CiB9OwogCiBzdHJ1Y3QgbXNtX2dwdV9zdGF0ZV9ibyB7CmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vbXNtL21zbV9yZC5jIGIvZHJpdmVycy9ncHUvZHJtL21zbS9tc21f
cmQuYwppbmRleCA2NTllNWNjNGI0MGEuLmI1NTM5OGEzNGZhNCAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL21zbS9tc21fcmQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vbXNtL21zbV9yZC5j
CkBAIC0zMjUsMTUgKzMyNSwxOSBAQCBzdGF0aWMgdm9pZCBzbmFwc2hvdF9idWYoc3RydWN0IG1z
bV9yZF9zdGF0ZSAqcmQsCiAJaWYgKCEoc3VibWl0LT5ib3NbaWR4XS5mbGFncyAmIE1TTV9TVUJN
SVRfQk9fUkVBRCkpCiAJCXJldHVybjsKIAorCW1zbV9nZW1fbG9jaygmb2JqLT5iYXNlKTsKIAli
dWYgPSBtc21fZ2VtX2dldF92YWRkcl9hY3RpdmUoJm9iai0+YmFzZSk7CiAJaWYgKElTX0VSUihi
dWYpKQotCQlyZXR1cm47CisJCWdvdG8gb3V0X3VubG9jazsKIAogCWJ1ZiArPSBvZmZzZXQ7CiAK
IAlyZF93cml0ZV9zZWN0aW9uKHJkLCBSRF9CVUZGRVJfQ09OVEVOVFMsIGJ1Ziwgc2l6ZSk7CiAK
IAltc21fZ2VtX3B1dF92YWRkcl9sb2NrZWQoJm9iai0+YmFzZSk7CisKK291dF91bmxvY2s6CisJ
bXNtX2dlbV91bmxvY2soJm9iai0+YmFzZSk7CiB9CiAKIC8qIGNhbGxlZCB1bmRlciBzdHJ1Y3Rf
bXV0ZXggKi8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9tc20vbXNtX3JpbmdidWZmZXIu
YyBiL2RyaXZlcnMvZ3B1L2RybS9tc20vbXNtX3JpbmdidWZmZXIuYwppbmRleCA0MzdjY2E1N2Qw
MDUuLjU2NDNmNTc5YWM0NiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL21zbS9tc21fcmlu
Z2J1ZmZlci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9tc20vbXNtX3JpbmdidWZmZXIuYwpAQCAt
NywxMCArNyw2NCBAQAogI2luY2x1ZGUgIm1zbV9yaW5nYnVmZmVyLmgiCiAjaW5jbHVkZSAibXNt
X2dwdS5oIgogCisvKioKKyAqIFRoZSBtYXggIyBvZiBqb2JzIHRvIHdyaXRlIGludG8gdGhlIGh3
IHJpbmdidWZmZXIuCisgKi8KK3N0YXRpYyB1aW50IG51bV9od19zdWJtaXNzaW9ucyA9IDg7CitN
T0RVTEVfUEFSTV9ERVNDKG51bV9od19zdWJtaXNzaW9ucywgIlRoZSBtYXggbnVtYmVyIG9mIEhX
IHN1Ym1pc3Npb25zIChkZWZhdWx0IDgpIik7Cittb2R1bGVfcGFyYW0obnVtX2h3X3N1Ym1pc3Np
b25zLCB1aW50LCAwNjAwKTsKKworc3RhdGljIHN0cnVjdCBkbWFfZmVuY2UgKm1zbV9qb2JfZGVw
ZW5kZW5jeShzdHJ1Y3QgZHJtX3NjaGVkX2pvYiAqam9iLAorCQlzdHJ1Y3QgZHJtX3NjaGVkX2Vu
dGl0eSAqc19lbnRpdHkpCit7CisJc3RydWN0IG1zbV9nZW1fc3VibWl0ICpzdWJtaXQgPSB0b19t
c21fc3VibWl0KGpvYik7CisKKwlpZiAoIXhhX2VtcHR5KCZzdWJtaXQtPmRlcHMpKQorCQlyZXR1
cm4geGFfZXJhc2UoJnN1Ym1pdC0+ZGVwcywgc3VibWl0LT5sYXN0X2RlcCsrKTsKKworCXJldHVy
biBOVUxMOworfQorCitzdGF0aWMgc3RydWN0IGRtYV9mZW5jZSAqbXNtX2pvYl9ydW4oc3RydWN0
IGRybV9zY2hlZF9qb2IgKmpvYikKK3sKKwlzdHJ1Y3QgbXNtX2dlbV9zdWJtaXQgKnN1Ym1pdCA9
IHRvX21zbV9zdWJtaXQoam9iKTsKKwlzdHJ1Y3QgbXNtX2dwdSAqZ3B1ID0gc3VibWl0LT5ncHU7
CisKKwlzdWJtaXQtPmh3X2ZlbmNlID0gbXNtX2ZlbmNlX2FsbG9jKHN1Ym1pdC0+cmluZy0+ZmN0
eCk7CisKKwlwbV9ydW50aW1lX2dldF9zeW5jKCZncHUtPnBkZXYtPmRldik7CisKKwkvKiBUT0RP
IG1vdmUgc3VibWl0IHBhdGggb3ZlciB0byB1c2luZyBhIHBlci1yaW5nIGxvY2suLiAqLworCW11
dGV4X2xvY2soJmdwdS0+ZGV2LT5zdHJ1Y3RfbXV0ZXgpOworCisJbXNtX2dwdV9zdWJtaXQoZ3B1
LCBzdWJtaXQpOworCisJbXV0ZXhfdW5sb2NrKCZncHUtPmRldi0+c3RydWN0X211dGV4KTsKKwor
CXBtX3J1bnRpbWVfcHV0KCZncHUtPnBkZXYtPmRldik7CisKKwlyZXR1cm4gZG1hX2ZlbmNlX2dl
dChzdWJtaXQtPmh3X2ZlbmNlKTsKK30KKworc3RhdGljIHZvaWQgbXNtX2pvYl9mcmVlKHN0cnVj
dCBkcm1fc2NoZWRfam9iICpqb2IpCit7CisJc3RydWN0IG1zbV9nZW1fc3VibWl0ICpzdWJtaXQg
PSB0b19tc21fc3VibWl0KGpvYik7CisKKwlkcm1fc2NoZWRfam9iX2NsZWFudXAoam9iKTsKKwlt
c21fZ2VtX3N1Ym1pdF9wdXQoc3VibWl0KTsKK30KKworY29uc3Qgc3RydWN0IGRybV9zY2hlZF9i
YWNrZW5kX29wcyBtc21fc2NoZWRfb3BzID0geworCS5kZXBlbmRlbmN5ID0gbXNtX2pvYl9kZXBl
bmRlbmN5LAorCS5ydW5fam9iID0gbXNtX2pvYl9ydW4sCisJLmZyZWVfam9iID0gbXNtX2pvYl9m
cmVlCit9OworCiBzdHJ1Y3QgbXNtX3JpbmdidWZmZXIgKm1zbV9yaW5nYnVmZmVyX25ldyhzdHJ1
Y3QgbXNtX2dwdSAqZ3B1LCBpbnQgaWQsCiAJCXZvaWQgKm1lbXB0cnMsIHVpbnQ2NF90IG1lbXB0
cnNfaW92YSkKIHsKIAlzdHJ1Y3QgbXNtX3JpbmdidWZmZXIgKnJpbmc7CisJbG9uZyBzY2hlZF90
aW1lb3V0OwogCWNoYXIgbmFtZVszMl07CiAJaW50IHJldDsKIApAQCAtNDUsNiArOTksMTYgQEAg
c3RydWN0IG1zbV9yaW5nYnVmZmVyICptc21fcmluZ2J1ZmZlcl9uZXcoc3RydWN0IG1zbV9ncHUg
KmdwdSwgaW50IGlkLAogCXJpbmctPm1lbXB0cnMgPSBtZW1wdHJzOwogCXJpbmctPm1lbXB0cnNf
aW92YSA9IG1lbXB0cnNfaW92YTsKIAorCSAvKiBjdXJyZW50bHkgbWFuYWdpbmcgaGFuZ2NoZWNr
IG91cnNlbHZlczogKi8KKwlzY2hlZF90aW1lb3V0ID0gTUFYX1NDSEVEVUxFX1RJTUVPVVQ7CisK
KwlyZXQgPSBkcm1fc2NoZWRfaW5pdCgmcmluZy0+c2NoZWQsICZtc21fc2NoZWRfb3BzLAorCQkJ
bnVtX2h3X3N1Ym1pc3Npb25zLCAwLCBzY2hlZF90aW1lb3V0LAorCQkJTlVMTCwgdG9fbXNtX2Jv
KHJpbmctPmJvKS0+bmFtZSk7CisJaWYgKHJldCkgeworCQlnb3RvIGZhaWw7CisJfQorCiAJSU5J
VF9MSVNUX0hFQUQoJnJpbmctPnN1Ym1pdHMpOwogCXNwaW5fbG9ja19pbml0KCZyaW5nLT5zdWJt
aXRfbG9jayk7CiAJc3Bpbl9sb2NrX2luaXQoJnJpbmctPnByZWVtcHRfbG9jayk7CkBAIC02NSw2
ICsxMjksOCBAQCB2b2lkIG1zbV9yaW5nYnVmZmVyX2Rlc3Ryb3koc3RydWN0IG1zbV9yaW5nYnVm
ZmVyICpyaW5nKQogCWlmIChJU19FUlJfT1JfTlVMTChyaW5nKSkKIAkJcmV0dXJuOwogCisJZHJt
X3NjaGVkX2ZpbmkoJnJpbmctPnNjaGVkKTsKKwogCW1zbV9mZW5jZV9jb250ZXh0X2ZyZWUocmlu
Zy0+ZmN0eCk7CiAKIAltc21fZ2VtX2tlcm5lbF9wdXQocmluZy0+Ym8sIHJpbmctPmdwdS0+YXNw
YWNlKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9tc20vbXNtX3JpbmdidWZmZXIuaCBi
L2RyaXZlcnMvZ3B1L2RybS9tc20vbXNtX3JpbmdidWZmZXIuaAppbmRleCBmZTU1ZDRhMWFhMTYu
LmQ4YzYzZGY0ZTljYSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL21zbS9tc21fcmluZ2J1
ZmZlci5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9tc20vbXNtX3JpbmdidWZmZXIuaApAQCAtNyw2
ICs3LDcgQEAKICNpZm5kZWYgX19NU01fUklOR0JVRkZFUl9IX18KICNkZWZpbmUgX19NU01fUklO
R0JVRkZFUl9IX18KIAorI2luY2x1ZGUgImRybS9ncHVfc2NoZWR1bGVyLmgiCiAjaW5jbHVkZSAi
bXNtX2Rydi5oIgogCiAjZGVmaW5lIHJibWVtcHRyKHJpbmcsIG1lbWJlcikgIFwKQEAgLTQwLDgg
KzQxLDE5IEBAIHN0cnVjdCBtc21fcmluZ2J1ZmZlciB7CiAJc3RydWN0IGRybV9nZW1fb2JqZWN0
ICpibzsKIAl1aW50MzJfdCAqc3RhcnQsICplbmQsICpjdXIsICpuZXh0OwogCisJLyoKKwkgKiBU
aGUgam9iIHNjaGVkdWxlciBmb3IgdGhpcyByaW5nLgorCSAqLworCXN0cnVjdCBkcm1fZ3B1X3Nj
aGVkdWxlciBzY2hlZDsKKwogCS8qCiAJICogTGlzdCBvZiBpbi1mbGlnaHQgc3VibWl0cyBvbiB0
aGlzIHJpbmcuICBQcm90ZWN0ZWQgYnkgc3VibWl0X2xvY2suCisJICoKKwkgKiBDdXJyZW50bHkg
anVzdCBzdWJtaXRzIHRoYXQgYXJlIGFscmVhZHkgd3JpdHRlbiBpbnRvIHRoZSByaW5nLCBub3QK
KwkgKiBzdWJtaXRzIHRoYXQgYXJlIHN0aWxsIGluIGRybV9ncHVfc2NoZWR1bGVyJ3MgcXVldWVz
LiAgQXQgYSBsYXRlcgorCSAqIHN0ZXAgd2UgY291bGQgcHJvYmFibHkgbW92ZSB0byBsZXR0aW5n
IGRybV9ncHVfc2NoZWR1bGVyIG1hbmFnZQorCSAqIGhhbmdjaGVjayBkZXRlY3Rpb24gYW5kIGtl
ZXAgdHJhY2sgb2Ygc3VibWl0IGpvYnMgdGhhdCBhcmUgaW4tCisJICogZmxpZ2h0LgogCSAqLwog
CXN0cnVjdCBsaXN0X2hlYWQgc3VibWl0czsKIAlzcGlubG9ja190IHN1Ym1pdF9sb2NrOwpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL21zbS9tc21fc3VibWl0cXVldWUuYyBiL2RyaXZlcnMv
Z3B1L2RybS9tc20vbXNtX3N1Ym1pdHF1ZXVlLmMKaW5kZXggNjZmOGQwZmIzOGIwLi42ODJiYTJh
N2MwZWMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9tc20vbXNtX3N1Ym1pdHF1ZXVlLmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL21zbS9tc21fc3VibWl0cXVldWUuYwpAQCAtMTQsNiArMTQs
OCBAQCB2b2lkIG1zbV9zdWJtaXRxdWV1ZV9kZXN0cm95KHN0cnVjdCBrcmVmICprcmVmKQogCiAJ
aWRyX2Rlc3Ryb3koJnF1ZXVlLT5mZW5jZV9pZHIpOwogCisJZHJtX3NjaGVkX2VudGl0eV9kZXN0
cm95KCZxdWV1ZS0+ZW50aXR5KTsKKwogCW1zbV9maWxlX3ByaXZhdGVfcHV0KHF1ZXVlLT5jdHgp
OwogCiAJa2ZyZWUocXVldWUpOwpAQCAtNjQsNiArNjYsOSBAQCBpbnQgbXNtX3N1Ym1pdHF1ZXVl
X2NyZWF0ZShzdHJ1Y3QgZHJtX2RldmljZSAqZHJtLCBzdHJ1Y3QgbXNtX2ZpbGVfcHJpdmF0ZSAq
Y3R4LAogewogCXN0cnVjdCBtc21fZHJtX3ByaXZhdGUgKnByaXYgPSBkcm0tPmRldl9wcml2YXRl
OwogCXN0cnVjdCBtc21fZ3B1X3N1Ym1pdHF1ZXVlICpxdWV1ZTsKKwlzdHJ1Y3QgbXNtX3Jpbmdi
dWZmZXIgKnJpbmc7CisJc3RydWN0IGRybV9ncHVfc2NoZWR1bGVyICpzY2hlZDsKKwlpbnQgcmV0
OwogCiAJaWYgKCFjdHgpCiAJCXJldHVybiAtRU5PREVWOwpAQCAtODMsNiArODgsMjcgQEAgaW50
IG1zbV9zdWJtaXRxdWV1ZV9jcmVhdGUoc3RydWN0IGRybV9kZXZpY2UgKmRybSwgc3RydWN0IG1z
bV9maWxlX3ByaXZhdGUgKmN0eCwKIAlxdWV1ZS0+ZmxhZ3MgPSBmbGFnczsKIAlxdWV1ZS0+cHJp
byA9IHByaW87CiAKKwlyaW5nID0gcHJpdi0+Z3B1LT5yYltwcmlvXTsKKwlzY2hlZCA9ICZyaW5n
LT5zY2hlZDsKKworCS8qCisJICogVE9ETyB3ZSBjYW4gYWxsb3cgbW9yZSBwcmlvcml0aWVzIHRo
YW4gd2UgaGF2ZSByaW5nYnVmZmVycyBieQorCSAqIG1hcHBpbmc6CisJICoKKwkgKiAgICByaW5n
ID0gcHJpbyAvIDM7CisJICogICAgZW50X3ByaW8gPSBEUk1fU0NIRURfUFJJT1JJVFlfTUlOICsg
KHByaW8gJSAzKTsKKwkgKgorCSAqIFByb2JhYmx5IGF2b2lkIHVzaW5nIERSTV9TQ0hFRF9QUklP
UklUWV9LRVJORUwgYXMgdGhhdCBpcworCSAqIHRyZWF0ZWQgc3BlY2lhbGx5IGluIHBsYWNlcy4K
KwkgKi8KKwlyZXQgPSBkcm1fc2NoZWRfZW50aXR5X2luaXQoJnF1ZXVlLT5lbnRpdHksCisJCQlE
Uk1fU0NIRURfUFJJT1JJVFlfTk9STUFMLAorCQkJJnNjaGVkLCAxLCBOVUxMKTsKKwlpZiAocmV0
KSB7CisJCWtmcmVlKHF1ZXVlKTsKKwkJcmV0dXJuIHJldDsKKwl9CisKIAl3cml0ZV9sb2NrKCZj
dHgtPnF1ZXVlbG9jayk7CiAKIAlxdWV1ZS0+Y3R4ID0gbXNtX2ZpbGVfcHJpdmF0ZV9nZXQoY3R4
KTsKLS0gCjIuMzEuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX18KTGluYXJvLW1tLXNpZyBtYWlsaW5nIGxpc3QKTGluYXJvLW1tLXNpZ0BsaXN0cy5saW5h
cm8ub3JnCmh0dHBzOi8vbGlzdHMubGluYXJvLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2xpbmFyby1t
bS1zaWcK
