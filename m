Return-Path: <linaro-mm-sig-bounces@lists.linaro.org>
X-Original-To: lists+linaro-mm-sig@lfdr.de
Delivered-To: lists+linaro-mm-sig@lfdr.de
Received: from lists.linaro.org (lists.linaro.org [107.22.173.205])
	by mail.lfdr.de (Postfix) with ESMTPS id F024D3D7BC8
	for <lists+linaro-mm-sig@lfdr.de>; Tue, 27 Jul 2021 19:08:12 +0200 (CEST)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 0E57A634E1
	for <lists+linaro-mm-sig@lfdr.de>; Tue, 27 Jul 2021 17:08:12 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
	id 0968361A44; Tue, 27 Jul 2021 17:08:11 +0000 (UTC)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 5E754634D7;
	Tue, 27 Jul 2021 17:08:09 +0000 (UTC)
X-Original-To: linaro-mm-sig@lists.linaro.org
Delivered-To: linaro-mm-sig@lists.linaro.org
Received: from lists.linaro.org (localhost [127.0.0.1])
 by lists.linaro.org (Postfix) with ESMTP id 04DB5634F3
 for <linaro-mm-sig@lists.linaro.org>; Tue, 27 Jul 2021 17:08:07 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
 id DD28D634DF; Tue, 27 Jul 2021 17:08:05 +0000 (UTC)
Received: from mail-pl1-f182.google.com (mail-pl1-f182.google.com
 [209.85.214.182])
 by lists.linaro.org (Postfix) with ESMTPS id 67914634D6
 for <linaro-mm-sig@lists.linaro.org>; Tue, 27 Jul 2021 17:08:03 +0000 (UTC)
Received: by mail-pl1-f182.google.com with SMTP id c16so10915216plh.7
 for <linaro-mm-sig@lists.linaro.org>; Tue, 27 Jul 2021 10:08:03 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=ne4nCKQexMGflp6jcFsczpiaFzQqZDtfk8dnUcHe14c=;
 b=LeuccoqoRLRr9U+JhqPN+kiPneA5qhJjE/B77rfLanLAt4Kq65YsTW/Qweva8NaoEt
 EGbbOoMxvME09KnCs/ZKC1x0ShXcGpvydPMkA4xz/py3j7oi30bM1Hsjz6LCIRFgzK2w
 Z1CvgvYlzZOFvBU/KYnUNRdGAQeOIfMPK6qk1EjIeKWYa90yrP96c0LNILOVeQWAkXa8
 cb3CJ6xl602GiUz5GYr1YtSY5F7Yetz0048fYCbhRI+1TFaNhrYYjdMZAtXHgnNOFCrb
 dD3tYFyIK1HkFy7Eb5og/Cml0gFd9/pUKhWA7qEvT3q3RpfM2k71XgMd9W24Vf0iYSOk
 y75Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=ne4nCKQexMGflp6jcFsczpiaFzQqZDtfk8dnUcHe14c=;
 b=KwYVVTAmIFfg9rLHJNjTyHlHXG1HV5X1ORXuJKpIUmiT84CxNVSTWV3aYYAMcbFEXU
 CvmMvNGhys7+PZq6G0eL2I09LHbQRDEXHFm3PXLMibTbqa/+CxVMRtr2ur8tH7RVDmee
 /suMkjw7v6sXMYhdDCXFO7Cnpe0qwcKdNqIboqOJ5KlajBWReSVrtBR1s7HsWwT3z5Q2
 B1rn2VOnunRjcq4UrdE2mclTjUK/SNopzI7N/yzy5gzw3JOzCXNYP+qr/TCkPRTl18vr
 QKKQffLJL6m1Rk9A2ZOWXkE75YkuBylZNr7TYySEFIjPUcUUSvUwLh/H78/5DJQP+nfH
 P0mg==
X-Gm-Message-State: AOAM532HCN53vT4SsHlUQf61fI0UBhIaGOZlNlo3nd92tS/kttJeC2HM
 GXqBUTSkWSgc1FIrg5nfh2g=
X-Google-Smtp-Source: ABdhPJwpbCAevp5ftwytmHNYT2YNnxJnktqJ1dznSATEEvTKAgAj+fmeaISd0UPJuN6KX5q1pRM/OA==
X-Received: by 2002:a05:6a00:2126:b029:39b:4cdf:16ff with SMTP id
 n6-20020a056a002126b029039b4cdf16ffmr8710840pfj.81.1627405682409; 
 Tue, 27 Jul 2021 10:08:02 -0700 (PDT)
Received: from localhost ([2601:1c0:5200:a6:307:a401:7b76:c6e5])
 by smtp.gmail.com with ESMTPSA id 30sm4956964pgq.31.2021.07.27.10.08.01
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Tue, 27 Jul 2021 10:08:01 -0700 (PDT)
From: Rob Clark <robdclark@gmail.com>
To: dri-devel@lists.freedesktop.org
Date: Tue, 27 Jul 2021 10:11:25 -0700
Message-Id: <20210727171143.2549475-10-robdclark@gmail.com>
X-Mailer: git-send-email 2.31.1
In-Reply-To: <20210727171143.2549475-1-robdclark@gmail.com>
References: <20210727171143.2549475-1-robdclark@gmail.com>
MIME-Version: 1.0
X-Virus-Scanned: ClamAV using ClamSMTP
Subject: [Linaro-mm-sig] [PATCH v3 09/13] drm/msm: Conversion to drm
 scheduler
X-BeenThere: linaro-mm-sig@lists.linaro.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: "Unified memory management interest group."
 <linaro-mm-sig.lists.linaro.org>
List-Unsubscribe: <https://lists.linaro.org/mailman/options/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=unsubscribe>
List-Archive: <http://lists.linaro.org/pipermail/linaro-mm-sig/>
List-Post: <mailto:linaro-mm-sig@lists.linaro.org>
List-Help: <mailto:linaro-mm-sig-request@lists.linaro.org?subject=help>
List-Subscribe: <https://lists.linaro.org/mailman/listinfo/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=subscribe>
Cc: Rob Clark <robdclark@chromium.org>,
 "open list:DRM DRIVER FOR MSM ADRENO GPU"
 <freedreno@lists.freedesktop.org>, David Airlie <airlied@linux.ie>,
 "open list:DRM DRIVER FOR MSM ADRENO GPU" <linux-arm-msm@vger.kernel.org>,
 open list <linux-kernel@vger.kernel.org>,
 "moderated list:DMA BUFFER SHARING FRAMEWORK" <linaro-mm-sig@lists.linaro.org>,
 Rob Clark <robdclark@gmail.com>, Daniel Vetter <daniel@ffwll.ch>,
 Sean Paul <sean@poorly.run>,
 =?UTF-8?q?Christian=20K=C3=B6nig?= <christian.koenig@amd.com>,
 "open list:DMA BUFFER SHARING FRAMEWORK" <linux-media@vger.kernel.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linaro-mm-sig-bounces@lists.linaro.org
Sender: "Linaro-mm-sig" <linaro-mm-sig-bounces@lists.linaro.org>
X-Virus-Scanned: ClamAV using ClamSMTP

RnJvbTogUm9iIENsYXJrIDxyb2JkY2xhcmtAY2hyb21pdW0ub3JnPgoKRm9yIGV4aXN0aW5nIGFk
cmVub3MsIHRoZXJlIGlzIG9uZSBvciBtb3JlIHJpbmdidWZmZXIsIGRlcGVuZGluZyBvbgp3aGV0
aGVyIHByZWVtcHRpb24gaXMgc3VwcG9ydGVkLiAgV2hlbiBwcmVlbXB0aW9uIGlzIHN1cHBvcnRl
ZCwgZWFjaApyaW5nYnVmZmVyIGhhcyBpdCdzIG93biBwcmlvcml0eS4gIEEgc3VibWl0cXVldWUg
KHdoaWNoIG1hcHMgdG8gYQpnbCBjb250ZXh0IG9yIHZrIHF1ZXVlIGluIHVzZXJzcGFjZSkgaXMg
bWFwcGVkIHRvIGEgc3BlY2lmaWMgcmluZy0KYnVmZmVyIGF0IGNyZWF0aW9uIHRpbWUsIGJhc2Vk
IG9uIHRoZSBzdWJtaXRxdWV1ZSdzIHByaW9yaXR5LgoKRWFjaCByaW5nYnVmZmVyIGhhcyBpdCdz
IG93biBkcm1fZ3B1X3NjaGVkdWxlci4gIEVhY2ggc3VibWl0cXVldWUKbWFwcyB0byBhIGRybV9z
Y2hlZF9lbnRpdHkuICBBbmQgZWFjaCBzdWJtaXQgbWFwcyB0byBhIGRybV9zY2hlZF9qb2IuCgpD
bG9zZXM6IGh0dHBzOi8vZ2l0bGFiLmZyZWVkZXNrdG9wLm9yZy9kcm0vbXNtLy0vaXNzdWVzLzQK
U2lnbmVkLW9mZi1ieTogUm9iIENsYXJrIDxyb2JkY2xhcmtAY2hyb21pdW0ub3JnPgpBY2tlZC1i
eTogQ2hyaXN0aWFuIEvDtm5pZyA8Y2hyaXN0aWFuLmtvZW5pZ0BhbWQuY29tPgotLS0KIGRyaXZl
cnMvZ3B1L2RybS9tc20vS2NvbmZpZyAgICAgICAgICAgfCAgIDEgKwogZHJpdmVycy9ncHUvZHJt
L21zbS9tc21fZ2VtLmMgICAgICAgICB8ICAzNSAtLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9tc20v
bXNtX2dlbS5oICAgICAgICAgfCAgMjYgKysrKy0KIGRyaXZlcnMvZ3B1L2RybS9tc20vbXNtX2dl
bV9zdWJtaXQuYyAgfCAxNjEgKysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0KIGRyaXZlcnMvZ3B1
L2RybS9tc20vbXNtX2dwdS5jICAgICAgICAgfCAgMTMgKy0tCiBkcml2ZXJzL2dwdS9kcm0vbXNt
L21zbV9ncHUuaCAgICAgICAgIHwgICAyICsKIGRyaXZlcnMvZ3B1L2RybS9tc20vbXNtX3JkLmMg
ICAgICAgICAgfCAgIDYgKy0KIGRyaXZlcnMvZ3B1L2RybS9tc20vbXNtX3JpbmdidWZmZXIuYyAg
fCAgNjYgKysrKysrKysrKysKIGRyaXZlcnMvZ3B1L2RybS9tc20vbXNtX3JpbmdidWZmZXIuaCAg
fCAgMTIgKysKIGRyaXZlcnMvZ3B1L2RybS9tc20vbXNtX3N1Ym1pdHF1ZXVlLmMgfCAgMjYgKysr
KysKIDEwIGZpbGVzIGNoYW5nZWQsIDIxNyBpbnNlcnRpb25zKCspLCAxMzEgZGVsZXRpb25zKC0p
CgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL21zbS9LY29uZmlnIGIvZHJpdmVycy9ncHUv
ZHJtL21zbS9LY29uZmlnCmluZGV4IDUyNTM2ZTdhZGI5NS4uZGM3ZjNlNDA4NTBiIDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vbXNtL0tjb25maWcKKysrIGIvZHJpdmVycy9ncHUvZHJtL21z
bS9LY29uZmlnCkBAIC0xNCw2ICsxNCw3IEBAIGNvbmZpZyBEUk1fTVNNCiAJc2VsZWN0IFJFR1VM
QVRPUgogCXNlbGVjdCBEUk1fS01TX0hFTFBFUgogCXNlbGVjdCBEUk1fUEFORUwKKwlzZWxlY3Qg
RFJNX1NDSEVECiAJc2VsZWN0IFNITUVNCiAJc2VsZWN0IFRNUEZTCiAJc2VsZWN0IFFDT01fU0NN
IGlmIEFSQ0hfUUNPTQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL21zbS9tc21fZ2VtLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vbXNtL21zbV9nZW0uYwppbmRleCA0ZTk5YzQ0OGI4M2EuLmE1Mjdh
NmIxZDZiYSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL21zbS9tc21fZ2VtLmMKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL21zbS9tc21fZ2VtLmMKQEAgLTgwNiw0MSArODA2LDYgQEAgdm9pZCBt
c21fZ2VtX3Z1bm1hcChzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaikKIAltc21fb2JqLT52YWRk
ciA9IE5VTEw7CiB9CiAKLS8qIG11c3QgYmUgY2FsbGVkIGJlZm9yZSBfbW92ZV90b19hY3RpdmUo
KS4uICovCi1pbnQgbXNtX2dlbV9zeW5jX29iamVjdChzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9i
aiwKLQkJc3RydWN0IG1zbV9mZW5jZV9jb250ZXh0ICpmY3R4LCBib29sIGV4Y2x1c2l2ZSkKLXsK
LQlzdHJ1Y3QgZG1hX3Jlc3ZfbGlzdCAqZm9iajsKLQlzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZTsK
LQlpbnQgaSwgcmV0OwotCi0JZm9iaiA9IGRtYV9yZXN2X3NoYXJlZF9saXN0KG9iai0+cmVzdik7
Ci0JaWYgKCFmb2JqIHx8IChmb2JqLT5zaGFyZWRfY291bnQgPT0gMCkpIHsKLQkJZmVuY2UgPSBk
bWFfcmVzdl9leGNsX2ZlbmNlKG9iai0+cmVzdik7Ci0JCS8qIGRvbid0IG5lZWQgdG8gd2FpdCBv
biBvdXIgb3duIGZlbmNlcywgc2luY2UgcmluZyBpcyBmaWZvICovCi0JCWlmIChmZW5jZSAmJiAo
ZmVuY2UtPmNvbnRleHQgIT0gZmN0eC0+Y29udGV4dCkpIHsKLQkJCXJldCA9IGRtYV9mZW5jZV93
YWl0KGZlbmNlLCB0cnVlKTsKLQkJCWlmIChyZXQpCi0JCQkJcmV0dXJuIHJldDsKLQkJfQotCX0K
LQotCWlmICghZXhjbHVzaXZlIHx8ICFmb2JqKQotCQlyZXR1cm4gMDsKLQotCWZvciAoaSA9IDA7
IGkgPCBmb2JqLT5zaGFyZWRfY291bnQ7IGkrKykgewotCQlmZW5jZSA9IHJjdV9kZXJlZmVyZW5j
ZV9wcm90ZWN0ZWQoZm9iai0+c2hhcmVkW2ldLAotCQkJCQkJZG1hX3Jlc3ZfaGVsZChvYmotPnJl
c3YpKTsKLQkJaWYgKGZlbmNlLT5jb250ZXh0ICE9IGZjdHgtPmNvbnRleHQpIHsKLQkJCXJldCA9
IGRtYV9mZW5jZV93YWl0KGZlbmNlLCB0cnVlKTsKLQkJCWlmIChyZXQpCi0JCQkJcmV0dXJuIHJl
dDsKLQkJfQotCX0KLQotCXJldHVybiAwOwotfQotCiB2b2lkIG1zbV9nZW1fYWN0aXZlX2dldChz
dHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaiwgc3RydWN0IG1zbV9ncHUgKmdwdSkKIHsKIAlzdHJ1
Y3QgbXNtX2dlbV9vYmplY3QgKm1zbV9vYmogPSB0b19tc21fYm8ob2JqKTsKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9tc20vbXNtX2dlbS5oIGIvZHJpdmVycy9ncHUvZHJtL21zbS9tc21f
Z2VtLmgKaW5kZXggZTA1NzlhYmRhNWI5Li5hNDgxMTQwNThmZjkgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9tc20vbXNtX2dlbS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9tc20vbXNtX2dl
bS5oCkBAIC05LDYgKzksNyBAQAogCiAjaW5jbHVkZSA8bGludXgva3JlZi5oPgogI2luY2x1ZGUg
PGxpbnV4L2RtYS1yZXN2Lmg+CisjaW5jbHVkZSAiZHJtL2dwdV9zY2hlZHVsZXIuaCIKICNpbmNs
dWRlICJtc21fZHJ2LmgiCiAKIC8qIE1ha2UgYWxsIEdFTSByZWxhdGVkIFdBUk5fT04oKXMgcmF0
ZWxpbWl0ZWQuLiB3aGVuIHRoaW5ncyBnbyB3cm9uZyB0aGV5CkBAIC0xNDMsOCArMTQ0LDYgQEAg
dm9pZCAqbXNtX2dlbV9nZXRfdmFkZHJfYWN0aXZlKHN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2Jq
KTsKIHZvaWQgbXNtX2dlbV9wdXRfdmFkZHJfbG9ja2VkKHN0cnVjdCBkcm1fZ2VtX29iamVjdCAq
b2JqKTsKIHZvaWQgbXNtX2dlbV9wdXRfdmFkZHIoc3RydWN0IGRybV9nZW1fb2JqZWN0ICpvYmop
OwogaW50IG1zbV9nZW1fbWFkdmlzZShzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaiwgdW5zaWdu
ZWQgbWFkdik7Ci1pbnQgbXNtX2dlbV9zeW5jX29iamVjdChzdHJ1Y3QgZHJtX2dlbV9vYmplY3Qg
Km9iaiwKLQkJc3RydWN0IG1zbV9mZW5jZV9jb250ZXh0ICpmY3R4LCBib29sIGV4Y2x1c2l2ZSk7
CiB2b2lkIG1zbV9nZW1fYWN0aXZlX2dldChzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaiwgc3Ry
dWN0IG1zbV9ncHUgKmdwdSk7CiB2b2lkIG1zbV9nZW1fYWN0aXZlX3B1dChzdHJ1Y3QgZHJtX2dl
bV9vYmplY3QgKm9iaik7CiBpbnQgbXNtX2dlbV9jcHVfcHJlcChzdHJ1Y3QgZHJtX2dlbV9vYmpl
Y3QgKm9iaiwgdWludDMyX3Qgb3AsIGt0aW1lX3QgKnRpbWVvdXQpOwpAQCAtMzExLDYgKzMxMCw3
IEBAIHZvaWQgbXNtX2dlbV92dW5tYXAoc3RydWN0IGRybV9nZW1fb2JqZWN0ICpvYmopOwogICog
bWFrZSBpdCBlYXNpZXIgdG8gdW53aW5kIHdoZW4gdGhpbmdzIGdvIHdyb25nLCBldGMpLgogICov
CiBzdHJ1Y3QgbXNtX2dlbV9zdWJtaXQgeworCXN0cnVjdCBkcm1fc2NoZWRfam9iIGJhc2U7CiAJ
c3RydWN0IGtyZWYgcmVmOwogCXN0cnVjdCBkcm1fZGV2aWNlICpkZXY7CiAJc3RydWN0IG1zbV9n
cHUgKmdwdTsKQEAgLTMxOSw3ICszMTksMjIgQEAgc3RydWN0IG1zbV9nZW1fc3VibWl0IHsKIAlz
dHJ1Y3QgbGlzdF9oZWFkIGJvX2xpc3Q7CiAJc3RydWN0IHd3X2FjcXVpcmVfY3R4IHRpY2tldDsK
IAl1aW50MzJfdCBzZXFubzsJCS8qIFNlcXVlbmNlIG51bWJlciBvZiB0aGUgc3VibWl0IG9uIHRo
ZSByaW5nICovCi0Jc3RydWN0IGRtYV9mZW5jZSAqZmVuY2U7CisKKwkvKiBBcnJheSBvZiBzdHJ1
Y3QgZG1hX2ZlbmNlICogdG8gYmxvY2sgb24gYmVmb3JlIHN1Ym1pdHRpbmcgdGhpcyBqb2IuCisJ
ICovCisJc3RydWN0IHhhcnJheSBkZXBzOworCXVuc2lnbmVkIGxvbmcgbGFzdF9kZXA7CisKKwkv
KiBIdyBmZW5jZSwgd2hpY2ggaXMgY3JlYXRlZCB3aGVuIHRoZSBzY2hlZHVsZXIgZXhlY3V0ZXMg
dGhlIGpvYiwgYW5kCisJICogaXMgc2lnbmFsZWQgd2hlbiB0aGUgaHcgZmluaXNoZXMgKHZpYSBz
ZXFubyB3cml0ZSBmcm9tIGNtZHN0cmVhbSkKKwkgKi8KKwlzdHJ1Y3QgZG1hX2ZlbmNlICpod19m
ZW5jZTsKKworCS8qIFVzZXJzcGFjZSB2aXNpYmxlIGZlbmNlLCB3aGljaCBpcyBzaWduYWxlZCBi
eSB0aGUgc2NoZWR1bGVyIGFmdGVyCisJICogdGhlIGh3X2ZlbmNlIGlzIHNpZ25hbGVkLgorCSAq
LworCXN0cnVjdCBkbWFfZmVuY2UgKnVzZXJfZmVuY2U7CisKIAlpbnQgZmVuY2VfaWQ7ICAgICAg
IC8qIGtleSBpbnRvIHF1ZXVlLT5mZW5jZV9pZHIgKi8KIAlzdHJ1Y3QgbXNtX2dwdV9zdWJtaXRx
dWV1ZSAqcXVldWU7CiAJc3RydWN0IHBpZCAqcGlkOyAgICAvKiBzdWJtaXR0aW5nIHByb2Nlc3Mg
Ki8KQEAgLTM1MCw2ICszNjUsMTEgQEAgc3RydWN0IG1zbV9nZW1fc3VibWl0IHsKIAl9IGJvc1td
OwogfTsKIAorc3RhdGljIGlubGluZSBzdHJ1Y3QgbXNtX2dlbV9zdWJtaXQgKnRvX21zbV9zdWJt
aXQoc3RydWN0IGRybV9zY2hlZF9qb2IgKmpvYikKK3sKKwlyZXR1cm4gY29udGFpbmVyX29mKGpv
Yiwgc3RydWN0IG1zbV9nZW1fc3VibWl0LCBiYXNlKTsKK30KKwogdm9pZCBfX21zbV9nZW1fc3Vi
bWl0X2Rlc3Ryb3koc3RydWN0IGtyZWYgKmtyZWYpOwogCiBzdGF0aWMgaW5saW5lIHZvaWQgbXNt
X2dlbV9zdWJtaXRfZ2V0KHN0cnVjdCBtc21fZ2VtX3N1Ym1pdCAqc3VibWl0KQpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL21zbS9tc21fZ2VtX3N1Ym1pdC5jIGIvZHJpdmVycy9ncHUvZHJt
L21zbS9tc21fZ2VtX3N1Ym1pdC5jCmluZGV4IGY1NzAxNTViYzA4Ni4uMmIxNTg0MzNhNmU1IDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vbXNtL21zbV9nZW1fc3VibWl0LmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL21zbS9tc21fZ2VtX3N1Ym1pdC5jCkBAIC0zMyw2ICszMyw3IEBAIHN0YXRp
YyBzdHJ1Y3QgbXNtX2dlbV9zdWJtaXQgKnN1Ym1pdF9jcmVhdGUoc3RydWN0IGRybV9kZXZpY2Ug
KmRldiwKIHsKIAlzdHJ1Y3QgbXNtX2dlbV9zdWJtaXQgKnN1Ym1pdDsKIAl1aW50NjRfdCBzejsK
KwlpbnQgcmV0OwogCiAJc3ogPSBzdHJ1Y3Rfc2l6ZShzdWJtaXQsIGJvcywgbnJfYm9zKSArCiAJ
CQkoKHU2NClucl9jbWRzICogc2l6ZW9mKHN1Ym1pdC0+Y21kWzBdKSk7CkBAIC00NCw2ICs0NSwx
NCBAQCBzdGF0aWMgc3RydWN0IG1zbV9nZW1fc3VibWl0ICpzdWJtaXRfY3JlYXRlKHN0cnVjdCBk
cm1fZGV2aWNlICpkZXYsCiAJaWYgKCFzdWJtaXQpCiAJCXJldHVybiBFUlJfUFRSKC1FTk9NRU0p
OwogCisJcmV0ID0gZHJtX3NjaGVkX2pvYl9pbml0KCZzdWJtaXQtPmJhc2UsICZxdWV1ZS0+ZW50
aXR5LCBxdWV1ZSk7CisJaWYgKHJldCkgeworCQlrZnJlZShzdWJtaXQpOworCQlyZXR1cm4gRVJS
X1BUUihyZXQpOworCX0KKworCXhhX2luaXRfZmxhZ3MoJnN1Ym1pdC0+ZGVwcywgWEFfRkxBR1Nf
QUxMT0MpOworCiAJa3JlZl9pbml0KCZzdWJtaXQtPnJlZik7CiAJc3VibWl0LT5kZXYgPSBkZXY7
CiAJc3VibWl0LT5hc3BhY2UgPSBxdWV1ZS0+Y3R4LT5hc3BhY2U7CkBAIC02Myw2ICs3Miw4IEBA
IHZvaWQgX19tc21fZ2VtX3N1Ym1pdF9kZXN0cm95KHN0cnVjdCBrcmVmICprcmVmKQogewogCXN0
cnVjdCBtc21fZ2VtX3N1Ym1pdCAqc3VibWl0ID0KIAkJCWNvbnRhaW5lcl9vZihrcmVmLCBzdHJ1
Y3QgbXNtX2dlbV9zdWJtaXQsIHJlZik7CisJdW5zaWduZWQgbG9uZyBpbmRleDsKKwlzdHJ1Y3Qg
ZG1hX2ZlbmNlICpmZW5jZTsKIAl1bnNpZ25lZCBpOwogCiAJaWYgKHN1Ym1pdC0+ZmVuY2VfaWQp
IHsKQEAgLTcxLDcgKzgyLDE0IEBAIHZvaWQgX19tc21fZ2VtX3N1Ym1pdF9kZXN0cm95KHN0cnVj
dCBrcmVmICprcmVmKQogCQltdXRleF91bmxvY2soJnN1Ym1pdC0+cXVldWUtPmxvY2spOwogCX0K
IAotCWRtYV9mZW5jZV9wdXQoc3VibWl0LT5mZW5jZSk7CisJeGFfZm9yX2VhY2ggKCZzdWJtaXQt
PmRlcHMsIGluZGV4LCBmZW5jZSkgeworCQlkbWFfZmVuY2VfcHV0KGZlbmNlKTsKKwl9CisKKwl4
YV9kZXN0cm95KCZzdWJtaXQtPmRlcHMpOworCisJZG1hX2ZlbmNlX3B1dChzdWJtaXQtPnVzZXJf
ZmVuY2UpOworCWRtYV9mZW5jZV9wdXQoc3VibWl0LT5od19mZW5jZSk7CiAKIAlwdXRfcGlkKHN1
Ym1pdC0+cGlkKTsKIAltc21fc3VibWl0cXVldWVfcHV0KHN1Ym1pdC0+cXVldWUpOwpAQCAtMzA3
LDcgKzMyNSw3IEBAIHN0YXRpYyBpbnQgc3VibWl0X2ZlbmNlX3N5bmMoc3RydWN0IG1zbV9nZW1f
c3VibWl0ICpzdWJtaXQsIGJvb2wgbm9faW1wbGljaXQpCiAJaW50IGksIHJldCA9IDA7CiAKIAlm
b3IgKGkgPSAwOyBpIDwgc3VibWl0LT5ucl9ib3M7IGkrKykgewotCQlzdHJ1Y3QgbXNtX2dlbV9v
YmplY3QgKm1zbV9vYmogPSBzdWJtaXQtPmJvc1tpXS5vYmo7CisJCXN0cnVjdCBkcm1fZ2VtX29i
amVjdCAqb2JqID0gJnN1Ym1pdC0+Ym9zW2ldLm9iai0+YmFzZTsKIAkJYm9vbCB3cml0ZSA9IHN1
Ym1pdC0+Ym9zW2ldLmZsYWdzICYgTVNNX1NVQk1JVF9CT19XUklURTsKIAogCQlpZiAoIXdyaXRl
KSB7CkBAIC0zMTYsOCArMzM0LDcgQEAgc3RhdGljIGludCBzdWJtaXRfZmVuY2Vfc3luYyhzdHJ1
Y3QgbXNtX2dlbV9zdWJtaXQgKnN1Ym1pdCwgYm9vbCBub19pbXBsaWNpdCkKIAkJCSAqIHN0cmFu
Z2UgcGxhY2UgdG8gY2FsbCBpdC4gIE9UT0ggdGhpcyBpcyBhCiAJCQkgKiBjb252ZW5pZW50IGNh
bi1mYWlsIHBvaW50IHRvIGhvb2sgaXQgaW4uCiAJCQkgKi8KLQkJCXJldCA9IGRtYV9yZXN2X3Jl
c2VydmVfc2hhcmVkKG1zbV9vYmotPmJhc2UucmVzdiwKLQkJCQkJCQkJMSk7CisJCQlyZXQgPSBk
bWFfcmVzdl9yZXNlcnZlX3NoYXJlZChvYmotPnJlc3YsIDEpOwogCQkJaWYgKHJldCkKIAkJCQly
ZXR1cm4gcmV0OwogCQl9CkBAIC0zMjUsNyArMzQyLDcgQEAgc3RhdGljIGludCBzdWJtaXRfZmVu
Y2Vfc3luYyhzdHJ1Y3QgbXNtX2dlbV9zdWJtaXQgKnN1Ym1pdCwgYm9vbCBub19pbXBsaWNpdCkK
IAkJaWYgKG5vX2ltcGxpY2l0KQogCQkJY29udGludWU7CiAKLQkJcmV0ID0gbXNtX2dlbV9zeW5j
X29iamVjdCgmbXNtX29iai0+YmFzZSwgc3VibWl0LT5yaW5nLT5mY3R4LAorCQlyZXQgPSBkcm1f
Z2VtX2ZlbmNlX2FycmF5X2FkZF9pbXBsaWNpdCgmc3VibWl0LT5kZXBzLCBvYmosCiAJCQl3cml0
ZSk7CiAJCWlmIChyZXQpCiAJCQlicmVhazsKQEAgLTM3Niw5ICszOTMsOSBAQCBzdGF0aWMgdm9p
ZCBzdWJtaXRfYXR0YWNoX29iamVjdF9mZW5jZXMoc3RydWN0IG1zbV9nZW1fc3VibWl0ICpzdWJt
aXQpCiAJCXN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqID0gJnN1Ym1pdC0+Ym9zW2ldLm9iai0+
YmFzZTsKIAogCQlpZiAoc3VibWl0LT5ib3NbaV0uZmxhZ3MgJiBNU01fU1VCTUlUX0JPX1dSSVRF
KQotCQkJZG1hX3Jlc3ZfYWRkX2V4Y2xfZmVuY2Uob2JqLT5yZXN2LCBzdWJtaXQtPmZlbmNlKTsK
KwkJCWRtYV9yZXN2X2FkZF9leGNsX2ZlbmNlKG9iai0+cmVzdiwgc3VibWl0LT51c2VyX2ZlbmNl
KTsKIAkJZWxzZSBpZiAoc3VibWl0LT5ib3NbaV0uZmxhZ3MgJiBNU01fU1VCTUlUX0JPX1JFQUQp
Ci0JCQlkbWFfcmVzdl9hZGRfc2hhcmVkX2ZlbmNlKG9iai0+cmVzdiwgc3VibWl0LT5mZW5jZSk7
CisJCQlkbWFfcmVzdl9hZGRfc2hhcmVkX2ZlbmNlKG9iai0+cmVzdiwgc3VibWl0LT51c2VyX2Zl
bmNlKTsKIAl9CiB9CiAKQEAgLTUxNywxMiArNTM0LDEyIEBAIHN0cnVjdCBtc21fc3VibWl0X3Bv
c3RfZGVwIHsKIAlzdHJ1Y3QgZG1hX2ZlbmNlX2NoYWluICpjaGFpbjsKIH07CiAKLXN0YXRpYyBz
dHJ1Y3QgZHJtX3N5bmNvYmogKiptc21fd2FpdF9kZXBzKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYs
Ci0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJ1Y3QgZHJtX2Zp
bGUgKmZpbGUsCi0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1aW50
NjRfdCBpbl9zeW5jb2Jqc19hZGRyLAotICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgdWludDMyX3QgbnJfaW5fc3luY29ianMsCi0gICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICBzaXplX3Qgc3luY29ial9zdHJpZGUsCi0gICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJ1Y3QgbXNtX3JpbmdidWZmZXIgKnJpbmcp
CitzdGF0aWMgc3RydWN0IGRybV9zeW5jb2JqICoqbXNtX3BhcnNlX2RlcHMoc3RydWN0IG1zbV9n
ZW1fc3VibWl0ICpzdWJtaXQsCisgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgc3RydWN0IGRybV9maWxlICpmaWxlLAorICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIHVpbnQ2NF90IGluX3N5bmNvYmpzX2FkZHIsCisgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdWludDMyX3QgbnJfaW5fc3luY29ianMsCisg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZV90IHN5bmNvYmpf
c3RyaWRlLAorICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cnVj
dCBtc21fcmluZ2J1ZmZlciAqcmluZykKIHsKIAlzdHJ1Y3QgZHJtX3N5bmNvYmogKipzeW5jb2Jq
cyA9IE5VTEw7CiAJc3RydWN0IGRybV9tc21fZ2VtX3N1Ym1pdF9zeW5jb2JqIHN5bmNvYmpfZGVz
YyA9IHswfTsKQEAgLTU0Niw3ICs1NjMsNyBAQCBzdGF0aWMgc3RydWN0IGRybV9zeW5jb2JqICoq
bXNtX3dhaXRfZGVwcyhzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCQl9CiAKIAkJaWYgKHN5bmNv
YmpfZGVzYy5wb2ludCAmJgotCQkgICAgIWRybV9jb3JlX2NoZWNrX2ZlYXR1cmUoZGV2LCBEUklW
RVJfU1lOQ09CSl9USU1FTElORSkpIHsKKwkJICAgICFkcm1fY29yZV9jaGVja19mZWF0dXJlKHN1
Ym1pdC0+ZGV2LCBEUklWRVJfU1lOQ09CSl9USU1FTElORSkpIHsKIAkJCXJldCA9IC1FT1BOT1RT
VVBQOwogCQkJYnJlYWs7CiAJCX0KQEAgLTU2MSwxMCArNTc4LDcgQEAgc3RhdGljIHN0cnVjdCBk
cm1fc3luY29iaiAqKm1zbV93YWl0X2RlcHMoc3RydWN0IGRybV9kZXZpY2UgKmRldiwKIAkJaWYg
KHJldCkKIAkJCWJyZWFrOwogCi0JCWlmICghZG1hX2ZlbmNlX21hdGNoX2NvbnRleHQoZmVuY2Us
IHJpbmctPmZjdHgtPmNvbnRleHQpKQotCQkJcmV0ID0gZG1hX2ZlbmNlX3dhaXQoZmVuY2UsIHRy
dWUpOwotCi0JCWRtYV9mZW5jZV9wdXQoZmVuY2UpOworCQlyZXQgPSBkcm1fZ2VtX2ZlbmNlX2Fy
cmF5X2FkZCgmc3VibWl0LT5kZXBzLCBmZW5jZSk7CiAJCWlmIChyZXQpCiAJCQlicmVhazsKIApA
QCAtNzQxLDQ3ICs3NTUsNiBAQCBpbnQgbXNtX2lvY3RsX2dlbV9zdWJtaXQoc3RydWN0IGRybV9k
ZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKIAl0cmFjZV9tc21fZ3B1X3N1Ym1pdChwaWRfbnIocGlk
KSwgcmluZy0+aWQsIHN1Ym1pdGlkLAogCQlhcmdzLT5ucl9ib3MsIGFyZ3MtPm5yX2NtZHMpOwog
Ci0JaWYgKGFyZ3MtPmZsYWdzICYgTVNNX1NVQk1JVF9GRU5DRV9GRF9JTikgewotCQlzdHJ1Y3Qg
ZG1hX2ZlbmNlICppbl9mZW5jZTsKLQotCQlpbl9mZW5jZSA9IHN5bmNfZmlsZV9nZXRfZmVuY2Uo
YXJncy0+ZmVuY2VfZmQpOwotCi0JCWlmICghaW5fZmVuY2UpCi0JCQlyZXR1cm4gLUVJTlZBTDsK
LQotCQkvKgotCQkgKiBXYWl0IGlmIHRoZSBmZW5jZSBpcyBmcm9tIGEgZm9yZWlnbiBjb250ZXh0
LCBvciBpZiB0aGUgZmVuY2UKLQkJICogYXJyYXkgY29udGFpbnMgYW55IGZlbmNlIGZyb20gYSBm
b3JlaWduIGNvbnRleHQuCi0JCSAqLwotCQlyZXQgPSAwOwotCQlpZiAoIWRtYV9mZW5jZV9tYXRj
aF9jb250ZXh0KGluX2ZlbmNlLCByaW5nLT5mY3R4LT5jb250ZXh0KSkKLQkJCXJldCA9IGRtYV9m
ZW5jZV93YWl0KGluX2ZlbmNlLCB0cnVlKTsKLQotCQlkbWFfZmVuY2VfcHV0KGluX2ZlbmNlKTsK
LQkJaWYgKHJldCkKLQkJCXJldHVybiByZXQ7Ci0JfQotCi0JaWYgKGFyZ3MtPmZsYWdzICYgTVNN
X1NVQk1JVF9TWU5DT0JKX0lOKSB7Ci0JCXN5bmNvYmpzX3RvX3Jlc2V0ID0gbXNtX3dhaXRfZGVw
cyhkZXYsIGZpbGUsCi0JCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcmdzLT5p
bl9zeW5jb2JqcywKLQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyZ3MtPm5y
X2luX3N5bmNvYmpzLAotCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJncy0+
c3luY29ial9zdHJpZGUsIHJpbmcpOwotCQlpZiAoSVNfRVJSKHN5bmNvYmpzX3RvX3Jlc2V0KSkK
LQkJCXJldHVybiBQVFJfRVJSKHN5bmNvYmpzX3RvX3Jlc2V0KTsKLQl9Ci0KLQlpZiAoYXJncy0+
ZmxhZ3MgJiBNU01fU1VCTUlUX1NZTkNPQkpfT1VUKSB7Ci0JCXBvc3RfZGVwcyA9IG1zbV9wYXJz
ZV9wb3N0X2RlcHMoZGV2LCBmaWxlLAotCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IGFyZ3MtPm91dF9zeW5jb2JqcywKLQkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBh
cmdzLT5ucl9vdXRfc3luY29ianMsCi0JCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
YXJncy0+c3luY29ial9zdHJpZGUpOwotCQlpZiAoSVNfRVJSKHBvc3RfZGVwcykpIHsKLQkJCXJl
dCA9IFBUUl9FUlIocG9zdF9kZXBzKTsKLQkJCWdvdG8gb3V0X3Bvc3RfdW5sb2NrOwotCQl9Ci0J
fQotCiAJcmV0ID0gbXV0ZXhfbG9ja19pbnRlcnJ1cHRpYmxlKCZkZXYtPnN0cnVjdF9tdXRleCk7
CiAJaWYgKHJldCkKIAkJZ290byBvdXRfcG9zdF91bmxvY2s7CkBAIC04MDcsMjIgKzc4MCw1MCBA
QCBpbnQgbXNtX2lvY3RsX2dlbV9zdWJtaXQoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAq
ZGF0YSwKIAlpZiAoYXJncy0+ZmxhZ3MgJiBNU01fU1VCTUlUX1NVRE8pCiAJCXN1Ym1pdC0+aW5f
cmIgPSB0cnVlOwogCisJaWYgKGFyZ3MtPmZsYWdzICYgTVNNX1NVQk1JVF9GRU5DRV9GRF9JTikg
eworCQlzdHJ1Y3QgZG1hX2ZlbmNlICppbl9mZW5jZTsKKworCQlpbl9mZW5jZSA9IHN5bmNfZmls
ZV9nZXRfZmVuY2UoYXJncy0+ZmVuY2VfZmQpOworCisJCWlmICghaW5fZmVuY2UpIHsKKwkJCXJl
dCA9IC1FSU5WQUw7CisJCQlnb3RvIG91dF91bmxvY2s7CisJCX0KKworCQlyZXQgPSBkcm1fZ2Vt
X2ZlbmNlX2FycmF5X2FkZCgmc3VibWl0LT5kZXBzLCBpbl9mZW5jZSk7CisJCWlmIChyZXQpCisJ
CQlnb3RvIG91dF91bmxvY2s7CisJfQorCisJaWYgKGFyZ3MtPmZsYWdzICYgTVNNX1NVQk1JVF9T
WU5DT0JKX0lOKSB7CisJCXN5bmNvYmpzX3RvX3Jlc2V0ID0gbXNtX3BhcnNlX2RlcHMoc3VibWl0
LCBmaWxlLAorCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyZ3MtPmluX3N5
bmNvYmpzLAorCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyZ3MtPm5yX2lu
X3N5bmNvYmpzLAorCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyZ3MtPnN5
bmNvYmpfc3RyaWRlLCByaW5nKTsKKwkJaWYgKElTX0VSUihzeW5jb2Jqc190b19yZXNldCkpIHsK
KwkJCXJldCA9IFBUUl9FUlIoc3luY29ianNfdG9fcmVzZXQpOworCQkJZ290byBvdXRfdW5sb2Nr
OworCQl9CisJfQorCisJaWYgKGFyZ3MtPmZsYWdzICYgTVNNX1NVQk1JVF9TWU5DT0JKX09VVCkg
eworCQlwb3N0X2RlcHMgPSBtc21fcGFyc2VfcG9zdF9kZXBzKGRldiwgZmlsZSwKKwkJICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICBhcmdzLT5vdXRfc3luY29ianMsCisJCSAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgYXJncy0+bnJfb3V0X3N5bmNvYmpzLAorCQkgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIGFyZ3MtPnN5bmNvYmpfc3RyaWRlKTsKKwkJaWYgKElT
X0VSUihwb3N0X2RlcHMpKSB7CisJCQlyZXQgPSBQVFJfRVJSKHBvc3RfZGVwcyk7CisJCQlnb3Rv
IG91dF91bmxvY2s7CisJCX0KKwl9CisKIAlyZXQgPSBzdWJtaXRfbG9va3VwX29iamVjdHMoc3Vi
bWl0LCBhcmdzLCBmaWxlKTsKIAlpZiAocmV0KQotCQlnb3RvIG91dF9wcmVfcG07CisJCWdvdG8g
b3V0OwogCiAJcmV0ID0gc3VibWl0X2xvb2t1cF9jbWRzKHN1Ym1pdCwgYXJncywgZmlsZSk7CiAJ
aWYgKHJldCkKLQkJZ290byBvdXRfcHJlX3BtOwotCi0JLyoKLQkgKiBUaGFua3MgdG8gZGV2X3Bt
X29wcCBvcHBfdGFibGVfbG9jayBpbnRlcmFjdGlvbnMgd2l0aCBtbS0+bW1hcF9zZW0KLQkgKiBp
biB0aGUgcmVzdW1lIHBhdGgsIHdlIG5lZWQgdG8gdG8gcnBtIGdldCBiZWZvcmUgd2UgbG9jayBv
YmpzLgotCSAqIFdoaWNoIHVuZm9ydHVuYXRlbHkgbWlnaHQgaW52b2x2ZSBwb3dlcmluZyB1cCB0
aGUgR1BVIHNvb25lciB0aGFuCi0JICogaXMgbmVjZXNzYXJ5LiAgQnV0IGF0IGxlYXN0IGluIHRo
ZSBleHBsaWNpdCBmZW5jaW5nIGNhc2UsIHdlIHdpbGwKLQkgKiBoYXZlIGFscmVhZHkgZG9uZSBh
bGwgdGhlIGZlbmNlIHdhaXRpbmcuCi0JICovCi0JcG1fcnVudGltZV9nZXRfc3luYygmZ3B1LT5w
ZGV2LT5kZXYpOworCQlnb3RvIG91dDsKIAogCS8qIGNvcHlfKl91c2VyIHdoaWxlIGhvbGRpbmcg
YSB3dyB0aWNrZXQgdXBzZXRzIGxvY2tkZXAgKi8KIAl3d19hY3F1aXJlX2luaXQoJnN1Ym1pdC0+
dGlja2V0LCAmcmVzZXJ2YXRpb25fd3dfY2xhc3MpOwpAQCAtODY5LDEyICs4NzAsNyBAQCBpbnQg
bXNtX2lvY3RsX2dlbV9zdWJtaXQoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwK
IAogCXN1Ym1pdC0+bnJfY21kcyA9IGk7CiAKLQlzdWJtaXQtPmZlbmNlID0gbXNtX2ZlbmNlX2Fs
bG9jKHJpbmctPmZjdHgpOwotCWlmIChJU19FUlIoc3VibWl0LT5mZW5jZSkpIHsKLQkJcmV0ID0g
UFRSX0VSUihzdWJtaXQtPmZlbmNlKTsKLQkJc3VibWl0LT5mZW5jZSA9IE5VTEw7Ci0JCWdvdG8g
b3V0OwotCX0KKwlzdWJtaXQtPnVzZXJfZmVuY2UgPSBkbWFfZmVuY2VfZ2V0KCZzdWJtaXQtPmJh
c2Uuc19mZW5jZS0+ZmluaXNoZWQpOwogCiAJLyoKIAkgKiBBbGxvY2F0ZSBhbiBpZCB3aGljaCBj
YW4gYmUgdXNlZCBieSBXQUlUX0ZFTkNFIGlvY3RsIHRvIG1hcCBiYWNrCkBAIC04ODIsNyArODc4
LDcgQEAgaW50IG1zbV9pb2N0bF9nZW1fc3VibWl0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZv
aWQgKmRhdGEsCiAJICovCiAJbXV0ZXhfbG9jaygmcXVldWUtPmxvY2spOwogCXN1Ym1pdC0+ZmVu
Y2VfaWQgPSBpZHJfYWxsb2NfY3ljbGljKCZxdWV1ZS0+ZmVuY2VfaWRyLAotCQkJc3VibWl0LT5m
ZW5jZSwgMCwgSU5UX01BWCwgR0ZQX0tFUk5FTCk7CisJCQlzdWJtaXQtPnVzZXJfZmVuY2UsIDAs
IElOVF9NQVgsIEdGUF9LRVJORUwpOwogCW11dGV4X3VubG9jaygmcXVldWUtPmxvY2spOwogCWlm
IChzdWJtaXQtPmZlbmNlX2lkIDwgMCkgewogCQlyZXQgPSBzdWJtaXQtPmZlbmNlX2lkID0gMDsK
QEAgLTg5MSw3ICs4ODcsNyBAQCBpbnQgbXNtX2lvY3RsX2dlbV9zdWJtaXQoc3RydWN0IGRybV9k
ZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKIAl9CiAKIAlpZiAoYXJncy0+ZmxhZ3MgJiBNU01fU1VC
TUlUX0ZFTkNFX0ZEX09VVCkgewotCQlzdHJ1Y3Qgc3luY19maWxlICpzeW5jX2ZpbGUgPSBzeW5j
X2ZpbGVfY3JlYXRlKHN1Ym1pdC0+ZmVuY2UpOworCQlzdHJ1Y3Qgc3luY19maWxlICpzeW5jX2Zp
bGUgPSBzeW5jX2ZpbGVfY3JlYXRlKHN1Ym1pdC0+dXNlcl9mZW5jZSk7CiAJCWlmICghc3luY19m
aWxlKSB7CiAJCQlyZXQgPSAtRU5PTUVNOwogCQkJZ290byBvdXQ7CkBAIC05MDIsMTggKzg5OCwx
OSBAQCBpbnQgbXNtX2lvY3RsX2dlbV9zdWJtaXQoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9p
ZCAqZGF0YSwKIAogCXN1Ym1pdF9hdHRhY2hfb2JqZWN0X2ZlbmNlcyhzdWJtaXQpOwogCi0JbXNt
X2dwdV9zdWJtaXQoZ3B1LCBzdWJtaXQpOworCS8qIFRoZSBzY2hlZHVsZXIgb3ducyBhIHJlZiBu
b3c6ICovCisJbXNtX2dlbV9zdWJtaXRfZ2V0KHN1Ym1pdCk7CisKKwlkcm1fc2NoZWRfZW50aXR5
X3B1c2hfam9iKCZzdWJtaXQtPmJhc2UsICZxdWV1ZS0+ZW50aXR5KTsKIAogCWFyZ3MtPmZlbmNl
ID0gc3VibWl0LT5mZW5jZV9pZDsKIAogCW1zbV9yZXNldF9zeW5jb2JqcyhzeW5jb2Jqc190b19y
ZXNldCwgYXJncy0+bnJfaW5fc3luY29ianMpOwogCW1zbV9wcm9jZXNzX3Bvc3RfZGVwcyhwb3N0
X2RlcHMsIGFyZ3MtPm5yX291dF9zeW5jb2JqcywKLQkgICAgICAgICAgICAgICAgICAgICAgc3Vi
bWl0LT5mZW5jZSk7CisJICAgICAgICAgICAgICAgICAgICAgIHN1Ym1pdC0+dXNlcl9mZW5jZSk7
CiAKIAogb3V0OgotCXBtX3J1bnRpbWVfcHV0KCZncHUtPnBkZXYtPmRldik7Ci1vdXRfcHJlX3Bt
OgogCXN1Ym1pdF9jbGVhbnVwKHN1Ym1pdCwgISFyZXQpOwogCWlmIChoYXNfd3dfdGlja2V0KQog
CQl3d19hY3F1aXJlX2ZpbmkoJnN1Ym1pdC0+dGlja2V0KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9tc20vbXNtX2dwdS5jIGIvZHJpdmVycy9ncHUvZHJtL21zbS9tc21fZ3B1LmMKaW5k
ZXggNWJmYzRkMjRhOTU2Li44YTNhNTkyZGEzYTQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9tc20vbXNtX2dwdS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9tc20vbXNtX2dwdS5jCkBAIC0x
NzYsOCArMTc2LDggQEAgc3RhdGljIHZvaWQgdXBkYXRlX2ZlbmNlcyhzdHJ1Y3QgbXNtX2dwdSAq
Z3B1LCBzdHJ1Y3QgbXNtX3JpbmdidWZmZXIgKnJpbmcsCiAJCQlicmVhazsKIAogCQltc21fdXBk
YXRlX2ZlbmNlKHN1Ym1pdC0+cmluZy0+ZmN0eCwKLQkJCXN1Ym1pdC0+ZmVuY2UtPnNlcW5vKTsK
LQkJZG1hX2ZlbmNlX3NpZ25hbChzdWJtaXQtPmZlbmNlKTsKKwkJCXN1Ym1pdC0+aHdfZmVuY2Ut
PnNlcW5vKTsKKwkJZG1hX2ZlbmNlX3NpZ25hbChzdWJtaXQtPmh3X2ZlbmNlKTsKIAl9CiAJc3Bp
bl91bmxvY2tfaXJxcmVzdG9yZSgmcmluZy0+c3VibWl0X2xvY2ssIGZsYWdzKTsKIH0KQEAgLTM4
MCwxMCArMzgwLDYgQEAgc3RhdGljIHZvaWQgcmVjb3Zlcl93b3JrZXIoc3RydWN0IGt0aHJlYWRf
d29yayAqd29yaykKIAkJCXB1dF90YXNrX3N0cnVjdCh0YXNrKTsKIAkJfQogCi0JCS8qIG1zbV9y
ZF9kdW1wX3N1Ym1pdCgpIG5lZWRzIGJvIGxvY2tlZCB0byBkdW1wOiAqLwotCQlmb3IgKGkgPSAw
OyBpIDwgc3VibWl0LT5ucl9ib3M7IGkrKykKLQkJCW1zbV9nZW1fbG9jaygmc3VibWl0LT5ib3Nb
aV0ub2JqLT5iYXNlKTsKLQogCQlpZiAoY29tbSAmJiBjbWQpIHsKIAkJCURSTV9ERVZfRVJST1Io
ZGV2LT5kZXYsICIlczogb2ZmZW5kaW5nIHRhc2s6ICVzICglcylcbiIsCiAJCQkJZ3B1LT5uYW1l
LCBjb21tLCBjbWQpOwpAQCAtMzkzLDkgKzM4OSw2IEBAIHN0YXRpYyB2b2lkIHJlY292ZXJfd29y
a2VyKHN0cnVjdCBrdGhyZWFkX3dvcmsgKndvcmspCiAJCX0gZWxzZSB7CiAJCQltc21fcmRfZHVt
cF9zdWJtaXQocHJpdi0+aGFuZ3JkLCBzdWJtaXQsIE5VTEwpOwogCQl9Ci0KLQkJZm9yIChpID0g
MDsgaSA8IHN1Ym1pdC0+bnJfYm9zOyBpKyspCi0JCQltc21fZ2VtX3VubG9jaygmc3VibWl0LT5i
b3NbaV0ub2JqLT5iYXNlKTsKIAl9CiAKIAkvKiBSZWNvcmQgdGhlIGNyYXNoIHN0YXRlICovCkBA
IC03MDQsNyArNjk3LDcgQEAgc3RhdGljIHZvaWQgcmV0aXJlX3N1Ym1pdHMoc3RydWN0IG1zbV9n
cHUgKmdwdSkKIAkJCSAqIGJlZW4gc2lnbmFsbGVkLCB0aGVuIGxhdGVyIHN1Ym1pdHMgYXJlIG5v
dCBzaWduYWxsZWQKIAkJCSAqIGVpdGhlciwgc28gd2UgYXJlIGFsc28gZG9uZS4KIAkJCSAqLwot
CQkJaWYgKHN1Ym1pdCAmJiBkbWFfZmVuY2VfaXNfc2lnbmFsZWQoc3VibWl0LT5mZW5jZSkpIHsK
KwkJCWlmIChzdWJtaXQgJiYgZG1hX2ZlbmNlX2lzX3NpZ25hbGVkKHN1Ym1pdC0+aHdfZmVuY2Up
KSB7CiAJCQkJcmV0aXJlX3N1Ym1pdChncHUsIHJpbmcsIHN1Ym1pdCk7CiAJCQl9IGVsc2Ugewog
CQkJCWJyZWFrOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL21zbS9tc21fZ3B1LmggYi9k
cml2ZXJzL2dwdS9kcm0vbXNtL21zbV9ncHUuaAppbmRleCA1Nzk2MjcyNTI1NDAuLmI5MTJjYWNh
ZWNjMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL21zbS9tc21fZ3B1LmgKKysrIGIvZHJp
dmVycy9ncHUvZHJtL21zbS9tc21fZ3B1LmgKQEAgLTI2Nyw2ICsyNjcsNyBAQCBzdHJ1Y3QgbXNt
X2dwdV9wZXJmY250ciB7CiAgKiAgICAgICAgICAgICBzZXFubywgcHJvdGVjdGVkIGJ5IHN1Ym1p
dHF1ZXVlIGxvY2sKICAqIEBsb2NrOiAgICAgIHN1Ym1pdHF1ZXVlIGxvY2sKICAqIEByZWY6ICAg
ICAgIHJlZmVyZW5jZSBjb3VudAorICogQGVudGl0eTogdGhlIHN1Ym1pdCBqb2ItcXVldWUKICAq
Lwogc3RydWN0IG1zbV9ncHVfc3VibWl0cXVldWUgewogCWludCBpZDsKQEAgLTI3OCw2ICsyNzks
NyBAQCBzdHJ1Y3QgbXNtX2dwdV9zdWJtaXRxdWV1ZSB7CiAJc3RydWN0IGlkciBmZW5jZV9pZHI7
CiAJc3RydWN0IG11dGV4IGxvY2s7CiAJc3RydWN0IGtyZWYgcmVmOworCXN0cnVjdCBkcm1fc2No
ZWRfZW50aXR5IGVudGl0eTsKIH07CiAKIHN0cnVjdCBtc21fZ3B1X3N0YXRlX2JvIHsKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9tc20vbXNtX3JkLmMgYi9kcml2ZXJzL2dwdS9kcm0vbXNt
L21zbV9yZC5jCmluZGV4IDY1OWU1Y2M0YjQwYS4uYjU1Mzk4YTM0ZmE0IDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vbXNtL21zbV9yZC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9tc20vbXNt
X3JkLmMKQEAgLTMyNSwxNSArMzI1LDE5IEBAIHN0YXRpYyB2b2lkIHNuYXBzaG90X2J1ZihzdHJ1
Y3QgbXNtX3JkX3N0YXRlICpyZCwKIAlpZiAoIShzdWJtaXQtPmJvc1tpZHhdLmZsYWdzICYgTVNN
X1NVQk1JVF9CT19SRUFEKSkKIAkJcmV0dXJuOwogCisJbXNtX2dlbV9sb2NrKCZvYmotPmJhc2Up
OwogCWJ1ZiA9IG1zbV9nZW1fZ2V0X3ZhZGRyX2FjdGl2ZSgmb2JqLT5iYXNlKTsKIAlpZiAoSVNf
RVJSKGJ1ZikpCi0JCXJldHVybjsKKwkJZ290byBvdXRfdW5sb2NrOwogCiAJYnVmICs9IG9mZnNl
dDsKIAogCXJkX3dyaXRlX3NlY3Rpb24ocmQsIFJEX0JVRkZFUl9DT05URU5UUywgYnVmLCBzaXpl
KTsKIAogCW1zbV9nZW1fcHV0X3ZhZGRyX2xvY2tlZCgmb2JqLT5iYXNlKTsKKworb3V0X3VubG9j
azoKKwltc21fZ2VtX3VubG9jaygmb2JqLT5iYXNlKTsKIH0KIAogLyogY2FsbGVkIHVuZGVyIHN0
cnVjdF9tdXRleCAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL21zbS9tc21fcmluZ2J1
ZmZlci5jIGIvZHJpdmVycy9ncHUvZHJtL21zbS9tc21fcmluZ2J1ZmZlci5jCmluZGV4IDQzN2Nj
YTU3ZDAwNS4uNTY0M2Y1NzlhYzQ2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vbXNtL21z
bV9yaW5nYnVmZmVyLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL21zbS9tc21fcmluZ2J1ZmZlci5j
CkBAIC03LDEwICs3LDY0IEBACiAjaW5jbHVkZSAibXNtX3JpbmdidWZmZXIuaCIKICNpbmNsdWRl
ICJtc21fZ3B1LmgiCiAKKy8qKgorICogVGhlIG1heCAjIG9mIGpvYnMgdG8gd3JpdGUgaW50byB0
aGUgaHcgcmluZ2J1ZmZlci4KKyAqLworc3RhdGljIHVpbnQgbnVtX2h3X3N1Ym1pc3Npb25zID0g
ODsKK01PRFVMRV9QQVJNX0RFU0MobnVtX2h3X3N1Ym1pc3Npb25zLCAiVGhlIG1heCBudW1iZXIg
b2YgSFcgc3VibWlzc2lvbnMgKGRlZmF1bHQgOCkiKTsKK21vZHVsZV9wYXJhbShudW1faHdfc3Vi
bWlzc2lvbnMsIHVpbnQsIDA2MDApOworCitzdGF0aWMgc3RydWN0IGRtYV9mZW5jZSAqbXNtX2pv
Yl9kZXBlbmRlbmN5KHN0cnVjdCBkcm1fc2NoZWRfam9iICpqb2IsCisJCXN0cnVjdCBkcm1fc2No
ZWRfZW50aXR5ICpzX2VudGl0eSkKK3sKKwlzdHJ1Y3QgbXNtX2dlbV9zdWJtaXQgKnN1Ym1pdCA9
IHRvX21zbV9zdWJtaXQoam9iKTsKKworCWlmICgheGFfZW1wdHkoJnN1Ym1pdC0+ZGVwcykpCisJ
CXJldHVybiB4YV9lcmFzZSgmc3VibWl0LT5kZXBzLCBzdWJtaXQtPmxhc3RfZGVwKyspOworCisJ
cmV0dXJuIE5VTEw7Cit9CisKK3N0YXRpYyBzdHJ1Y3QgZG1hX2ZlbmNlICptc21fam9iX3J1bihz
dHJ1Y3QgZHJtX3NjaGVkX2pvYiAqam9iKQoreworCXN0cnVjdCBtc21fZ2VtX3N1Ym1pdCAqc3Vi
bWl0ID0gdG9fbXNtX3N1Ym1pdChqb2IpOworCXN0cnVjdCBtc21fZ3B1ICpncHUgPSBzdWJtaXQt
PmdwdTsKKworCXN1Ym1pdC0+aHdfZmVuY2UgPSBtc21fZmVuY2VfYWxsb2Moc3VibWl0LT5yaW5n
LT5mY3R4KTsKKworCXBtX3J1bnRpbWVfZ2V0X3N5bmMoJmdwdS0+cGRldi0+ZGV2KTsKKworCS8q
IFRPRE8gbW92ZSBzdWJtaXQgcGF0aCBvdmVyIHRvIHVzaW5nIGEgcGVyLXJpbmcgbG9jay4uICov
CisJbXV0ZXhfbG9jaygmZ3B1LT5kZXYtPnN0cnVjdF9tdXRleCk7CisKKwltc21fZ3B1X3N1Ym1p
dChncHUsIHN1Ym1pdCk7CisKKwltdXRleF91bmxvY2soJmdwdS0+ZGV2LT5zdHJ1Y3RfbXV0ZXgp
OworCisJcG1fcnVudGltZV9wdXQoJmdwdS0+cGRldi0+ZGV2KTsKKworCXJldHVybiBkbWFfZmVu
Y2VfZ2V0KHN1Ym1pdC0+aHdfZmVuY2UpOworfQorCitzdGF0aWMgdm9pZCBtc21fam9iX2ZyZWUo
c3RydWN0IGRybV9zY2hlZF9qb2IgKmpvYikKK3sKKwlzdHJ1Y3QgbXNtX2dlbV9zdWJtaXQgKnN1
Ym1pdCA9IHRvX21zbV9zdWJtaXQoam9iKTsKKworCWRybV9zY2hlZF9qb2JfY2xlYW51cChqb2Ip
OworCW1zbV9nZW1fc3VibWl0X3B1dChzdWJtaXQpOworfQorCitjb25zdCBzdHJ1Y3QgZHJtX3Nj
aGVkX2JhY2tlbmRfb3BzIG1zbV9zY2hlZF9vcHMgPSB7CisJLmRlcGVuZGVuY3kgPSBtc21fam9i
X2RlcGVuZGVuY3ksCisJLnJ1bl9qb2IgPSBtc21fam9iX3J1biwKKwkuZnJlZV9qb2IgPSBtc21f
am9iX2ZyZWUKK307CisKIHN0cnVjdCBtc21fcmluZ2J1ZmZlciAqbXNtX3JpbmdidWZmZXJfbmV3
KHN0cnVjdCBtc21fZ3B1ICpncHUsIGludCBpZCwKIAkJdm9pZCAqbWVtcHRycywgdWludDY0X3Qg
bWVtcHRyc19pb3ZhKQogewogCXN0cnVjdCBtc21fcmluZ2J1ZmZlciAqcmluZzsKKwlsb25nIHNj
aGVkX3RpbWVvdXQ7CiAJY2hhciBuYW1lWzMyXTsKIAlpbnQgcmV0OwogCkBAIC00NSw2ICs5OSwx
NiBAQCBzdHJ1Y3QgbXNtX3JpbmdidWZmZXIgKm1zbV9yaW5nYnVmZmVyX25ldyhzdHJ1Y3QgbXNt
X2dwdSAqZ3B1LCBpbnQgaWQsCiAJcmluZy0+bWVtcHRycyA9IG1lbXB0cnM7CiAJcmluZy0+bWVt
cHRyc19pb3ZhID0gbWVtcHRyc19pb3ZhOwogCisJIC8qIGN1cnJlbnRseSBtYW5hZ2luZyBoYW5n
Y2hlY2sgb3Vyc2VsdmVzOiAqLworCXNjaGVkX3RpbWVvdXQgPSBNQVhfU0NIRURVTEVfVElNRU9V
VDsKKworCXJldCA9IGRybV9zY2hlZF9pbml0KCZyaW5nLT5zY2hlZCwgJm1zbV9zY2hlZF9vcHMs
CisJCQludW1faHdfc3VibWlzc2lvbnMsIDAsIHNjaGVkX3RpbWVvdXQsCisJCQlOVUxMLCB0b19t
c21fYm8ocmluZy0+Ym8pLT5uYW1lKTsKKwlpZiAocmV0KSB7CisJCWdvdG8gZmFpbDsKKwl9CisK
IAlJTklUX0xJU1RfSEVBRCgmcmluZy0+c3VibWl0cyk7CiAJc3Bpbl9sb2NrX2luaXQoJnJpbmct
PnN1Ym1pdF9sb2NrKTsKIAlzcGluX2xvY2tfaW5pdCgmcmluZy0+cHJlZW1wdF9sb2NrKTsKQEAg
LTY1LDYgKzEyOSw4IEBAIHZvaWQgbXNtX3JpbmdidWZmZXJfZGVzdHJveShzdHJ1Y3QgbXNtX3Jp
bmdidWZmZXIgKnJpbmcpCiAJaWYgKElTX0VSUl9PUl9OVUxMKHJpbmcpKQogCQlyZXR1cm47CiAK
Kwlkcm1fc2NoZWRfZmluaSgmcmluZy0+c2NoZWQpOworCiAJbXNtX2ZlbmNlX2NvbnRleHRfZnJl
ZShyaW5nLT5mY3R4KTsKIAogCW1zbV9nZW1fa2VybmVsX3B1dChyaW5nLT5ibywgcmluZy0+Z3B1
LT5hc3BhY2UpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL21zbS9tc21fcmluZ2J1ZmZl
ci5oIGIvZHJpdmVycy9ncHUvZHJtL21zbS9tc21fcmluZ2J1ZmZlci5oCmluZGV4IGZlNTVkNGEx
YWExNi4uZDhjNjNkZjRlOWNhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vbXNtL21zbV9y
aW5nYnVmZmVyLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL21zbS9tc21fcmluZ2J1ZmZlci5oCkBA
IC03LDYgKzcsNyBAQAogI2lmbmRlZiBfX01TTV9SSU5HQlVGRkVSX0hfXwogI2RlZmluZSBfX01T
TV9SSU5HQlVGRkVSX0hfXwogCisjaW5jbHVkZSAiZHJtL2dwdV9zY2hlZHVsZXIuaCIKICNpbmNs
dWRlICJtc21fZHJ2LmgiCiAKICNkZWZpbmUgcmJtZW1wdHIocmluZywgbWVtYmVyKSAgXApAQCAt
NDAsOCArNDEsMTkgQEAgc3RydWN0IG1zbV9yaW5nYnVmZmVyIHsKIAlzdHJ1Y3QgZHJtX2dlbV9v
YmplY3QgKmJvOwogCXVpbnQzMl90ICpzdGFydCwgKmVuZCwgKmN1ciwgKm5leHQ7CiAKKwkvKgor
CSAqIFRoZSBqb2Igc2NoZWR1bGVyIGZvciB0aGlzIHJpbmcuCisJICovCisJc3RydWN0IGRybV9n
cHVfc2NoZWR1bGVyIHNjaGVkOworCiAJLyoKIAkgKiBMaXN0IG9mIGluLWZsaWdodCBzdWJtaXRz
IG9uIHRoaXMgcmluZy4gIFByb3RlY3RlZCBieSBzdWJtaXRfbG9jay4KKwkgKgorCSAqIEN1cnJl
bnRseSBqdXN0IHN1Ym1pdHMgdGhhdCBhcmUgYWxyZWFkeSB3cml0dGVuIGludG8gdGhlIHJpbmcs
IG5vdAorCSAqIHN1Ym1pdHMgdGhhdCBhcmUgc3RpbGwgaW4gZHJtX2dwdV9zY2hlZHVsZXIncyBx
dWV1ZXMuICBBdCBhIGxhdGVyCisJICogc3RlcCB3ZSBjb3VsZCBwcm9iYWJseSBtb3ZlIHRvIGxl
dHRpbmcgZHJtX2dwdV9zY2hlZHVsZXIgbWFuYWdlCisJICogaGFuZ2NoZWNrIGRldGVjdGlvbiBh
bmQga2VlcCB0cmFjayBvZiBzdWJtaXQgam9icyB0aGF0IGFyZSBpbi0KKwkgKiBmbGlnaHQuCiAJ
ICovCiAJc3RydWN0IGxpc3RfaGVhZCBzdWJtaXRzOwogCXNwaW5sb2NrX3Qgc3VibWl0X2xvY2s7
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vbXNtL21zbV9zdWJtaXRxdWV1ZS5jIGIvZHJp
dmVycy9ncHUvZHJtL21zbS9tc21fc3VibWl0cXVldWUuYwppbmRleCA2NmY4ZDBmYjM4YjAuLjY4
MmJhMmE3YzBlYyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL21zbS9tc21fc3VibWl0cXVl
dWUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vbXNtL21zbV9zdWJtaXRxdWV1ZS5jCkBAIC0xNCw2
ICsxNCw4IEBAIHZvaWQgbXNtX3N1Ym1pdHF1ZXVlX2Rlc3Ryb3koc3RydWN0IGtyZWYgKmtyZWYp
CiAKIAlpZHJfZGVzdHJveSgmcXVldWUtPmZlbmNlX2lkcik7CiAKKwlkcm1fc2NoZWRfZW50aXR5
X2Rlc3Ryb3koJnF1ZXVlLT5lbnRpdHkpOworCiAJbXNtX2ZpbGVfcHJpdmF0ZV9wdXQocXVldWUt
PmN0eCk7CiAKIAlrZnJlZShxdWV1ZSk7CkBAIC02NCw2ICs2Niw5IEBAIGludCBtc21fc3VibWl0
cXVldWVfY3JlYXRlKHN0cnVjdCBkcm1fZGV2aWNlICpkcm0sIHN0cnVjdCBtc21fZmlsZV9wcml2
YXRlICpjdHgsCiB7CiAJc3RydWN0IG1zbV9kcm1fcHJpdmF0ZSAqcHJpdiA9IGRybS0+ZGV2X3By
aXZhdGU7CiAJc3RydWN0IG1zbV9ncHVfc3VibWl0cXVldWUgKnF1ZXVlOworCXN0cnVjdCBtc21f
cmluZ2J1ZmZlciAqcmluZzsKKwlzdHJ1Y3QgZHJtX2dwdV9zY2hlZHVsZXIgKnNjaGVkOworCWlu
dCByZXQ7CiAKIAlpZiAoIWN0eCkKIAkJcmV0dXJuIC1FTk9ERVY7CkBAIC04Myw2ICs4OCwyNyBA
QCBpbnQgbXNtX3N1Ym1pdHF1ZXVlX2NyZWF0ZShzdHJ1Y3QgZHJtX2RldmljZSAqZHJtLCBzdHJ1
Y3QgbXNtX2ZpbGVfcHJpdmF0ZSAqY3R4LAogCXF1ZXVlLT5mbGFncyA9IGZsYWdzOwogCXF1ZXVl
LT5wcmlvID0gcHJpbzsKIAorCXJpbmcgPSBwcml2LT5ncHUtPnJiW3ByaW9dOworCXNjaGVkID0g
JnJpbmctPnNjaGVkOworCisJLyoKKwkgKiBUT0RPIHdlIGNhbiBhbGxvdyBtb3JlIHByaW9yaXRp
ZXMgdGhhbiB3ZSBoYXZlIHJpbmdidWZmZXJzIGJ5CisJICogbWFwcGluZzoKKwkgKgorCSAqICAg
IHJpbmcgPSBwcmlvIC8gMzsKKwkgKiAgICBlbnRfcHJpbyA9IERSTV9TQ0hFRF9QUklPUklUWV9N
SU4gKyAocHJpbyAlIDMpOworCSAqCisJICogUHJvYmFibHkgYXZvaWQgdXNpbmcgRFJNX1NDSEVE
X1BSSU9SSVRZX0tFUk5FTCBhcyB0aGF0IGlzCisJICogdHJlYXRlZCBzcGVjaWFsbHkgaW4gcGxh
Y2VzLgorCSAqLworCXJldCA9IGRybV9zY2hlZF9lbnRpdHlfaW5pdCgmcXVldWUtPmVudGl0eSwK
KwkJCURSTV9TQ0hFRF9QUklPUklUWV9OT1JNQUwsCisJCQkmc2NoZWQsIDEsIE5VTEwpOworCWlm
IChyZXQpIHsKKwkJa2ZyZWUocXVldWUpOworCQlyZXR1cm4gcmV0OworCX0KKwogCXdyaXRlX2xv
Y2soJmN0eC0+cXVldWVsb2NrKTsKIAogCXF1ZXVlLT5jdHggPSBtc21fZmlsZV9wcml2YXRlX2dl
dChjdHgpOwotLSAKMi4zMS4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fXwpMaW5hcm8tbW0tc2lnIG1haWxpbmcgbGlzdApMaW5hcm8tbW0tc2lnQGxpc3Rz
LmxpbmFyby5vcmcKaHR0cHM6Ly9saXN0cy5saW5hcm8ub3JnL21haWxtYW4vbGlzdGluZm8vbGlu
YXJvLW1tLXNpZwo=
