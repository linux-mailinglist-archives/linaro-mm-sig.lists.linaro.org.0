Return-Path: <linaro-mm-sig-bounces@lists.linaro.org>
X-Original-To: lists+linaro-mm-sig@lfdr.de
Delivered-To: lists+linaro-mm-sig@lfdr.de
Received: from lists.linaro.org (lists.linaro.org [107.22.173.205])
	by mail.lfdr.de (Postfix) with ESMTPS id 0C5E93E1301
	for <lists+linaro-mm-sig@lfdr.de>; Thu,  5 Aug 2021 12:47:30 +0200 (CEST)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 11DE0634C4
	for <lists+linaro-mm-sig@lfdr.de>; Thu,  5 Aug 2021 10:47:29 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
	id F2AFC61F3E; Thu,  5 Aug 2021 10:47:23 +0000 (UTC)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id D400460639;
	Thu,  5 Aug 2021 10:47:19 +0000 (UTC)
X-Original-To: linaro-mm-sig@lists.linaro.org
Delivered-To: linaro-mm-sig@lists.linaro.org
Received: from lists.linaro.org (localhost [127.0.0.1])
 by lists.linaro.org (Postfix) with ESMTP id 919FB60724
 for <linaro-mm-sig@lists.linaro.org>; Thu,  5 Aug 2021 10:47:17 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
 id 87207619D4; Thu,  5 Aug 2021 10:47:17 +0000 (UTC)
Received: from mail-ej1-f42.google.com (mail-ej1-f42.google.com
 [209.85.218.42])
 by lists.linaro.org (Postfix) with ESMTPS id 75C8D60724
 for <linaro-mm-sig@lists.linaro.org>; Thu,  5 Aug 2021 10:47:15 +0000 (UTC)
Received: by mail-ej1-f42.google.com with SMTP id yk17so8766227ejb.11
 for <linaro-mm-sig@lists.linaro.org>; Thu, 05 Aug 2021 03:47:15 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=ffwll.ch; s=google;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=hEDa94/WcqC93JTwI4vmAWB7y82SXtnY9IZP9E0Rtio=;
 b=d10ohb+Uf4TktRlM6eWFNfkmHgAt9Rl9O+6fTeHiELsQyL1zAiY+BRueWXxwaATBqw
 lXG2q0nkcahyqpcgM3kIilG0t0APsyDqQwYl1AB32A3RWqfsedxiON46H77qdHRENwRz
 pHiFJZATI8uZLdO7z9FSTcWAQyubM5UAgA/Cc=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=hEDa94/WcqC93JTwI4vmAWB7y82SXtnY9IZP9E0Rtio=;
 b=sirDBZT0RFdr3CCvQD5Ws78c/EqgsXUm0rAHcCmnY6Moo+8eBsMoXpT9gSPYjNu9EL
 FFnQOMb30nyA6awLnlMDIT7zXwMb8QkozSFN1s8OrsEw2KkqIeyBS3MtbF8kGe9nWZLF
 6yme7zKmcJWi27HnY+ML6bL8IHyOo9RXWyNZ6Qn4TOrcAP2GD+6cvnUM4QjWZD6ggbZO
 hkl9KLTK8q4XCWEIgTzAK0nJGIDjFVd0HM0ZSWipZrY9/e2SG0r7yDk6tWUH6fXiI1ZD
 lczFF5DqQAi8K3/CxXdsrcylWrmzgcKxCeZ5PX67MqG217A/Wu0Kquc9bAY9sywgC4Wo
 1qpw==
X-Gm-Message-State: AOAM531z2r6s8afsXrYoUVb1CD03NUNw8/ZXi9Pm87PsQrjmwwK/UIh5
 xY+0k4XdH0qfK5896ciOvML+Ag==
X-Google-Smtp-Source: ABdhPJyUA0rcvBi12OfV5BKk7AMSHcqL5POFJaEVG+mA6291u3qZKadnwaQSLdYhAVYgKMXt7lfuFg==
X-Received: by 2002:a17:907:990d:: with SMTP id
 ka13mr4234996ejc.392.1628160434532; 
 Thu, 05 Aug 2021 03:47:14 -0700 (PDT)
Received: from phenom.ffwll.local ([2a02:168:57f4:0:efd0:b9e5:5ae6:c2fa])
 by smtp.gmail.com with ESMTPSA id p5sm1578809ejl.73.2021.08.05.03.47.13
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Thu, 05 Aug 2021 03:47:14 -0700 (PDT)
From: Daniel Vetter <daniel.vetter@ffwll.ch>
To: DRI Development <dri-devel@lists.freedesktop.org>
Date: Thu,  5 Aug 2021 12:46:49 +0200
Message-Id: <20210805104705.862416-5-daniel.vetter@ffwll.ch>
X-Mailer: git-send-email 2.32.0
In-Reply-To: <20210805104705.862416-1-daniel.vetter@ffwll.ch>
References: <20210805104705.862416-1-daniel.vetter@ffwll.ch>
MIME-Version: 1.0
X-Virus-Scanned: ClamAV using ClamSMTP
Subject: [Linaro-mm-sig] [PATCH v5 04/20] drm/sched: Add dependency tracking
X-BeenThere: linaro-mm-sig@lists.linaro.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: "Unified memory management interest group."
 <linaro-mm-sig.lists.linaro.org>
List-Unsubscribe: <https://lists.linaro.org/mailman/options/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=unsubscribe>
List-Archive: <http://lists.linaro.org/pipermail/linaro-mm-sig/>
List-Post: <mailto:linaro-mm-sig@lists.linaro.org>
List-Help: <mailto:linaro-mm-sig-request@lists.linaro.org?subject=help>
List-Subscribe: <https://lists.linaro.org/mailman/listinfo/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=subscribe>
Cc: Andrey Grodzovsky <andrey.grodzovsky@amd.com>,
 =?UTF-8?q?Christian=20K=C3=B6nig?= <christian.koenig@amd.com>,
 David Airlie <airlied@linux.ie>,
 Intel Graphics Development <intel-gfx@lists.freedesktop.org>,
 Steven Price <steven.price@arm.com>, Melissa Wen <mwen@igalia.com>,
 linaro-mm-sig@lists.linaro.org,
 Boris Brezillon <boris.brezillon@collabora.com>,
 Daniel Vetter <daniel@ffwll.ch>, Alex Deucher <alexander.deucher@amd.com>,
 Daniel Vetter <daniel.vetter@intel.com>, linux-media@vger.kernel.org,
 Lee Jones <lee.jones@linaro.org>, Luben Tuikov <luben.tuikov@amd.com>,
 Nirmoy Das <nirmoy.aiemd@gmail.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linaro-mm-sig-bounces@lists.linaro.org
Sender: "Linaro-mm-sig" <linaro-mm-sig-bounces@lists.linaro.org>
X-Virus-Scanned: ClamAV using ClamSMTP

SW5zdGVhZCBvZiBqdXN0IGEgY2FsbGJhY2sgd2UgY2FuIGp1c3QgZ2x1ZSBpbiB0aGUgZ2VtIGhl
bHBlcnMgdGhhdApwYW5mcm9zdCwgdjNkIGFuZCBsaW1hIGN1cnJlbnRseSB1c2UuIFRoZXJlJ3Mg
cmVhbGx5IG5vdCB0aGF0IG1hbnkKd2F5cyB0byBza2luIHRoaXMgY2F0LgoKdjIvMzogUmViYXNl
ZC4KCnY0OiBSZXBhaW50IHRoaXMgc2hlZC4gVGhlIGZ1bmN0aW9ucyBhcmUgbm93IGNhbGxlZCBf
YWRkX2RlcGVuZGVuY3koKQphbmQgX2FkZF9pbXBsaWNpdF9kZXBlbmRlbmN5KCkKClJldmlld2Vk
LWJ5OiBCb3JpcyBCcmV6aWxsb24gPGJvcmlzLmJyZXppbGxvbkBjb2xsYWJvcmEuY29tPiAodjMp
ClJldmlld2VkLWJ5OiBTdGV2ZW4gUHJpY2UgPHN0ZXZlbi5wcmljZUBhcm0uY29tPiAodjEpCkFj
a2VkLWJ5OiBNZWxpc3NhIFdlbiA8bXdlbkBpZ2FsaWEuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYW5p
ZWwgVmV0dGVyIDxkYW5pZWwudmV0dGVyQGludGVsLmNvbT4KQ2M6IERhdmlkIEFpcmxpZSA8YWly
bGllZEBsaW51eC5pZT4KQ2M6IERhbmllbCBWZXR0ZXIgPGRhbmllbEBmZndsbC5jaD4KQ2M6IFN1
bWl0IFNlbXdhbCA8c3VtaXQuc2Vtd2FsQGxpbmFyby5vcmc+CkNjOiAiQ2hyaXN0aWFuIEvDtm5p
ZyIgPGNocmlzdGlhbi5rb2VuaWdAYW1kLmNvbT4KQ2M6IEFuZHJleSBHcm9kem92c2t5IDxhbmRy
ZXkuZ3JvZHpvdnNreUBhbWQuY29tPgpDYzogTGVlIEpvbmVzIDxsZWUuam9uZXNAbGluYXJvLm9y
Zz4KQ2M6IE5pcm1veSBEYXMgPG5pcm1veS5haWVtZEBnbWFpbC5jb20+CkNjOiBCb3JpcyBCcmV6
aWxsb24gPGJvcmlzLmJyZXppbGxvbkBjb2xsYWJvcmEuY29tPgpDYzogTHViZW4gVHVpa292IDxs
dWJlbi50dWlrb3ZAYW1kLmNvbT4KQ2M6IEFsZXggRGV1Y2hlciA8YWxleGFuZGVyLmRldWNoZXJA
YW1kLmNvbT4KQ2M6IGxpbnV4LW1lZGlhQHZnZXIua2VybmVsLm9yZwpDYzogbGluYXJvLW1tLXNp
Z0BsaXN0cy5saW5hcm8ub3JnCi0tLQogZHJpdmVycy9ncHUvZHJtL3NjaGVkdWxlci9zY2hlZF9l
bnRpdHkuYyB8ICAxOCArKystCiBkcml2ZXJzL2dwdS9kcm0vc2NoZWR1bGVyL3NjaGVkX21haW4u
YyAgIHwgMTA0ICsrKysrKysrKysrKysrKysrKysrKysrCiBpbmNsdWRlL2RybS9ncHVfc2NoZWR1
bGVyLmggICAgICAgICAgICAgIHwgIDMzICsrKysrKy0KIDMgZmlsZXMgY2hhbmdlZCwgMTQ5IGlu
c2VydGlvbnMoKyksIDYgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L3NjaGVkdWxlci9zY2hlZF9lbnRpdHkuYyBiL2RyaXZlcnMvZ3B1L2RybS9zY2hlZHVsZXIvc2No
ZWRfZW50aXR5LmMKaW5kZXggODllM2Y2ZWFmNTE5Li4zODFmYmY0NjJlYTcgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9zY2hlZHVsZXIvc2NoZWRfZW50aXR5LmMKKysrIGIvZHJpdmVycy9n
cHUvZHJtL3NjaGVkdWxlci9zY2hlZF9lbnRpdHkuYwpAQCAtMjExLDYgKzIxMSwxOSBAQCBzdGF0
aWMgdm9pZCBkcm1fc2NoZWRfZW50aXR5X2tpbGxfam9ic19jYihzdHJ1Y3QgZG1hX2ZlbmNlICpm
LAogCWpvYi0+c2NoZWQtPm9wcy0+ZnJlZV9qb2Ioam9iKTsKIH0KIAorc3RhdGljIHN0cnVjdCBk
bWFfZmVuY2UgKgorZHJtX3NjaGVkX2pvYl9kZXBlbmRlbmN5KHN0cnVjdCBkcm1fc2NoZWRfam9i
ICpqb2IsCisJCQkgc3RydWN0IGRybV9zY2hlZF9lbnRpdHkgKmVudGl0eSkKK3sKKwlpZiAoIXhh
X2VtcHR5KCZqb2ItPmRlcGVuZGVuY2llcykpCisJCXJldHVybiB4YV9lcmFzZSgmam9iLT5kZXBl
bmRlbmNpZXMsIGpvYi0+bGFzdF9kZXBlbmRlbmN5KyspOworCisJaWYgKGpvYi0+c2NoZWQtPm9w
cy0+ZGVwZW5kZW5jeSkKKwkJcmV0dXJuIGpvYi0+c2NoZWQtPm9wcy0+ZGVwZW5kZW5jeShqb2Is
IGVudGl0eSk7CisKKwlyZXR1cm4gTlVMTDsKK30KKwogLyoqCiAgKiBkcm1fc2NoZWRfZW50aXR5
X2tpbGxfam9icyAtIE1ha2Ugc3VyZSBhbGwgcmVtYWluaW5nIGpvYnMgYXJlIGtpbGxlZAogICoK
QEAgLTIyOSw3ICsyNDIsNyBAQCBzdGF0aWMgdm9pZCBkcm1fc2NoZWRfZW50aXR5X2tpbGxfam9i
cyhzdHJ1Y3QgZHJtX3NjaGVkX2VudGl0eSAqZW50aXR5KQogCQlzdHJ1Y3QgZHJtX3NjaGVkX2Zl
bmNlICpzX2ZlbmNlID0gam9iLT5zX2ZlbmNlOwogCiAJCS8qIFdhaXQgZm9yIGFsbCBkZXBlbmRl
bmNpZXMgdG8gYXZvaWQgZGF0YSBjb3JydXB0aW9ucyAqLwotCQl3aGlsZSAoKGYgPSBqb2ItPnNj
aGVkLT5vcHMtPmRlcGVuZGVuY3koam9iLCBlbnRpdHkpKSkKKwkJd2hpbGUgKChmID0gZHJtX3Nj
aGVkX2pvYl9kZXBlbmRlbmN5KGpvYiwgZW50aXR5KSkpCiAJCQlkbWFfZmVuY2Vfd2FpdChmLCBm
YWxzZSk7CiAKIAkJZHJtX3NjaGVkX2ZlbmNlX3NjaGVkdWxlZChzX2ZlbmNlKTsKQEAgLTQxOSw3
ICs0MzIsNiBAQCBzdGF0aWMgYm9vbCBkcm1fc2NoZWRfZW50aXR5X2FkZF9kZXBlbmRlbmN5X2Ni
KHN0cnVjdCBkcm1fc2NoZWRfZW50aXR5ICplbnRpdHkpCiAgKi8KIHN0cnVjdCBkcm1fc2NoZWRf
am9iICpkcm1fc2NoZWRfZW50aXR5X3BvcF9qb2Ioc3RydWN0IGRybV9zY2hlZF9lbnRpdHkgKmVu
dGl0eSkKIHsKLQlzdHJ1Y3QgZHJtX2dwdV9zY2hlZHVsZXIgKnNjaGVkID0gZW50aXR5LT5ycS0+
c2NoZWQ7CiAJc3RydWN0IGRybV9zY2hlZF9qb2IgKnNjaGVkX2pvYjsKIAogCXNjaGVkX2pvYiA9
IHRvX2RybV9zY2hlZF9qb2Ioc3BzY19xdWV1ZV9wZWVrKCZlbnRpdHktPmpvYl9xdWV1ZSkpOwpA
QCAtNDI3LDcgKzQzOSw3IEBAIHN0cnVjdCBkcm1fc2NoZWRfam9iICpkcm1fc2NoZWRfZW50aXR5
X3BvcF9qb2Ioc3RydWN0IGRybV9zY2hlZF9lbnRpdHkgKmVudGl0eSkKIAkJcmV0dXJuIE5VTEw7
CiAKIAl3aGlsZSAoKGVudGl0eS0+ZGVwZW5kZW5jeSA9Ci0JCQlzY2hlZC0+b3BzLT5kZXBlbmRl
bmN5KHNjaGVkX2pvYiwgZW50aXR5KSkpIHsKKwkJCWRybV9zY2hlZF9qb2JfZGVwZW5kZW5jeShz
Y2hlZF9qb2IsIGVudGl0eSkpKSB7CiAJCXRyYWNlX2RybV9zY2hlZF9qb2Jfd2FpdF9kZXAoc2No
ZWRfam9iLCBlbnRpdHktPmRlcGVuZGVuY3kpOwogCiAJCWlmIChkcm1fc2NoZWRfZW50aXR5X2Fk
ZF9kZXBlbmRlbmN5X2NiKGVudGl0eSkpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vc2No
ZWR1bGVyL3NjaGVkX21haW4uYyBiL2RyaXZlcnMvZ3B1L2RybS9zY2hlZHVsZXIvc2NoZWRfbWFp
bi5jCmluZGV4IDQ1NGNiNjE2NGJkYy4uZjc3NDU2OTI5MTM5IDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vc2NoZWR1bGVyL3NjaGVkX21haW4uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vc2No
ZWR1bGVyL3NjaGVkX21haW4uYwpAQCAtNjAzLDYgKzYwMyw4IEBAIGludCBkcm1fc2NoZWRfam9i
X2luaXQoc3RydWN0IGRybV9zY2hlZF9qb2IgKmpvYiwKIAogCUlOSVRfTElTVF9IRUFEKCZqb2It
Pmxpc3QpOwogCisJeGFfaW5pdF9mbGFncygmam9iLT5kZXBlbmRlbmNpZXMsIFhBX0ZMQUdTX0FM
TE9DKTsKKwogCXJldHVybiAwOwogfQogRVhQT1JUX1NZTUJPTChkcm1fc2NoZWRfam9iX2luaXQp
OwpAQCAtNjM3LDYgKzYzOSw5OSBAQCB2b2lkIGRybV9zY2hlZF9qb2JfYXJtKHN0cnVjdCBkcm1f
c2NoZWRfam9iICpqb2IpCiB9CiBFWFBPUlRfU1lNQk9MKGRybV9zY2hlZF9qb2JfYXJtKTsKIAor
LyoqCisgKiBkcm1fc2NoZWRfam9iX2FkZF9kZXBlbmRlbmN5IC0gYWRkcyB0aGUgZmVuY2UgYXMg
YSBqb2IgZGVwZW5kZW5jeQorICogQGpvYjogc2NoZWR1bGVyIGpvYiB0byBhZGQgdGhlIGRlcGVu
ZGVuY2llcyB0bworICogQGZlbmNlOiB0aGUgZG1hX2ZlbmNlIHRvIGFkZCB0byB0aGUgbGlzdCBv
ZiBkZXBlbmRlbmNpZXMuCisgKgorICogTm90ZSB0aGF0IEBmZW5jZSBpcyBjb25zdW1lZCBpbiBi
b3RoIHRoZSBzdWNjZXNzIGFuZCBlcnJvciBjYXNlcy4KKyAqCisgKiBSZXR1cm5zOgorICogMCBv
biBzdWNjZXNzLCBvciBhbiBlcnJvciBvbiBmYWlsaW5nIHRvIGV4cGFuZCB0aGUgYXJyYXkuCisg
Ki8KK2ludCBkcm1fc2NoZWRfam9iX2FkZF9kZXBlbmRlbmN5KHN0cnVjdCBkcm1fc2NoZWRfam9i
ICpqb2IsCisJCQkJIHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlKQoreworCXN0cnVjdCBkbWFfZmVu
Y2UgKmVudHJ5OworCXVuc2lnbmVkIGxvbmcgaW5kZXg7CisJdTMyIGlkID0gMDsKKwlpbnQgcmV0
OworCisJaWYgKCFmZW5jZSkKKwkJcmV0dXJuIDA7CisKKwkvKiBEZWR1cGxpY2F0ZSBpZiB3ZSBh
bHJlYWR5IGRlcGVuZCBvbiBhIGZlbmNlIGZyb20gdGhlIHNhbWUgY29udGV4dC4KKwkgKiBUaGlz
IGxldHMgdGhlIHNpemUgb2YgdGhlIGFycmF5IG9mIGRlcHMgc2NhbGUgd2l0aCB0aGUgbnVtYmVy
IG9mCisJICogZW5naW5lcyBpbnZvbHZlZCwgcmF0aGVyIHRoYW4gdGhlIG51bWJlciBvZiBCT3Mu
CisJICovCisJeGFfZm9yX2VhY2goJmpvYi0+ZGVwZW5kZW5jaWVzLCBpbmRleCwgZW50cnkpIHsK
KwkJaWYgKGVudHJ5LT5jb250ZXh0ICE9IGZlbmNlLT5jb250ZXh0KQorCQkJY29udGludWU7CisK
KwkJaWYgKGRtYV9mZW5jZV9pc19sYXRlcihmZW5jZSwgZW50cnkpKSB7CisJCQlkbWFfZmVuY2Vf
cHV0KGVudHJ5KTsKKwkJCXhhX3N0b3JlKCZqb2ItPmRlcGVuZGVuY2llcywgaW5kZXgsIGZlbmNl
LCBHRlBfS0VSTkVMKTsKKwkJfSBlbHNlIHsKKwkJCWRtYV9mZW5jZV9wdXQoZmVuY2UpOworCQl9
CisJCXJldHVybiAwOworCX0KKworCXJldCA9IHhhX2FsbG9jKCZqb2ItPmRlcGVuZGVuY2llcywg
JmlkLCBmZW5jZSwgeGFfbGltaXRfMzJiLCBHRlBfS0VSTkVMKTsKKwlpZiAocmV0ICE9IDApCisJ
CWRtYV9mZW5jZV9wdXQoZmVuY2UpOworCisJcmV0dXJuIHJldDsKK30KK0VYUE9SVF9TWU1CT0wo
ZHJtX3NjaGVkX2pvYl9hZGRfZGVwZW5kZW5jeSk7CisKKy8qKgorICogZHJtX3NjaGVkX2pvYl9h
ZGRfaW1wbGljaXRfZGVwZW5kZW5jaWVzIC0gYWRkcyBpbXBsaWNpdCBkZXBlbmRlbmNpZXMgYXMg
am9iCisgKiAgIGRlcGVuZGVuY2llcworICogQGpvYjogc2NoZWR1bGVyIGpvYiB0byBhZGQgdGhl
IGRlcGVuZGVuY2llcyB0bworICogQG9iajogdGhlIGdlbSBvYmplY3QgdG8gYWRkIG5ldyBkZXBl
bmRlbmNpZXMgZnJvbS4KKyAqIEB3cml0ZTogd2hldGhlciB0aGUgam9iIG1pZ2h0IHdyaXRlIHRo
ZSBvYmplY3QgKHNvIHdlIG5lZWQgdG8gZGVwZW5kIG9uCisgKiBzaGFyZWQgZmVuY2VzIGluIHRo
ZSByZXNlcnZhdGlvbiBvYmplY3QpLgorICoKKyAqIFRoaXMgc2hvdWxkIGJlIGNhbGxlZCBhZnRl
ciBkcm1fZ2VtX2xvY2tfcmVzZXJ2YXRpb25zKCkgb24geW91ciBhcnJheSBvZgorICogR0VNIG9i
amVjdHMgdXNlZCBpbiB0aGUgam9iIGJ1dCBiZWZvcmUgdXBkYXRpbmcgdGhlIHJlc2VydmF0aW9u
cyB3aXRoIHlvdXIKKyAqIG93biBmZW5jZXMuCisgKgorICogUmV0dXJuczoKKyAqIDAgb24gc3Vj
Y2Vzcywgb3IgYW4gZXJyb3Igb24gZmFpbGluZyB0byBleHBhbmQgdGhlIGFycmF5LgorICovCitp
bnQgZHJtX3NjaGVkX2pvYl9hZGRfaW1wbGljaXRfZGVwZW5kZW5jaWVzKHN0cnVjdCBkcm1fc2No
ZWRfam9iICpqb2IsCisJCQkJCSAgICBzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaiwKKwkJCQkJ
ICAgIGJvb2wgd3JpdGUpCit7CisJaW50IHJldDsKKwlzdHJ1Y3QgZG1hX2ZlbmNlICoqZmVuY2Vz
OworCXVuc2lnbmVkIGludCBpLCBmZW5jZV9jb3VudDsKKworCWlmICghd3JpdGUpIHsKKwkJc3Ry
dWN0IGRtYV9mZW5jZSAqZmVuY2UgPSBkbWFfcmVzdl9nZXRfZXhjbF91bmxvY2tlZChvYmotPnJl
c3YpOworCisJCXJldHVybiBkcm1fc2NoZWRfam9iX2FkZF9kZXBlbmRlbmN5KGpvYiwgZmVuY2Up
OworCX0KKworCXJldCA9IGRtYV9yZXN2X2dldF9mZW5jZXMob2JqLT5yZXN2LCBOVUxMLCAmZmVu
Y2VfY291bnQsICZmZW5jZXMpOworCWlmIChyZXQgfHwgIWZlbmNlX2NvdW50KQorCQlyZXR1cm4g
cmV0OworCisJZm9yIChpID0gMDsgaSA8IGZlbmNlX2NvdW50OyBpKyspIHsKKwkJcmV0ID0gZHJt
X3NjaGVkX2pvYl9hZGRfZGVwZW5kZW5jeShqb2IsIGZlbmNlc1tpXSk7CisJCWlmIChyZXQpCisJ
CQlicmVhazsKKwl9CisKKwlmb3IgKDsgaSA8IGZlbmNlX2NvdW50OyBpKyspCisJCWRtYV9mZW5j
ZV9wdXQoZmVuY2VzW2ldKTsKKwlrZnJlZShmZW5jZXMpOworCXJldHVybiByZXQ7Cit9CitFWFBP
UlRfU1lNQk9MKGRybV9zY2hlZF9qb2JfYWRkX2ltcGxpY2l0X2RlcGVuZGVuY2llcyk7CisKKwog
LyoqCiAgKiBkcm1fc2NoZWRfam9iX2NsZWFudXAgLSBjbGVhbiB1cCBzY2hlZHVsZXIgam9iIHJl
c291cmNlcwogICogQGpvYjogc2NoZWR1bGVyIGpvYiB0byBjbGVhbiB1cApAQCAtNjUyLDYgKzc0
Nyw5IEBAIEVYUE9SVF9TWU1CT0woZHJtX3NjaGVkX2pvYl9hcm0pOwogICovCiB2b2lkIGRybV9z
Y2hlZF9qb2JfY2xlYW51cChzdHJ1Y3QgZHJtX3NjaGVkX2pvYiAqam9iKQogeworCXN0cnVjdCBk
bWFfZmVuY2UgKmZlbmNlOworCXVuc2lnbmVkIGxvbmcgaW5kZXg7CisKIAlpZiAoa3JlZl9yZWFk
KCZqb2ItPnNfZmVuY2UtPmZpbmlzaGVkLnJlZmNvdW50KSkgewogCQkvKiBkcm1fc2NoZWRfam9i
X2FybSgpIGhhcyBiZWVuIGNhbGxlZCAqLwogCQlkbWFfZmVuY2VfcHV0KCZqb2ItPnNfZmVuY2Ut
PmZpbmlzaGVkKTsKQEAgLTY2MSw2ICs3NTksMTIgQEAgdm9pZCBkcm1fc2NoZWRfam9iX2NsZWFu
dXAoc3RydWN0IGRybV9zY2hlZF9qb2IgKmpvYikKIAl9CiAKIAlqb2ItPnNfZmVuY2UgPSBOVUxM
OworCisJeGFfZm9yX2VhY2goJmpvYi0+ZGVwZW5kZW5jaWVzLCBpbmRleCwgZmVuY2UpIHsKKwkJ
ZG1hX2ZlbmNlX3B1dChmZW5jZSk7CisJfQorCXhhX2Rlc3Ryb3koJmpvYi0+ZGVwZW5kZW5jaWVz
KTsKKwogfQogRVhQT1JUX1NZTUJPTChkcm1fc2NoZWRfam9iX2NsZWFudXApOwogCmRpZmYgLS1n
aXQgYS9pbmNsdWRlL2RybS9ncHVfc2NoZWR1bGVyLmggYi9pbmNsdWRlL2RybS9ncHVfc2NoZWR1
bGVyLmgKaW5kZXggODNhZmMzYWE4ZTJmLi5hNDc5NDZmOTA0YjYgMTAwNjQ0Ci0tLSBhL2luY2x1
ZGUvZHJtL2dwdV9zY2hlZHVsZXIuaAorKysgYi9pbmNsdWRlL2RybS9ncHVfc2NoZWR1bGVyLmgK
QEAgLTI3LDkgKzI3LDEyIEBACiAjaW5jbHVkZSA8ZHJtL3Nwc2NfcXVldWUuaD4KICNpbmNsdWRl
IDxsaW51eC9kbWEtZmVuY2UuaD4KICNpbmNsdWRlIDxsaW51eC9jb21wbGV0aW9uLmg+CisjaW5j
bHVkZSA8bGludXgveGFycmF5Lmg+CiAKICNkZWZpbmUgTUFYX1dBSVRfU0NIRURfRU5USVRZX1Ff
RU1QVFkgbXNlY3NfdG9famlmZmllcygxMDAwKQogCitzdHJ1Y3QgZHJtX2dlbV9vYmplY3Q7CisK
IHN0cnVjdCBkcm1fZ3B1X3NjaGVkdWxlcjsKIHN0cnVjdCBkcm1fc2NoZWRfcnE7CiAKQEAgLTE5
OCw2ICsyMDEsMTcgQEAgc3RydWN0IGRybV9zY2hlZF9qb2IgewogCWVudW0gZHJtX3NjaGVkX3By
aW9yaXR5CQlzX3ByaW9yaXR5OwogCXN0cnVjdCBkcm1fc2NoZWRfZW50aXR5ICAgICAgICAgKmVu
dGl0eTsKIAlzdHJ1Y3QgZG1hX2ZlbmNlX2NiCQljYjsKKwkvKioKKwkgKiBAZGVwZW5kZW5jaWVz
OgorCSAqCisJICogQ29udGFpbnMgdGhlIGRlcGVuZGVuY2llcyBhcyBzdHJ1Y3QgZG1hX2ZlbmNl
IGZvciB0aGlzIGpvYiwgc2VlCisJICogZHJtX3NjaGVkX2pvYl9hZGRfZGVwZW5kZW5jeSgpIGFu
ZAorCSAqIGRybV9zY2hlZF9qb2JfYWRkX2ltcGxpY2l0X2RlcGVuZGVuY2llcygpLgorCSAqLwor
CXN0cnVjdCB4YXJyYXkJCQlkZXBlbmRlbmNpZXM7CisKKwkvKiogQGxhc3RfZGVwZW5kZW5jeTog
dHJhY2tzIEBkZXBlbmRlbmNpZXMgYXMgdGhleSBzaWduYWwgKi8KKwl1bnNpZ25lZCBsb25nCQkJ
bGFzdF9kZXBlbmRlbmN5OwogfTsKIAogc3RhdGljIGlubGluZSBib29sIGRybV9zY2hlZF9pbnZh
bGlkYXRlX2pvYihzdHJ1Y3QgZHJtX3NjaGVkX2pvYiAqc19qb2IsCkBAIC0yMjAsOSArMjM0LDE1
IEBAIGVudW0gZHJtX2dwdV9zY2hlZF9zdGF0IHsKICAqLwogc3RydWN0IGRybV9zY2hlZF9iYWNr
ZW5kX29wcyB7CiAJLyoqCi0gICAgICAgICAqIEBkZXBlbmRlbmN5OiBDYWxsZWQgd2hlbiB0aGUg
c2NoZWR1bGVyIGlzIGNvbnNpZGVyaW5nIHNjaGVkdWxpbmcKLSAgICAgICAgICogdGhpcyBqb2Ig
bmV4dCwgdG8gZ2V0IGFub3RoZXIgc3RydWN0IGRtYV9mZW5jZSBmb3IgdGhpcyBqb2IgdG8KLQkg
KiBibG9jayBvbi4gIE9uY2UgaXQgcmV0dXJucyBOVUxMLCBydW5fam9iKCkgbWF5IGJlIGNhbGxl
ZC4KKwkgKiBAZGVwZW5kZW5jeToKKwkgKgorCSAqIENhbGxlZCB3aGVuIHRoZSBzY2hlZHVsZXIg
aXMgY29uc2lkZXJpbmcgc2NoZWR1bGluZyB0aGlzIGpvYiBuZXh0LCB0bworCSAqIGdldCBhbm90
aGVyIHN0cnVjdCBkbWFfZmVuY2UgZm9yIHRoaXMgam9iIHRvIGJsb2NrIG9uLiAgT25jZSBpdAor
CSAqIHJldHVybnMgTlVMTCwgcnVuX2pvYigpIG1heSBiZSBjYWxsZWQuCisJICoKKwkgKiBJZiBh
IGRyaXZlciBleGNsdXNpdmVseSB1c2VzIGRybV9zY2hlZF9qb2JfYWRkX2RlcGVuZGVuY3koKSBh
bmQKKwkgKiBkcm1fc2NoZWRfam9iX2FkZF9pbXBsaWNpdF9kZXBlbmRlbmNpZXMoKSB0aGlzIGNh
biBiZSBvbW1pdHRlZCBhbmQKKwkgKiBsZWZ0IGFzIE5VTEwuCiAJICovCiAJc3RydWN0IGRtYV9m
ZW5jZSAqKCpkZXBlbmRlbmN5KShzdHJ1Y3QgZHJtX3NjaGVkX2pvYiAqc2NoZWRfam9iLAogCQkJ
CQlzdHJ1Y3QgZHJtX3NjaGVkX2VudGl0eSAqc19lbnRpdHkpOwpAQCAtMzQ5LDYgKzM2OSwxMyBA
QCBpbnQgZHJtX3NjaGVkX2pvYl9pbml0KHN0cnVjdCBkcm1fc2NoZWRfam9iICpqb2IsCiAJCSAg
ICAgICBzdHJ1Y3QgZHJtX3NjaGVkX2VudGl0eSAqZW50aXR5LAogCQkgICAgICAgdm9pZCAqb3du
ZXIpOwogdm9pZCBkcm1fc2NoZWRfam9iX2FybShzdHJ1Y3QgZHJtX3NjaGVkX2pvYiAqam9iKTsK
K2ludCBkcm1fc2NoZWRfam9iX2FkZF9kZXBlbmRlbmN5KHN0cnVjdCBkcm1fc2NoZWRfam9iICpq
b2IsCisJCQkJIHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlKTsKK2ludCBkcm1fc2NoZWRfam9iX2Fk
ZF9pbXBsaWNpdF9kZXBlbmRlbmNpZXMoc3RydWN0IGRybV9zY2hlZF9qb2IgKmpvYiwKKwkJCQkJ
ICAgIHN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqLAorCQkJCQkgICAgYm9vbCB3cml0ZSk7CisK
Kwogdm9pZCBkcm1fc2NoZWRfZW50aXR5X21vZGlmeV9zY2hlZChzdHJ1Y3QgZHJtX3NjaGVkX2Vu
dGl0eSAqZW50aXR5LAogCQkJCSAgICBzdHJ1Y3QgZHJtX2dwdV9zY2hlZHVsZXIgKipzY2hlZF9s
aXN0LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bnNpZ25lZCBpbnQgbnVt
X3NjaGVkX2xpc3QpOwotLSAKMi4zMi4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fXwpMaW5hcm8tbW0tc2lnIG1haWxpbmcgbGlzdApMaW5hcm8tbW0tc2ln
QGxpc3RzLmxpbmFyby5vcmcKaHR0cHM6Ly9saXN0cy5saW5hcm8ub3JnL21haWxtYW4vbGlzdGlu
Zm8vbGluYXJvLW1tLXNpZwo=
