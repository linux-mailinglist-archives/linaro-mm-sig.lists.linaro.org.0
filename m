Return-Path: <linaro-mm-sig-bounces@lists.linaro.org>
X-Original-To: lists+linaro-mm-sig@lfdr.de
Delivered-To: lists+linaro-mm-sig@lfdr.de
Received: from lists.linaro.org (lists.linaro.org [107.22.173.205])
	by mail.lfdr.de (Postfix) with ESMTPS id 0F9C41D1494
	for <lists+linaro-mm-sig@lfdr.de>; Wed, 13 May 2020 15:24:02 +0200 (CEST)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 39B2D65F88
	for <lists+linaro-mm-sig@lfdr.de>; Wed, 13 May 2020 13:24:01 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
	id 2E11E65F89; Wed, 13 May 2020 13:24:01 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on lists.linaro.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.9 required=5.0 tests=BAYES_00,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_HI,SPF_HELO_NONE autolearn=disabled version=3.4.2
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 233EC65F8B;
	Wed, 13 May 2020 13:23:19 +0000 (UTC)
X-Original-To: linaro-mm-sig@lists.linaro.org
Delivered-To: linaro-mm-sig@lists.linaro.org
Received: from lists.linaro.org (localhost [127.0.0.1])
 by lists.linaro.org (Postfix) with ESMTP id CD2BA65F88
 for <linaro-mm-sig@lists.linaro.org>; Wed, 13 May 2020 13:23:15 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
 id B82D965F8B; Wed, 13 May 2020 13:23:15 +0000 (UTC)
Received: from foss.arm.com (foss.arm.com [217.140.110.172])
 by lists.linaro.org (Postfix) with ESMTP id 53CBF65F88
 for <linaro-mm-sig@lists.linaro.org>; Wed, 13 May 2020 13:23:14 +0000 (UTC)
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 2877A30E;
 Wed, 13 May 2020 06:23:14 -0700 (PDT)
Received: from [10.57.36.85] (unknown [10.57.36.85])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 5F5103F71E;
 Wed, 13 May 2020 06:23:12 -0700 (PDT)
To: Marek Szyprowski <m.szyprowski@samsung.com>,
 dri-devel@lists.freedesktop.org, iommu@lists.linux-foundation.org,
 linaro-mm-sig@lists.linaro.org, linux-kernel@vger.kernel.org
References: <20200512085710.14688-1-m.szyprowski@samsung.com>
 <CGME20200512090107eucas1p13a38ce5ce4c15cd0033acaea7b26c9b0@eucas1p1.samsung.com>
 <20200512090058.14910-1-m.szyprowski@samsung.com>
From: Robin Murphy <robin.murphy@arm.com>
Message-ID: <400501ec-c56b-edb7-7def-36ad43264123@arm.com>
Date: Wed, 13 May 2020 14:23:10 +0100
User-Agent: Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101
 Thunderbird/68.8.0
MIME-Version: 1.0
In-Reply-To: <20200512090058.14910-1-m.szyprowski@samsung.com>
Content-Language: en-GB
X-Virus-Scanned: ClamAV using ClamSMTP
Cc: David Airlie <airlied@linux.ie>, Daniel Vetter <daniel@ffwll.ch>,
 Christoph Hellwig <hch@lst.de>, linux-arm-kernel@lists.infradead.org,
 Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
Subject: Re: [Linaro-mm-sig] [PATCH v4 01/38] dma-mapping: add generic
 helpers for mapping sgtable objects
X-BeenThere: linaro-mm-sig@lists.linaro.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: "Unified memory management interest group."
 <linaro-mm-sig.lists.linaro.org>
List-Unsubscribe: <https://lists.linaro.org/mailman/options/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=unsubscribe>
List-Archive: <http://lists.linaro.org/pipermail/linaro-mm-sig/>
List-Post: <mailto:linaro-mm-sig@lists.linaro.org>
List-Help: <mailto:linaro-mm-sig-request@lists.linaro.org?subject=help>
List-Subscribe: <https://lists.linaro.org/mailman/listinfo/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=subscribe>
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="utf-8"; Format="flowed"
Errors-To: linaro-mm-sig-bounces@lists.linaro.org
Sender: "Linaro-mm-sig" <linaro-mm-sig-bounces@lists.linaro.org>
X-Virus-Scanned: ClamAV using ClamSMTP

T24gMjAyMC0wNS0xMiAxMDowMCBhbSwgTWFyZWsgU3p5cHJvd3NraSB3cm90ZToKPiBzdHJ1Y3Qg
c2dfdGFibGUgaXMgYSBjb21tb24gc3RydWN0dXJlIHVzZWQgZm9yIGRlc2NyaWJpbmcgYSBtZW1v
cnkKPiBidWZmZXIuIEl0IGNvbnNpc3RzIG9mIGEgc2NhdHRlcmxpc3Qgd2l0aCBtZW1vcnkgcGFn
ZXMgYW5kIERNQSBhZGRyZXNzZXMKPiAoc2dsIGVudHJ5KSwgYXMgd2VsbCBhcyB0aGUgbnVtYmVy
IG9mIHNjYXR0ZXJsaXN0IGVudHJpZXM6IENQVSBwYWdlcwo+IChvcmlnX25lbnRzIGVudHJ5KSBh
bmQgRE1BIG1hcHBlZCBwYWdlcyAobmVudHMgZW50cnkpLgo+IAo+IEl0IHR1cm5lZCBvdXQgdGhh
dCBpdCB3YXMgYSBjb21tb24gbWlzdGFrZSB0byBtaXN1c2UgbmVudHMgYW5kIG9yaWdfbmVudHMK
PiBlbnRyaWVzLCBjYWxsaW5nIERNQS1tYXBwaW5nIGZ1bmN0aW9ucyB3aXRoIGEgd3JvbmcgbnVt
YmVyIG9mIGVudHJpZXMgb3IKPiBpZ25vcmluZyB0aGUgbnVtYmVyIG9mIG1hcHBlZCBlbnRyaWVz
IHJldHVybmVkIGJ5IHRoZSBkbWFfbWFwX3NnCj4gZnVuY3Rpb24uCj4gCj4gVG8gYXZvaWQgc3Vj
aCBpc3N1ZXMsIGxldHMgaW50cm9kdWNlIGEgY29tbW9uIHdyYXBwZXJzIG9wZXJhdGluZyBkaXJl
Y3RseQoKTml0OiAibGV0J3MiCgo+IG9uIHRoZSBzdHJ1Y3Qgc2dfdGFibGUgb2JqZWN0cywgd2hp
Y2ggdGFrZSBjYXJlIG9mIHRoZSBwcm9wZXIgdXNlIG9mCj4gdGhlIG5lbnRzIGFuZCBvcmlnX25l
bnRzIGVudHJpZXMuCgpBIGZldyBtb3JlIGRvY3VtZW50YXRpb24gbml0cGlja3MgYmVsb3csIGJ1
dCBlaXRoZXIgd2F5IHRoZSAKaW1wbGVtZW50YXRpb24gaXRzZWxmIChtb2R1bG8gQ2hyaXN0b3Bo
J3MgZml4dXApIGxvb2tzIGdvb2Q7CgpSZXZpZXdlZC1ieTogUm9iaW4gTXVycGh5IDxyb2Jpbi5t
dXJwaHlAYXJtLmNvbT4KCj4gU2lnbmVkLW9mZi1ieTogTWFyZWsgU3p5cHJvd3NraSA8bS5zenlw
cm93c2tpQHNhbXN1bmcuY29tPgo+IC0tLQo+IEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWUgJ1tQ
QVRDSCB2NCAwMC8zOF0gRFJNOiBmaXggc3RydWN0IHNnX3RhYmxlIG5lbnRzCj4gdnMuIG9yaWdf
bmVudHMgbWlzdXNlJyB0aHJlYWQ6Cj4gaHR0cHM6Ly9sb3JlLmtlcm5lbC5vcmcvZHJpLWRldmVs
LzIwMjAwNTEyMDg1NzEwLjE0Njg4LTEtbS5zenlwcm93c2tpQHNhbXN1bmcuY29tL1QvCj4gLS0t
Cj4gICBpbmNsdWRlL2xpbnV4L2RtYS1tYXBwaW5nLmggfCA3OSArKysrKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysKPiAgIDEgZmlsZSBjaGFuZ2VkLCA3OSBpbnNlcnRp
b25zKCspCj4gCj4gZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvZG1hLW1hcHBpbmcuaCBiL2lu
Y2x1ZGUvbGludXgvZG1hLW1hcHBpbmcuaAo+IGluZGV4IGI0MzExNmEuLjg4ZjAxY2MgMTAwNjQ0
Cj4gLS0tIGEvaW5jbHVkZS9saW51eC9kbWEtbWFwcGluZy5oCj4gKysrIGIvaW5jbHVkZS9saW51
eC9kbWEtbWFwcGluZy5oCj4gQEAgLTYwOSw2ICs2MDksODUgQEAgc3RhdGljIGlubGluZSB2b2lk
IGRtYV9zeW5jX3NpbmdsZV9yYW5nZV9mb3JfZGV2aWNlKHN0cnVjdCBkZXZpY2UgKmRldiwKPiAg
IAlyZXR1cm4gZG1hX3N5bmNfc2luZ2xlX2Zvcl9kZXZpY2UoZGV2LCBhZGRyICsgb2Zmc2V0LCBz
aXplLCBkaXIpOwo+ICAgfQo+ICAgCj4gKy8qKgo+ICsgKiBkbWFfbWFwX3NndGFibGUgLSBNYXAg
dGhlIGdpdmVuIGJ1ZmZlciBmb3IgdGhlIERNQSBvcGVyYXRpb25zCgpFaXRoZXIgImZvciBETUEg
b3BlcmF0aW9ucyIsICJmb3IgdGhlIERNQSBvcGVyYXRpb24iLCBvciAiZm9yIGEgRE1BIApvcGVy
YXRpb24iLCBkZXBlbmRpbmcgb24gdGhlIGV4YWN0IGNvbnRleHQuIE9yIGF0IHRoYXQgcG9pbnQs
IHBlcmhhcHMgCmp1c3QgImZvciBETUEiLgoKPiArICogQGRldjoJVGhlIGRldmljZSB0byBwZXJm
b3JtIGEgRE1BIG9wZXJhdGlvbgoKVGhhdCBkb2Vzbid0IHF1aXRlIHBhcnNlLCBtYXliZSAidGhl
IGRldmljZSBwZXJmb3JtaW5nIHRoZSBETUEgCm9wZXJhdGlvbiIsIG9yICJ0aGUgZGV2aWNlIGZv
ciB3aGljaCB0byBwZXJmb3JtIHRoZSBETUEgb3BlcmF0aW9uIiwgCmRlcGVuZGluZyBvbiB3aGV0
aGVyICJETUEgb3BlcmF0aW9uIiBtZWFucyB0aGUgbWFwcGluZyBvciB0aGUgYWN0dWFsIApoYXJk
d2FyZSBhY2Nlc3M/Cgo+ICsgKiBAc2d0OglUaGUgc2dfdGFibGUgb2JqZWN0IGRlc2NyaWJpbmcg
dGhlIGJ1ZmZlcgo+ICsgKiBAZGlyOglETUEgZGlyZWN0aW9uCj4gKyAqIEBhdHRyczoJT3B0aW9u
YWwgRE1BIGF0dHJpYnV0ZXMgZm9yIHRoZSBtYXAgb3BlcmF0aW9uCj4gKyAqCj4gKyAqIE1hcHMg
YSBidWZmZXIgZGVzY3JpYmVkIGJ5IGEgc2NhdHRlcmxpc3Qgc3RvcmVkIGluIHRoZSBnaXZlbiBz
Z190YWJsZQo+ICsgKiBvYmplY3QgZm9yIHRoZSBAZGlyIERNQSBvcGVyYXRpb24gYnkgdGhlIEBk
ZXYgZGV2aWNlLiBBZnRlciBzdWNjZXNzCj4gKyAqIHRoZSBvd25lcnNoaXAgZm9yIHRoZSBidWZm
ZXIgaXMgdHJhbnNmZXJyZWQgdG8gdGhlIERNQSBkb21haW4uIE9uZSBoYXMKPiArICogdG8gY2Fs
bCBkbWFfc3luY19zZ3RhYmxlX2Zvcl9jcHUoKSBvciBkbWFfdW5tYXBfc2d0YWJsZSgpIHRvIG1v
dmUgdGhlCj4gKyAqIG93bmVyc2hpcCBvZiB0aGUgYnVmZmVyIGJhY2sgdG8gdGhlIENQVSBkb21h
aW4gYmVmb3JlIHRvdWNoaW5nIHRoZQo+ICsgKiBidWZmZXIgYnkgdGhlIENQVS4KPiArICogUmV0
dXJucyAwIG9uIHN1Y2Nlc3Mgb3IgLUVJTlZBTCBvbiBlcnJvciBkdXJpbmcgbWFwcGluZyB0aGUg
YnVmZmVyLgoKTWF5YmUgbWFrZSB0aGF0IGEgcHJvcGVyICJSZXR1cm46IiBzZWN0aW9uPwoKPiAr
ICovCj4gK3N0YXRpYyBpbmxpbmUgaW50IGRtYV9tYXBfc2d0YWJsZShzdHJ1Y3QgZGV2aWNlICpk
ZXYsIHN0cnVjdCBzZ190YWJsZSAqc2d0LAo+ICsJCWVudW0gZG1hX2RhdGFfZGlyZWN0aW9uIGRp
ciwgdW5zaWduZWQgbG9uZyBhdHRycykKPiArewo+ICsJaW50IG4gPSBkbWFfbWFwX3NnX2F0dHJz
KGRldiwgc2d0LT5zZ2wsIHNndC0+b3JpZ19uZW50cywgZGlyLCBhdHRycyk7Cj4gKwo+ICsJaWYg
KG4gPiAwKSB7Cj4gKwkJc2d0LT5uZW50cyA9IG47Cj4gKwkJcmV0dXJuIDA7Cj4gKwl9Cj4gKwly
ZXR1cm4gLUVJTlZBTDsKPiArfQo+ICsKPiArLyoqCj4gKyAqIGRtYV91bm1hcF9zZ3RhYmxlIC0g
VW5tYXAgdGhlIGdpdmVuIGJ1ZmZlciBmb3IgdGhlIERNQSBvcGVyYXRpb25zCj4gKyAqIEBkZXY6
CVRoZSBkZXZpY2UgdG8gcGVyZm9ybSBhIERNQSBvcGVyYXRpb24KClNhbWUgdHdvIHBvaW50cyBh
cyBiZWZvcmUuCgo+ICsgKiBAc2d0OglUaGUgc2dfdGFibGUgb2JqZWN0IGRlc2NyaWJpbmcgdGhl
IGJ1ZmZlcgo+ICsgKiBAZGlyOglETUEgZGlyZWN0aW9uCj4gKyAqIEBhdHRyczoJT3B0aW9uYWwg
RE1BIGF0dHJpYnV0ZXMgZm9yIHRoZSBtYXAgb3BlcmF0aW9uCgpQcmVzdW1hYmx5ICJ0aGUgdW5t
YXAgb3BlcmF0aW9uIiwgYWx0aG91Z2ggaXQgKmlzKiB0cnVlIHRoYXQgc29tZSAKYXR0cmlidXRl
cyBhcmUgZXhwZWN0ZWQgdG8gbWF0Y2ggdGhvc2Ugb3JpZ2luYWxseSBwYXNzZWQgdG8gCmRtYV9t
YXBfc2d0YWJsZSgpLi4uIG5vdCBzdXJlIGlmIGtlcm5lbGRvYyBjYW4gY2FuIHN0cmV0Y2ggdG8g
dGhhdCBsZXZlbCAKb2YgZGV0YWlsIGNvbmNpc2VseSA7KQoKPiArICoKPiArICogVW5tYXBzIGEg
YnVmZmVyIGRlc2NyaWJlZCBieSBhIHNjYXR0ZXJsaXN0IHN0b3JlZCBpbiB0aGUgZ2l2ZW4gc2df
dGFibGUKPiArICogb2JqZWN0IGZvciB0aGUgQGRpciBETUEgb3BlcmF0aW9uIGJ5IHRoZSBAZGV2
IGRldmljZS4gQWZ0ZXIgdGhpcyBmdW5jdGlvbgo+ICsgKiB0aGUgb3duZXJzaGlwIG9mIHRoZSBi
dWZmZXIgaXMgdHJhbnNmZXJyZWQgYmFjayB0byB0aGUgQ1BVIGRvbWFpbi4KPiArICovCj4gK3N0
YXRpYyBpbmxpbmUgdm9pZCBkbWFfdW5tYXBfc2d0YWJsZShzdHJ1Y3QgZGV2aWNlICpkZXYsIHN0
cnVjdCBzZ190YWJsZSAqc2d0LAo+ICsJCWVudW0gZG1hX2RhdGFfZGlyZWN0aW9uIGRpciwgdW5z
aWduZWQgbG9uZyBhdHRycykKPiArewo+ICsJZG1hX3VubWFwX3NnX2F0dHJzKGRldiwgc2d0LT5z
Z2wsIHNndC0+b3JpZ19uZW50cywgZGlyLCBhdHRycyk7Cj4gK30KPiArCj4gKy8qKgo+ICsgKiBk
bWFfc3luY19zZ3RhYmxlX2Zvcl9jcHUgLSBTeW5jaHJvbml6ZSB0aGUgZ2l2ZW4gYnVmZmVyIGZv
ciB0aGUgQ1BVIGFjY2VzcwoKcy90aGUgQ1BVL0NQVS8KCj4gKyAqIEBkZXY6CVRoZSBkZXZpY2Ug
dG8gcGVyZm9ybSBhIERNQSBvcGVyYXRpb24KCkFzIGJlZm9yZS4KCj4gKyAqIEBzZ3Q6CVRoZSBz
Z190YWJsZSBvYmplY3QgZGVzY3JpYmluZyB0aGUgYnVmZmVyCj4gKyAqIEBkaXI6CURNQSBkaXJl
Y3Rpb24KPiArICoKPiArICogUGVyZm9ybXMgdGhlIG5lZWRlZCBjYWNoZSBzeW5jaHJvbml6YXRp
b24gYW5kIG1vdmVzIHRoZSBvd25lcnNoaXAgb2YgdGhlCj4gKyAqIGJ1ZmZlciBiYWNrIHRvIHRo
ZSBDUFUgZG9tYWluLCBzbyBpdCBpcyBzYWZlIHRvIHBlcmZvcm0gYW55IGFjY2VzcyB0byBpdAo+
ICsgKiBieSB0aGUgQ1BVLiBCZWZvcmUgZG9pbmcgYW55IGZ1cnRoZXIgRE1BIG9wZXJhdGlvbnMs
IG9uZSBoYXMgdG8gdHJhbnNmZXIKPiArICogdGhlIG93bmVyc2hpcCBvZiB0aGUgYnVmZmVyIGJh
Y2sgdG8gdGhlIERNQSBkb21haW4gYnkgY2FsbGluZyB0aGUKPiArICogZG1hX3N5bmNfc2d0YWJs
ZV9mb3JfZGV2aWNlKCkuCj4gKyAqLwo+ICtzdGF0aWMgaW5saW5lIHZvaWQgZG1hX3N5bmNfc2d0
YWJsZV9mb3JfY3B1KHN0cnVjdCBkZXZpY2UgKmRldiwKPiArCQlzdHJ1Y3Qgc2dfdGFibGUgKnNn
dCwgZW51bSBkbWFfZGF0YV9kaXJlY3Rpb24gZGlyKQo+ICt7Cj4gKwlkbWFfc3luY19zZ19mb3Jf
Y3B1KGRldiwgc2d0LT5zZ2wsIHNndC0+b3JpZ19uZW50cywgZGlyKTsKPiArfQo+ICsKPiArLyoq
Cj4gKyAqIGRtYV9zeW5jX3NndGFibGVfZm9yX2RldmljZSAtIFN5bmNocm9uaXplIHRoZSBnaXZl
biBidWZmZXIgZm9yIHRoZSBETUEKClRoYXQgb25lIGRvZXNuJ3QgZXZlbgoKPiArICogQGRldjoJ
VGhlIGRldmljZSB0byBwZXJmb3JtIGEgRE1BIG9wZXJhdGlvbgoKQXMgYmVmb3JlLgoKQnV0IG9m
IGNvdXJzZSwgbWFueSB0aGFua3MgZm9yIHRha2luZyB0aGUgZWZmb3J0IHRvIGFkZCBzdWNoIGNv
bXBsZXRlIApkb2N1bWVudGF0aW9uIGluIHRoZSBmaXJzdCBwbGFjZSA6KQoKQ2hlZXJzLApSb2Jp
bi4KCj4gKyAqIEBzZ3Q6CVRoZSBzZ190YWJsZSBvYmplY3QgZGVzY3JpYmluZyB0aGUgYnVmZmVy
Cj4gKyAqIEBkaXI6CURNQSBkaXJlY3Rpb24KPiArICoKPiArICogUGVyZm9ybXMgdGhlIG5lZWRl
ZCBjYWNoZSBzeW5jaHJvbml6YXRpb24gYW5kIG1vdmVzIHRoZSBvd25lcnNoaXAgb2YgdGhlCj4g
KyAqIGJ1ZmZlciBiYWNrIHRvIHRoZSBETUEgZG9tYWluLCBzbyBpdCBpcyBzYWZlIHRvIHBlcmZv
cm0gdGhlIERNQSBvcGVyYXRpb24uCj4gKyAqIE9uY2UgZmluaXNoZWQsIG9uZSBoYXMgdG8gY2Fs
bCBkbWFfc3luY19zZ3RhYmxlX2Zvcl9jcHUoKSBvcgo+ICsgKiBkbWFfdW5tYXBfc2d0YWJsZSgp
Lgo+ICsgKi8KPiArc3RhdGljIGlubGluZSB2b2lkIGRtYV9zeW5jX3NndGFibGVfZm9yX2Rldmlj
ZShzdHJ1Y3QgZGV2aWNlICpkZXYsCj4gKwkJc3RydWN0IHNnX3RhYmxlICpzZ3QsIGVudW0gZG1h
X2RhdGFfZGlyZWN0aW9uIGRpcikKPiArewo+ICsJZG1hX3N5bmNfc2dfZm9yX2RldmljZShkZXYs
IHNndC0+c2dsLCBzZ3QtPm9yaWdfbmVudHMsIGRpcik7Cj4gK30KPiArCj4gICAjZGVmaW5lIGRt
YV9tYXBfc2luZ2xlKGQsIGEsIHMsIHIpIGRtYV9tYXBfc2luZ2xlX2F0dHJzKGQsIGEsIHMsIHIs
IDApCj4gICAjZGVmaW5lIGRtYV91bm1hcF9zaW5nbGUoZCwgYSwgcywgcikgZG1hX3VubWFwX3Np
bmdsZV9hdHRycyhkLCBhLCBzLCByLCAwKQo+ICAgI2RlZmluZSBkbWFfbWFwX3NnKGQsIHMsIG4s
IHIpIGRtYV9tYXBfc2dfYXR0cnMoZCwgcywgbiwgciwgMCkKPiAKX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX18KTGluYXJvLW1tLXNpZyBtYWlsaW5nIGxpc3QK
TGluYXJvLW1tLXNpZ0BsaXN0cy5saW5hcm8ub3JnCmh0dHBzOi8vbGlzdHMubGluYXJvLm9yZy9t
YWlsbWFuL2xpc3RpbmZvL2xpbmFyby1tbS1zaWcK
