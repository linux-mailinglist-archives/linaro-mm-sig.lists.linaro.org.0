Return-Path: <linaro-mm-sig-bounces@lists.linaro.org>
X-Original-To: lists+linaro-mm-sig@lfdr.de
Delivered-To: lists+linaro-mm-sig@lfdr.de
Received: from lists.linaro.org (lists.linaro.org [107.22.173.205])
	by mail.lfdr.de (Postfix) with ESMTPS id 5FA662D52E8
	for <lists+linaro-mm-sig@lfdr.de>; Thu, 10 Dec 2020 05:45:28 +0100 (CET)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 7FD0B61939
	for <lists+linaro-mm-sig@lfdr.de>; Thu, 10 Dec 2020 04:45:27 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
	id 70EAC6248D; Thu, 10 Dec 2020 04:45:27 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on lists.linaro.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.9 required=5.0 tests=BAYES_00,DKIM_ADSP_CUSTOM_MED,
	MAILING_LIST_MULTI,RCVD_IN_DNSWL_NONE,RCVD_IN_MSPIKE_H2,SPF_HELO_NONE
	autolearn=disabled version=3.4.2
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id BE4CC666E7;
	Thu, 10 Dec 2020 04:44:19 +0000 (UTC)
X-Original-To: linaro-mm-sig@lists.linaro.org
Delivered-To: linaro-mm-sig@lists.linaro.org
Received: from lists.linaro.org (localhost [127.0.0.1])
 by lists.linaro.org (Postfix) with ESMTP id 988B061939
 for <linaro-mm-sig@lists.linaro.org>; Thu, 10 Dec 2020 04:44:16 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
 id 7C4D1666E7; Thu, 10 Dec 2020 04:44:16 +0000 (UTC)
Received: from mail-yb1-f202.google.com (mail-yb1-f202.google.com
 [209.85.219.202])
 by lists.linaro.org (Postfix) with ESMTPS id BED0661939
 for <linaro-mm-sig@lists.linaro.org>; Thu, 10 Dec 2020 04:44:14 +0000 (UTC)
Received: by mail-yb1-f202.google.com with SMTP id i184so5173071ybg.7
 for <linaro-mm-sig@lists.linaro.org>; Wed, 09 Dec 2020 20:44:14 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:sender:date:message-id:mime-version:subject:from
 :to:cc;
 bh=Uxhfo6NiTx/8/TE2mqrCWqYEtnXe373edCAAWrZKF+c=;
 b=Bi4+/W4vBSZTiHvC6pehIQhk8POkEmfE42C1rBMLG/USXHdWOiAFwEXOVrV+BdmZ/w
 QM0pX6zVcqhrytEIMp063jzPAhUkE5uN1LFefKZPmLMOwbu+I9NMSV2ILWhqghDTwG1v
 KpBcsTEUu9/iU07NqeiqOD7HRnoLV6HEs0tDxHbS1OFuFxm4REHl6ZrOs3uHSsVafL70
 72gTeMg0SqWIJUmG7ImsgG2Z50ARrUihtO3vdOXj/fIeimsIIPqTi2mIN9ooOzIw/ACH
 101rfTAfzVHzooJDWHmcTqI6OAgS/76EmauDJmsz+xVFSydKC/xjthnVVX6cADV4yxHw
 CxcQ==
X-Gm-Message-State: AOAM533Or3jEs0uGawHPWTKC4ClZrg0ccluLKjHhGepFv9NG4/KjoXSO
 4PYhvkSy6BRBXEEG+AsaEaMkZxprLZU=
X-Google-Smtp-Source: ABdhPJyn4xxYF6xRM8uwZJtWcMA6nynEApztnTy46CJe/oWMLKbdtL1LWy8csXYMl+zO8O8jQcntFyVXwxA=
X-Received: from hridya.mtv.corp.google.com
 ([2620:15c:211:200:7220:84ff:fe09:5ea6])
 (user=hridya job=sendgmr) by 2002:a25:e694:: with SMTP id
 d142mr8130373ybh.494.1607575454270; 
 Wed, 09 Dec 2020 20:44:14 -0800 (PST)
Date: Wed,  9 Dec 2020 20:43:57 -0800
Message-Id: <20201210044400.1080308-1-hridya@google.com>
Mime-Version: 1.0
X-Mailer: git-send-email 2.29.2.576.ga3fc446d84-goog
From: Hridya Valsaraju <hridya@google.com>
To: Sumit Semwal <sumit.semwal@linaro.org>, 
 "=?UTF-8?q?Christian=20K=C3=B6nig?=" <christian.koenig@amd.com>,
 Hridya Valsaraju <hridya@google.com>, 
 linux-kernel@vger.kernel.org, linux-media@vger.kernel.org, 
 dri-devel@lists.freedesktop.org, linaro-mm-sig@lists.linaro.org
X-Virus-Scanned: ClamAV using ClamSMTP
Cc: surenb@google.com, gregkh@linuxfoundation.org, kernel-team@android.com,
 john.stultz@linaro.org
Subject: [Linaro-mm-sig] [PATCH] dmabuf: Add the capability to expose
	DMA-BUF stats in sysfs
X-BeenThere: linaro-mm-sig@lists.linaro.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: "Unified memory management interest group."
 <linaro-mm-sig.lists.linaro.org>
List-Unsubscribe: <https://lists.linaro.org/mailman/options/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=unsubscribe>
List-Archive: <http://lists.linaro.org/pipermail/linaro-mm-sig/>
List-Post: <mailto:linaro-mm-sig@lists.linaro.org>
List-Help: <mailto:linaro-mm-sig-request@lists.linaro.org?subject=help>
List-Subscribe: <https://lists.linaro.org/mailman/listinfo/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linaro-mm-sig-bounces@lists.linaro.org
Sender: "Linaro-mm-sig" <linaro-mm-sig-bounces@lists.linaro.org>
X-Virus-Scanned: ClamAV using ClamSMTP

VGhpcyBwYXRjaCBhbGxvd3Mgc3RhdGlzdGljcyB0byBiZSBlbmFibGVkIGZvciBlYWNoIERNQS1C
VUYgaW4Kc3lzZnMgYnkgZW5hYmxpbmcgdGhlIGNvbmZpZyBDT05GSUdfRE1BQlVGX1NZU0ZTX1NU
QVRTLgoKVGhlIGZvbGxvd2luZyBzdGF0cyB3aWxsIGJlIGV4cG9zZWQgYnkgdGhlIGludGVyZmFj
ZToKCi9zeXMva2VybmVsL2RtYWJ1Zi88aW5vZGVfbnVtYmVyPi9leHBvcnRlcl9uYW1lCi9zeXMv
a2VybmVsL2RtYWJ1Zi88aW5vZGVfbnVtYmVyPi9zaXplCi9zeXMva2VybmVsL2RtYWJ1Zi88aW5v
ZGVfbnVtYmVyPi9kZXZfbWFwX2luZm8KClRoZSBpbm9kZV9udW1iZXIgaXMgdW5pcXVlIGZvciBl
YWNoIERNQS1CVUYgYW5kIHdhcyBhZGRlZCBlYXJsaWVyIFsxXQppbiBvcmRlciB0byBhbGxvdyB1
c2Vyc3BhY2UgdG8gdHJhY2sgRE1BLUJVRiB1c2FnZSBhY3Jvc3MgZGlmZmVyZW50CnByb2Nlc3Nl
cy4KCkN1cnJlbnRseSwgdGhpcyBpbmZvcm1hdGlvbiBpcyBleHBvc2VkIGluCi9zeXMva2VybmVs
L2RlYnVnL2RtYV9idWYvYnVmaW5mby4KSG93ZXZlciwgc2luY2UgZGVidWdmcyBpcyBjb25zaWRl
cmVkIHVuc2FmZSB0byBiZSBtb3VudGVkIGluIHByb2R1Y3Rpb24sCml0IGlzIGJlaW5nIGR1cGxp
Y2F0ZWQgaW4gc3lzZnMuCgpUaGlzIGluZm9ybWF0aW9uIGlzIGludGVuZGVkIHRvIGhlbHAgd2l0
aCByb290LWNhdXNpbmcKbG93LW1lbW9yeSBraWxscyBhbmQgdGhlIGRlYnVnZ2luZy9hbmFseXNp
cyBvZiBvdGhlciBtZW1vcnktcmVsYXRlZCBpc3N1ZXMuCgpJdCB3aWxsIGFsc28gYmUgdXNlZCB0
byBkZXJpdmUgRE1BLUJVRgpwZXItZXhwb3J0ZXIgc3RhdHMgYW5kIHBlci1kZXZpY2UgdXNhZ2Ug
c3RhdHMgZm9yIEFuZHJvaWQgQnVnIHJlcG9ydHMuCgpbMV06IGh0dHBzOi8vbG9yZS5rZXJuZWwu
b3JnL3BhdGNod29yay9wYXRjaC8xMDg4NzkxLwoKU2lnbmVkLW9mZi1ieTogSHJpZHlhIFZhbHNh
cmFqdSA8aHJpZHlhQGdvb2dsZS5jb20+Ci0tLQogRG9jdW1lbnRhdGlvbi9BQkkvdGVzdGluZy9z
eXNmcy1rZXJuZWwtZG1hYnVmIHwgIDMyICsrKysKIGRyaXZlcnMvZG1hLWJ1Zi9LY29uZmlnICAg
ICAgICAgICAgICAgICAgICAgICB8ICAxMSArKwogZHJpdmVycy9kbWEtYnVmL01ha2VmaWxlICAg
ICAgICAgICAgICAgICAgICAgIHwgICAxICsKIGRyaXZlcnMvZG1hLWJ1Zi9kbWEtYnVmLXN5c2Zz
LXN0YXRzLmMgICAgICAgICB8IDE2MiArKysrKysrKysrKysrKysrKysKIGRyaXZlcnMvZG1hLWJ1
Zi9kbWEtYnVmLXN5c2ZzLXN0YXRzLmggICAgICAgICB8ICAzNyArKysrCiBkcml2ZXJzL2RtYS1i
dWYvZG1hLWJ1Zi5jICAgICAgICAgICAgICAgICAgICAgfCAgMjkgKysrKwogaW5jbHVkZS9saW51
eC9kbWEtYnVmLmggICAgICAgICAgICAgICAgICAgICAgIHwgIDEzICsrCiA3IGZpbGVzIGNoYW5n
ZWQsIDI4NSBpbnNlcnRpb25zKCspCiBjcmVhdGUgbW9kZSAxMDA2NDQgRG9jdW1lbnRhdGlvbi9B
QkkvdGVzdGluZy9zeXNmcy1rZXJuZWwtZG1hYnVmCiBjcmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVy
cy9kbWEtYnVmL2RtYS1idWYtc3lzZnMtc3RhdHMuYwogY3JlYXRlIG1vZGUgMTAwNjQ0IGRyaXZl
cnMvZG1hLWJ1Zi9kbWEtYnVmLXN5c2ZzLXN0YXRzLmgKCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0
aW9uL0FCSS90ZXN0aW5nL3N5c2ZzLWtlcm5lbC1kbWFidWYgYi9Eb2N1bWVudGF0aW9uL0FCSS90
ZXN0aW5nL3N5c2ZzLWtlcm5lbC1kbWFidWYKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAw
MDAwMDAwMDAwLi4wMmQ0MDdkNTdhYWEKLS0tIC9kZXYvbnVsbAorKysgYi9Eb2N1bWVudGF0aW9u
L0FCSS90ZXN0aW5nL3N5c2ZzLWtlcm5lbC1kbWFidWYKQEAgLTAsMCArMSwzMiBAQAorV2hhdDoJ
CS9zeXMva2VybmVsL2RtYWJ1ZgorRGF0ZToJCU5vdmVtYmVyIDIwMjAKK0tlcm5lbFZlcnNpb246
CXY1LjExCitDb250YWN0OglIcmlkeWEgVmFsc2FyYWp1IDxocmlkeWFAZ29vZ2xlLmNvbT4KK0Rl
c2NyaXB0aW9uOglUaGUgL3N5cy9rZXJuZWwvZG1hYnVmIGRpcmVjdG9yeSBjb250YWlucyBhCisJ
CXNuYXBzaG90IG9mIHRoZSBpbnRlcm5hbCBzdGF0ZSBvZiBldmVyeSBETUEtQlVGLgorCQkvc3lz
L2tlcm5lbC9kbWFidWYvPGlub2RlX251bWJlcj4gd2lsbCBjb250YWluIHRoZQorCQlzdGF0aXN0
aWNzIGZvciB0aGUgRE1BLUJVRiB3aXRoIHRoZSB1bmlxdWUgaW5vZGUgbnVtYmVyCisJCTxpbm9k
ZV9udW1iZXI+CitVc2VyczoJCWtlcm5lbCBtZW1vcnkgdHVuaW5nL2RlYnVnZ2luZyB0b29scwor
CitXaGF0OgkJL3N5cy9rZXJuZWwvZG1hYnVmLzxpbm9kZV9udW1iZXI+L2V4cG9ydGVyX25hbWUK
K0RhdGU6CQlOb3ZlbWJlciAyMDIwCitLZXJuZWxWZXJzaW9uOgl2NS4xMQorQ29udGFjdDoJSHJp
ZHlhIFZhbHNhcmFqdSA8aHJpZHlhQGdvb2dsZS5jb20+CitEZXNjcmlwdGlvbjoJVGhpcyBmaWxl
IGlzIHJlYWQtb25seSBhbmQgY29udGFpbnMgdGhlIG5hbWUgb2YgdGhlIGV4cG9ydGVyIG9mCisJ
CXRoZSBETUEtQlVGLgorCitXaGF0OgkJL3N5cy9rZXJuZWwvZG1hYnVmLzxpbm9kZV9udW1iZXI+
L3NpemUKK0RhdDoJCU5vdmVtYmVyIDIwMjAKK0tlcm5lbFZlcnNpb246CXY1LjExCitDb250YWN0
OglIcmlkeWEgVmFsc2FyYWp1IDxocmlkeWFAZ29vZ2xlLmNvbT4KK0Rlc2NyaXB0aW9uOglUaGlz
IGZpbGUgaXMgcmVhZC1vbmx5IGFuZCBzcGVjaWZpZXMgdGhlIHNpemUgb2YgdGhlIERNQS1CVUYg
aW4KKwkJYnl0ZXMuCisKK1doYXQ6CQkvc3lzL2tlcm5lbC9kbWFidWYvPGlub2RlX251bWJlcj4v
ZGV2X21hcF9pbmZvCitEYXQ6CQlOb3ZlbWJlciAyMDIwCitLZXJuZWxWZXJzaW9uOgl2NS4xMQor
Q29udGFjdDoJSHJpZHlhIFZhbHNhcmFqdSA8aHJpZHlhQGdvb2dsZS5jb20+CitEZXNjcmlwdGlv
bjoJVGhpcyBmaWxlIGlzIHJlYWQtb25seSBhbmQgbGlzdHMgdGhlIG5hbWUgb2YgZGV2aWNlcyBj
dXJyZW50bHkKKwkJbWFwcGluZyB0aGUgRE1BLUJVRiBpbiBhIHNwYWNlLXNlcGFyYXRlZCBmb3Jt
YXQuCisKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZG1hLWJ1Zi9LY29uZmlnIGIvZHJpdmVycy9kbWEt
YnVmL0tjb25maWcKaW5kZXggNGY4MjI0YTZhYzk1Li4yZmVkMjZmMTQ1NDggMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZG1hLWJ1Zi9LY29uZmlnCisrKyBiL2RyaXZlcnMvZG1hLWJ1Zi9LY29uZmlnCkBA
IC02NCw2ICs2NCwxNyBAQCBtZW51Y29uZmlnIERNQUJVRl9IRUFQUwogCSAgYWxsb3dzIHVzZXJz
cGFjZSB0byBhbGxvY2F0ZSBkbWEtYnVmcyB0aGF0IGNhbiBiZSBzaGFyZWQKIAkgIGJldHdlZW4g
ZHJpdmVycy4KIAorbWVudWNvbmZpZyBETUFCVUZfU1lTRlNfU1RBVFMKKwlib29sICJETUEtQlVG
IHN5c2ZzIHN0YXRpc3RpY3MiCisJc2VsZWN0IERNQV9TSEFSRURfQlVGRkVSCisJaGVscAorCSAg
IENob29zZSB0aGlzIG9wdGlvbiB0byBlbmFibGUgRE1BLUJVRiBzeXNmcyBzdGF0aXN0aWNzCisJ
ICAgaW4gbG9jYXRpb24gL3N5cy9rZXJuZWwvZG1hYnVmLgorCisJICAgL3N5cy9rZXJuZWwvZG1h
YnVmLzxpbm9kZV9udW1iZXI+IHdpbGwgY29udGFpbgorCSAgIHN0YXRpc3RpY3MgZm9yIHRoZSBE
TUEtQlVGIHdpdGggdGhlIHVuaXF1ZSBpbm9kZSBudW1iZXIKKwkgICA8aW5vZGVfbnVtYmVyPi4K
Kwogc291cmNlICJkcml2ZXJzL2RtYS1idWYvaGVhcHMvS2NvbmZpZyIKIAogZW5kbWVudQpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9kbWEtYnVmL01ha2VmaWxlIGIvZHJpdmVycy9kbWEtYnVmL01ha2Vm
aWxlCmluZGV4IDk5NWUwNWY2MDlmZi4uNDBkODFmMjNjYWNmIDEwMDY0NAotLS0gYS9kcml2ZXJz
L2RtYS1idWYvTWFrZWZpbGUKKysrIGIvZHJpdmVycy9kbWEtYnVmL01ha2VmaWxlCkBAIC02LDYg
KzYsNyBAQCBvYmotJChDT05GSUdfRE1BQlVGX0hFQVBTKQkrPSBoZWFwcy8KIG9iai0kKENPTkZJ
R19TWU5DX0ZJTEUpCQkrPSBzeW5jX2ZpbGUubwogb2JqLSQoQ09ORklHX1NXX1NZTkMpCQkrPSBz
d19zeW5jLm8gc3luY19kZWJ1Zy5vCiBvYmotJChDT05GSUdfVURNQUJVRikJCSs9IHVkbWFidWYu
bworb2JqLSQoQ09ORklHX0RNQUJVRl9TWVNGU19TVEFUUykgKz0gZG1hLWJ1Zi1zeXNmcy1zdGF0
cy5vCiAKIGRtYWJ1Zl9zZWxmdGVzdHMteSA6PSBcCiAJc2VsZnRlc3QubyBcCmRpZmYgLS1naXQg
YS9kcml2ZXJzL2RtYS1idWYvZG1hLWJ1Zi1zeXNmcy1zdGF0cy5jIGIvZHJpdmVycy9kbWEtYnVm
L2RtYS1idWYtc3lzZnMtc3RhdHMuYwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAw
MDAwMDAuLmJjYmVmODFlMGE1ZgotLS0gL2Rldi9udWxsCisrKyBiL2RyaXZlcnMvZG1hLWJ1Zi9k
bWEtYnVmLXN5c2ZzLXN0YXRzLmMKQEAgLTAsMCArMSwxNjIgQEAKKy8vIFNQRFgtTGljZW5zZS1J
ZGVudGlmaWVyOiBHUEwtMi4wLW9ubHkKKworCisjaW5jbHVkZSA8bGludXgvZG1hLWJ1Zi5oPgor
I2luY2x1ZGUgPGxpbnV4L2RtYS1yZXN2Lmg+CisjaW5jbHVkZSA8bGludXgva29iamVjdC5oPgor
I2luY2x1ZGUgPGxpbnV4L3ByaW50ay5oPgorI2luY2x1ZGUgPGxpbnV4L3NsYWIuaD4KKyNpbmNs
dWRlIDxsaW51eC9zeXNmcy5oPgorCisjZGVmaW5lIHRvX2RtYV9idWZfZW50cnlfZnJvbV9rb2Jq
KHgpIGNvbnRhaW5lcl9vZih4LCBzdHJ1Y3QgZG1hX2J1Zl9zeXNmc19lbnRyeSwga29iaikKKwor
c3RydWN0IGRtYV9idWZfc3RhdHNfYXR0cmlidXRlIHsKKwlzdHJ1Y3QgYXR0cmlidXRlIGF0dHI7
CisJc3NpemVfdCAoKnNob3cpKHN0cnVjdCBkbWFfYnVmICpkbWFidWYsCisJCQlzdHJ1Y3QgZG1h
X2J1Zl9zdGF0c19hdHRyaWJ1dGUgKmF0dHIsIGNoYXIgKmJ1Zik7Cit9OworI2RlZmluZSB0b19k
bWFfYnVmX3N0YXRzX2F0dHIoeCkgY29udGFpbmVyX29mKHgsIHN0cnVjdCBkbWFfYnVmX3N0YXRz
X2F0dHJpYnV0ZSwgYXR0cikKKworc3RhdGljIHNzaXplX3QgZG1hX2J1Zl9zdGF0c19hdHRyaWJ1
dGVfc2hvdyhzdHJ1Y3Qga29iamVjdCAqa29iaiwKKwkJCQkJICAgIHN0cnVjdCBhdHRyaWJ1dGUg
KmF0dHIsCisJCQkJCSAgICBjaGFyICpidWYpCit7CisJc3RydWN0IGRtYV9idWZfc3RhdHNfYXR0
cmlidXRlICphdHRyaWJ1dGU7CisJc3RydWN0IGRtYV9idWZfc3lzZnNfZW50cnkgKnN5c2ZzX2Vu
dHJ5OworCXN0cnVjdCBkbWFfYnVmICpkbWFidWY7CisKKwlhdHRyaWJ1dGUgPSB0b19kbWFfYnVm
X3N0YXRzX2F0dHIoYXR0cik7CisJc3lzZnNfZW50cnkgPSB0b19kbWFfYnVmX2VudHJ5X2Zyb21f
a29iaihrb2JqKTsKKwlkbWFidWYgPSBzeXNmc19lbnRyeS0+ZG1hYnVmOworCisJaWYgKCFkbWFi
dWYgfHwgIWF0dHJpYnV0ZS0+c2hvdykKKwkJcmV0dXJuIC1FSU87CisKKwlyZXR1cm4gYXR0cmli
dXRlLT5zaG93KGRtYWJ1ZiwgYXR0cmlidXRlLCBidWYpOworfQorCitzdGF0aWMgY29uc3Qgc3Ry
dWN0IHN5c2ZzX29wcyBkbWFfYnVmX3N0YXRzX3N5c2ZzX29wcyA9IHsKKwkuc2hvdyA9IGRtYV9i
dWZfc3RhdHNfYXR0cmlidXRlX3Nob3csCit9OworCitzdGF0aWMgc3NpemVfdCBleHBvcnRlcl9u
YW1lX3Nob3coc3RydWN0IGRtYV9idWYgKmRtYWJ1ZiwKKwkJCQkgIHN0cnVjdCBkbWFfYnVmX3N0
YXRzX2F0dHJpYnV0ZSAqYXR0ciwKKwkJCQkgIGNoYXIgKmJ1ZikKK3sKKwlyZXR1cm4gc3lzZnNf
ZW1pdChidWYsICIlc1xuIiwgZG1hYnVmLT5leHBfbmFtZSk7Cit9CisKK3N0YXRpYyBzc2l6ZV90
IHNpemVfc2hvdyhzdHJ1Y3QgZG1hX2J1ZiAqZG1hYnVmLAorCQkJIHN0cnVjdCBkbWFfYnVmX3N0
YXRzX2F0dHJpYnV0ZSAqYXR0ciwKKwkJCSBjaGFyICpidWYpCit7CisJcmV0dXJuIHN5c2ZzX2Vt
aXQoYnVmLCAiJXp1XG4iLCBkbWFidWYtPnNpemUpOworfQorCitzdGF0aWMgc3NpemVfdCBkZXZf
bWFwX2luZm9fc2hvdyhzdHJ1Y3QgZG1hX2J1ZiAqZG1hYnVmLAorCQkJCSBzdHJ1Y3QgZG1hX2J1
Zl9zdGF0c19hdHRyaWJ1dGUgKmF0dHIsCisJCQkJIGNoYXIgKmJ1ZikKK3sKKwlzc2l6ZV90IHJl
dDsKKwlzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2htZW50ICphdHRhY2htZW50OworCisJcmV0ID0gZG1h
X3Jlc3ZfbG9ja19pbnRlcnJ1cHRpYmxlKGRtYWJ1Zi0+cmVzdiwgTlVMTCk7CisJaWYgKHJldCkK
KwkJcmV0dXJuIHJldDsKKworCWxpc3RfZm9yX2VhY2hfZW50cnkoYXR0YWNobWVudCwgJmRtYWJ1
Zi0+YXR0YWNobWVudHMsIG5vZGUpIHsKKwkJaWYgKGF0dGFjaG1lbnQtPm1hcF9jb3VudGVyKSB7
CisJCQlyZXQgKz0gc3lzZnNfZW1pdF9hdChidWYsIHJldCwgIiVzICIsCisJCQkJCSAgICAgZGV2
X25hbWUoYXR0YWNobWVudC0+ZGV2KSk7CisJCX0KKwl9CisJZG1hX3Jlc3ZfdW5sb2NrKGRtYWJ1
Zi0+cmVzdik7CisKKwlyZXQgKz0gc3lzZnNfZW1pdF9hdChidWYsIHJldCwgIlxuIik7CisJcmV0
dXJuIHJldDsKK30KKworc3RhdGljIHN0cnVjdCBkbWFfYnVmX3N0YXRzX2F0dHJpYnV0ZSBleHBv
cnRlcl9uYW1lX2F0dHJpYnV0ZSA9CisJX19BVFRSX1JPKGV4cG9ydGVyX25hbWUpOworc3RhdGlj
IHN0cnVjdCBkbWFfYnVmX3N0YXRzX2F0dHJpYnV0ZSBzaXplX2F0dHJpYnV0ZSA9IF9fQVRUUl9S
TyhzaXplKTsKK3N0YXRpYyBzdHJ1Y3QgZG1hX2J1Zl9zdGF0c19hdHRyaWJ1dGUgZGV2X21hcF9p
bmZvX2F0dHJpYnV0ZSA9CisJX19BVFRSX1JPKGRldl9tYXBfaW5mbyk7CisKK3N0YXRpYyBzdHJ1
Y3QgYXR0cmlidXRlICpkbWFfYnVmX3N0YXRzX2RlZmF1bHRfYXR0cnNbXSA9IHsKKwkmZXhwb3J0
ZXJfbmFtZV9hdHRyaWJ1dGUuYXR0ciwKKwkmc2l6ZV9hdHRyaWJ1dGUuYXR0ciwKKwkmZGV2X21h
cF9pbmZvX2F0dHJpYnV0ZS5hdHRyLAorCU5VTEwsCit9OworQVRUUklCVVRFX0dST1VQUyhkbWFf
YnVmX3N0YXRzX2RlZmF1bHQpOworCitzdGF0aWMgdm9pZCBkbWFfYnVmX3N5c2ZzX3JlbGVhc2Uo
c3RydWN0IGtvYmplY3QgKmtvYmopCit7CisJc3RydWN0IGRtYV9idWZfc3lzZnNfZW50cnkgKnN5
c2ZzX2VudHJ5OworCisJc3lzZnNfZW50cnkgPSB0b19kbWFfYnVmX2VudHJ5X2Zyb21fa29iaihr
b2JqKTsKKwlrZnJlZShzeXNmc19lbnRyeSk7Cit9CisKK3N0YXRpYyBzdHJ1Y3Qga29ial90eXBl
IGRtYV9idWZfa3R5cGUgPSB7CisJLnN5c2ZzX29wcyA9ICZkbWFfYnVmX3N0YXRzX3N5c2ZzX29w
cywKKwkucmVsZWFzZSA9IGRtYV9idWZfc3lzZnNfcmVsZWFzZSwKKwkuZGVmYXVsdF9ncm91cHMg
PSBkbWFfYnVmX3N0YXRzX2RlZmF1bHRfZ3JvdXBzLAorfTsKKwordm9pZCBkbWFfYnVmX3N5c2Zz
X2ZyZWUoc3RydWN0IGRtYV9idWYgKmRtYWJ1ZikKK3sKKwlzdHJ1Y3QgZG1hX2J1Zl9zeXNmc19l
bnRyeSAqc3lzZnNfZW50cnk7CisKKwlzeXNmc19lbnRyeSA9IGRtYWJ1Zi0+c3lzZnNfZW50cnk7
CisJaWYgKCFzeXNmc19lbnRyeSkKKwkJcmV0dXJuOworCisJa29iamVjdF9kZWwoJnN5c2ZzX2Vu
dHJ5LT5rb2JqKTsKKwlrb2JqZWN0X3B1dCgmc3lzZnNfZW50cnktPmtvYmopOworfQorCitzdGF0
aWMgc3RydWN0IGtzZXQgKmRtYV9idWZfc3RhdHNfa3NldDsKK2ludCBkbWFfYnVmX2luaXRfc3lz
ZnNfc3RhdGlzdGljcyh2b2lkKQoreworCWRtYV9idWZfc3RhdHNfa3NldCA9IGtzZXRfY3JlYXRl
X2FuZF9hZGQoImRtYWJ1ZiIsIE5VTEwsIGtlcm5lbF9rb2JqKTsKKwlpZiAoIWRtYV9idWZfc3Rh
dHNfa3NldCkKKwkJcmV0dXJuIC1FTk9NRU07CisKKwlyZXR1cm4gMDsKK30KKwordm9pZCBkbWFf
YnVmX3VuaW5pdF9zeXNmc19zdGF0aXN0aWNzKHZvaWQpCit7CisJa3NldF91bnJlZ2lzdGVyKGRt
YV9idWZfc3RhdHNfa3NldCk7Cit9CisKK2ludCBkbWFfYnVmX2luaXRfc3RhdHNfa29iaihzdHJ1
Y3QgZG1hX2J1ZiAqZG1hYnVmKQoreworCXN0cnVjdCBkbWFfYnVmX3N5c2ZzX2VudHJ5ICpzeXNm
c19lbnRyeTsKKwlpbnQgcmV0OworCisJaWYgKCFkbWFidWYgfHwgIWRtYWJ1Zi0+ZmlsZSkKKwkJ
cmV0dXJuIC1FSU5WQUw7CisKKwlpZiAoIWRtYWJ1Zi0+ZXhwX25hbWUpIHsKKwkJcHJfZXJyKCJl
eHBvcnRlciBuYW1lIG11c3Qgbm90IGJlIGVtcHR5IGlmIHN0YXRzIG5lZWRlZFxuIik7CisJCXJl
dHVybiAtRUlOVkFMOworCX0KKworCXN5c2ZzX2VudHJ5ID0ga3phbGxvYyhzaXplb2Yoc3RydWN0
IGRtYV9idWZfc3lzZnNfZW50cnkpLCBHRlBfS0VSTkVMKTsKKwlpZiAoIXN5c2ZzX2VudHJ5KQor
CQlyZXR1cm4gLUVOT01FTTsKKworCXN5c2ZzX2VudHJ5LT5rb2JqLmtzZXQgPSBkbWFfYnVmX3N0
YXRzX2tzZXQ7CisJc3lzZnNfZW50cnktPmRtYWJ1ZiA9IGRtYWJ1ZjsKKworCWRtYWJ1Zi0+c3lz
ZnNfZW50cnkgPSBzeXNmc19lbnRyeTsKKworCXJldCA9IGtvYmplY3RfaW5pdF9hbmRfYWRkKCZz
eXNmc19lbnRyeS0+a29iaiwgJmRtYV9idWZfa3R5cGUsIE5VTEwsCisJCQkJICAgIiVsdSIsIGZp
bGVfaW5vZGUoZG1hYnVmLT5maWxlKS0+aV9pbm8pOworCWlmIChyZXQpCisJCWtvYmplY3RfcHV0
KCZzeXNmc19lbnRyeS0+a29iaik7CisKKwlyZXR1cm4gcmV0OworfQpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9kbWEtYnVmL2RtYS1idWYtc3lzZnMtc3RhdHMuaCBiL2RyaXZlcnMvZG1hLWJ1Zi9kbWEt
YnVmLXN5c2ZzLXN0YXRzLmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAw
Li40MmZhZTdkMWIxMWYKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2ZXJzL2RtYS1idWYvZG1hLWJ1
Zi1zeXNmcy1zdGF0cy5oCkBAIC0wLDAgKzEsMzcgQEAKKy8qIFNQRFgtTGljZW5zZS1JZGVudGlm
aWVyOiBHUEwtMi4wLW9ubHkgKi8KKworI2lmbmRlZiBfRE1BX0JVRl9TWVNGU19TVEFUU19ICisj
ZGVmaW5lIF9ETUFfQlVGX1NZU0ZTX1NUQVRTX0gKKworI2lmZGVmIENPTkZJR19ETUFCVUZfU1lT
RlNfU1RBVFMKKworaW50IGRtYV9idWZfaW5pdF9zeXNmc19zdGF0aXN0aWNzKHZvaWQpOwordm9p
ZCBkbWFfYnVmX3VuaW5pdF9zeXNmc19zdGF0aXN0aWNzKHZvaWQpOworCitpbnQgZG1hX2J1Zl9p
bml0X3N0YXRzX2tvYmooc3RydWN0IGRtYV9idWYgKmRtYWJ1Zik7CitzdGF0aWMgaW5saW5lIHZv
aWQgZG1hX2J1Zl91cGRhdGVfYXR0YWNobWVudF9tYXBfY291bnQoc3RydWN0IGRtYV9idWZfYXR0
YWNobWVudCAqYXR0YWNoLAorCQkJCQkJICAgICAgIGludCBkZWx0YSkKK3sKKwlhdHRhY2gtPm1h
cF9jb3VudGVyICs9IGRlbHRhOworfQordm9pZCBkbWFfYnVmX3N5c2ZzX2ZyZWUoc3RydWN0IGRt
YV9idWYgKmRtYWJ1Zik7CisKKyNlbHNlCisKK3N0YXRpYyBpbmxpbmUgaW50IGRtYV9idWZfaW5p
dF9zeXNmc19zdGF0aXN0aWNzKHZvaWQpCit7CisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbmxp
bmUgdm9pZCBkbWFfYnVmX3VuaW5pdF9zeXNmc19zdGF0aXN0aWNzKHZvaWQpIHt9CisKK3N0YXRp
YyBpbmxpbmUgaW50IGRtYV9idWZfaW5pdF9zdGF0c19rb2JqKHN0cnVjdCBkbWFfYnVmICpkbWFi
dWYpCit7CisJcmV0dXJuIDA7Cit9CitzdGF0aWMgaW5saW5lIHZvaWQgZG1hX2J1Zl9zeXNmc19m
cmVlKHN0cnVjdCBkbWFfYnVmICpkbWFidWYpIHt9CitzdGF0aWMgaW5saW5lIHZvaWQgZG1hX2J1
Zl91cGRhdGVfYXR0YWNobWVudF9tYXBfY291bnQoc3RydWN0IGRtYV9idWZfYXR0YWNobWVudCAq
YXR0YWNoLAorCQkJCQkJICAgICAgIGludCBkZWx0YSkge30KKworI2VuZGlmCisjZW5kaWYgLy8g
X0RNQV9CVUZfU1lTRlNfU1RBVFNfSApkaWZmIC0tZ2l0IGEvZHJpdmVycy9kbWEtYnVmL2RtYS1i
dWYuYyBiL2RyaXZlcnMvZG1hLWJ1Zi9kbWEtYnVmLmMKaW5kZXggZTYzNjg0ZDRjZDkwLi5lOTNk
ZjAwNjliZjggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZG1hLWJ1Zi9kbWEtYnVmLmMKKysrIGIvZHJp
dmVycy9kbWEtYnVmL2RtYS1idWYuYwpAQCAtMjksNiArMjksOCBAQAogI2luY2x1ZGUgPHVhcGkv
bGludXgvZG1hLWJ1Zi5oPgogI2luY2x1ZGUgPHVhcGkvbGludXgvbWFnaWMuaD4KIAorI2luY2x1
ZGUgImRtYS1idWYtc3lzZnMtc3RhdHMuaCIKKwogc3RhdGljIGlubGluZSBpbnQgaXNfZG1hX2J1
Zl9maWxlKHN0cnVjdCBmaWxlICopOwogCiBzdHJ1Y3QgZG1hX2J1Zl9saXN0IHsKQEAgLTgzLDYg
Kzg1LDcgQEAgc3RhdGljIHZvaWQgZG1hX2J1Zl9yZWxlYXNlKHN0cnVjdCBkZW50cnkgKmRlbnRy
eSkKIAlpZiAoZG1hYnVmLT5yZXN2ID09IChzdHJ1Y3QgZG1hX3Jlc3YgKikmZG1hYnVmWzFdKQog
CQlkbWFfcmVzdl9maW5pKGRtYWJ1Zi0+cmVzdik7CiAKKwlkbWFfYnVmX3N5c2ZzX2ZyZWUoZG1h
YnVmKTsKIAltb2R1bGVfcHV0KGRtYWJ1Zi0+b3duZXIpOwogCWtmcmVlKGRtYWJ1Zi0+bmFtZSk7
CiAJa2ZyZWUoZG1hYnVmKTsKQEAgLTU2Niw2ICs1NjksMTAgQEAgc3RydWN0IGRtYV9idWYgKmRt
YV9idWZfZXhwb3J0KGNvbnN0IHN0cnVjdCBkbWFfYnVmX2V4cG9ydF9pbmZvICpleHBfaW5mbykK
IAlmaWxlLT5mX21vZGUgfD0gRk1PREVfTFNFRUs7CiAJZG1hYnVmLT5maWxlID0gZmlsZTsKIAor
CXJldCA9IGRtYV9idWZfaW5pdF9zdGF0c19rb2JqKGRtYWJ1Zik7CisJaWYgKHJldCkKKwkJZ290
byBlcnJfc3lzZnM7CisKIAltdXRleF9pbml0KCZkbWFidWYtPmxvY2spOwogCUlOSVRfTElTVF9I
RUFEKCZkbWFidWYtPmF0dGFjaG1lbnRzKTsKIApAQCAtNTc1LDYgKzU4MiwxNCBAQCBzdHJ1Y3Qg
ZG1hX2J1ZiAqZG1hX2J1Zl9leHBvcnQoY29uc3Qgc3RydWN0IGRtYV9idWZfZXhwb3J0X2luZm8g
KmV4cF9pbmZvKQogCiAJcmV0dXJuIGRtYWJ1ZjsKIAorZXJyX3N5c2ZzOgorCS8qCisJICogU2V0
IGZpbGUtPmZfcGF0aC5kZW50cnktPmRfZnNkYXRhIHRvIE5VTEwgc28gdGhhdCB3aGVuCisJICog
ZG1hX2J1Zl9yZWxlYXNlKCkgZ2V0cyBpbnZva2VkIGJ5IGRlbnRyeV9vcHMsIGl0IGV4aXRzCisJ
ICogZWFybHkgYmVmb3JlIGNhbGxpbmcgdGhlIHJlbGVhc2UoKSBkbWFfYnVmIG9wLgorCSAqLwor
CWZpbGUtPmZfcGF0aC5kZW50cnktPmRfZnNkYXRhID0gTlVMTDsKKwlmcHV0KGZpbGUpOwogZXJy
X2RtYWJ1ZjoKIAlrZnJlZShkbWFidWYpOwogZXJyX21vZHVsZToKQEAgLTczMiw2ICs3NDcsNyBA
QCBkbWFfYnVmX2R5bmFtaWNfYXR0YWNoKHN0cnVjdCBkbWFfYnVmICpkbWFidWYsIHN0cnVjdCBk
ZXZpY2UgKmRldiwKIAkJCWRtYV9yZXN2X3VubG9jayhhdHRhY2gtPmRtYWJ1Zi0+cmVzdik7CiAJ
CWF0dGFjaC0+c2d0ID0gc2d0OwogCQlhdHRhY2gtPmRpciA9IERNQV9CSURJUkVDVElPTkFMOwor
CQlkbWFfYnVmX3VwZGF0ZV9hdHRhY2htZW50X21hcF9jb3VudChhdHRhY2gsIDEgLyogZGVsdGEg
Ki8pOwogCX0KIAogCXJldHVybiBhdHRhY2g7CkBAIC03ODYsNiArODAyLDcgQEAgdm9pZCBkbWFf
YnVmX2RldGFjaChzdHJ1Y3QgZG1hX2J1ZiAqZG1hYnVmLCBzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2ht
ZW50ICphdHRhY2gpCiAJCQlkbWFfcmVzdl9sb2NrKGF0dGFjaC0+ZG1hYnVmLT5yZXN2LCBOVUxM
KTsKIAogCQlkbWFidWYtPm9wcy0+dW5tYXBfZG1hX2J1ZihhdHRhY2gsIGF0dGFjaC0+c2d0LCBh
dHRhY2gtPmRpcik7CisJCWRtYV9idWZfdXBkYXRlX2F0dGFjaG1lbnRfbWFwX2NvdW50KGF0dGFj
aCwgLTEgLyogZGVsdGEgKi8pOwogCiAJCWlmIChkbWFfYnVmX2lzX2R5bmFtaWMoYXR0YWNoLT5k
bWFidWYpKSB7CiAJCQlkbWFfYnVmX3VucGluKGF0dGFjaCk7CkBAIC05MjUsNiArOTQyLDkgQEAg
c3RydWN0IHNnX3RhYmxlICpkbWFfYnVmX21hcF9hdHRhY2htZW50KHN0cnVjdCBkbWFfYnVmX2F0
dGFjaG1lbnQgKmF0dGFjaCwKIAl9CiAjZW5kaWYgLyogQ09ORklHX0RNQV9BUElfREVCVUcgKi8K
IAorCWlmICghSVNfRVJSKHNnX3RhYmxlKSkKKwkJZG1hX2J1Zl91cGRhdGVfYXR0YWNobWVudF9t
YXBfY291bnQoYXR0YWNoLCAxIC8qIGRlbHRhICovKTsKKwogCXJldHVybiBzZ190YWJsZTsKIH0K
IEVYUE9SVF9TWU1CT0xfR1BMKGRtYV9idWZfbWFwX2F0dGFjaG1lbnQpOwpAQCAtOTYyLDYgKzk4
Miw4IEBAIHZvaWQgZG1hX2J1Zl91bm1hcF9hdHRhY2htZW50KHN0cnVjdCBkbWFfYnVmX2F0dGFj
aG1lbnQgKmF0dGFjaCwKIAlpZiAoZG1hX2J1Zl9pc19keW5hbWljKGF0dGFjaC0+ZG1hYnVmKSAm
JgogCSAgICAhSVNfRU5BQkxFRChDT05GSUdfRE1BQlVGX01PVkVfTk9USUZZKSkKIAkJZG1hX2J1
Zl91bnBpbihhdHRhY2gpOworCisJZG1hX2J1Zl91cGRhdGVfYXR0YWNobWVudF9tYXBfY291bnQo
YXR0YWNoLCAtMSAvKiBkZWx0YSAqLyk7CiB9CiBFWFBPUlRfU1lNQk9MX0dQTChkbWFfYnVmX3Vu
bWFwX2F0dGFjaG1lbnQpOwogCkBAIC0xMzk5LDYgKzE0MjEsMTIgQEAgc3RhdGljIGlubGluZSB2
b2lkIGRtYV9idWZfdW5pbml0X2RlYnVnZnModm9pZCkKIAogc3RhdGljIGludCBfX2luaXQgZG1h
X2J1Zl9pbml0KHZvaWQpCiB7CisJaW50IHJldDsKKworCXJldCA9IGRtYV9idWZfaW5pdF9zeXNm
c19zdGF0aXN0aWNzKCk7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsKKwogCWRtYV9idWZfbW50
ID0ga2Vybl9tb3VudCgmZG1hX2J1Zl9mc190eXBlKTsKIAlpZiAoSVNfRVJSKGRtYV9idWZfbW50
KSkKIAkJcmV0dXJuIFBUUl9FUlIoZG1hX2J1Zl9tbnQpOwpAQCAtMTQxNCw1ICsxNDQyLDYgQEAg
c3RhdGljIHZvaWQgX19leGl0IGRtYV9idWZfZGVpbml0KHZvaWQpCiB7CiAJZG1hX2J1Zl91bmlu
aXRfZGVidWdmcygpOwogCWtlcm5fdW5tb3VudChkbWFfYnVmX21udCk7CisJZG1hX2J1Zl91bmlu
aXRfc3lzZnNfc3RhdGlzdGljcygpOwogfQogX19leGl0Y2FsbChkbWFfYnVmX2RlaW5pdCk7CmRp
ZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L2RtYS1idWYuaCBiL2luY2x1ZGUvbGludXgvZG1hLWJ1
Zi5oCmluZGV4IGNmNzI2OTljYjJiYy4uZjVjYWIxM2FmZGZjIDEwMDY0NAotLS0gYS9pbmNsdWRl
L2xpbnV4L2RtYS1idWYuaAorKysgYi9pbmNsdWRlL2xpbnV4L2RtYS1idWYuaApAQCAtMjk0LDYg
KzI5NCw3IEBAIHN0cnVjdCBkbWFfYnVmX29wcyB7CiAgKiBAcG9sbDogZm9yIHVzZXJzcGFjZSBw
b2xsIHN1cHBvcnQKICAqIEBjYl9leGNsOiBmb3IgdXNlcnNwYWNlIHBvbGwgc3VwcG9ydAogICog
QGNiX3NoYXJlZDogZm9yIHVzZXJzcGFjZSBwb2xsIHN1cHBvcnQKKyAqIEBzeXNmc19lbnRyeTog
Zm9yIGV4cG9zaW5nIGluZm9ybWF0aW9uIGFib3V0IHRoaXMgYnVmZmVyIGluIHN5c2ZzCiAgKgog
ICogVGhpcyByZXByZXNlbnRzIGEgc2hhcmVkIGJ1ZmZlciwgY3JlYXRlZCBieSBjYWxsaW5nIGRt
YV9idWZfZXhwb3J0KCkuIFRoZQogICogdXNlcnNwYWNlIHJlcHJlc2VudGF0aW9uIGlzIGEgbm9y
bWFsIGZpbGUgZGVzY3JpcHRvciwgd2hpY2ggY2FuIGJlIGNyZWF0ZWQgYnkKQEAgLTMyOSw2ICsz
MzAsMTMgQEAgc3RydWN0IGRtYV9idWYgewogCiAJCV9fcG9sbF90IGFjdGl2ZTsKIAl9IGNiX2V4
Y2wsIGNiX3NoYXJlZDsKKyNpZmRlZiBDT05GSUdfRE1BQlVGX1NZU0ZTX1NUQVRTCisJLyogZm9y
IHN5c2ZzIHN0YXRzICovCisJc3RydWN0IGRtYV9idWZfc3lzZnNfZW50cnkgeworCQlzdHJ1Y3Qg
a29iamVjdCBrb2JqOworCQlzdHJ1Y3QgZG1hX2J1ZiAqZG1hYnVmOworCX0gKnN5c2ZzX2VudHJ5
OworI2VuZGlmCiB9OwogCiAvKioKQEAgLTM3OCw2ICszODYsOCBAQCBzdHJ1Y3QgZG1hX2J1Zl9h
dHRhY2hfb3BzIHsKICAqIEBpbXBvcnRlcl9vcHM6IGltcG9ydGVyIG9wZXJhdGlvbnMgZm9yIHRo
aXMgYXR0YWNobWVudCwgaWYgcHJvdmlkZWQKICAqIGRtYV9idWZfbWFwL3VubWFwX2F0dGFjaG1l
bnQoKSBtdXN0IGJlIGNhbGxlZCB3aXRoIHRoZSBkbWFfcmVzdiBsb2NrIGhlbGQuCiAgKiBAaW1w
b3J0ZXJfcHJpdjogaW1wb3J0ZXIgc3BlY2lmaWMgYXR0YWNobWVudCBkYXRhLgorICogQG1hcF9j
b3VudGVyOiBOdW1iZXIgb2YgdGltZXMgdGhlIGJ1ZmZlciBoYXMgYmVlbiBtYXBwZWQgdGhyb3Vn
aCB0aGlzCisgKiBkbWFfYnVmX21hcF9hdHRhY2htZW50LgogICoKICAqIFRoaXMgc3RydWN0dXJl
IGhvbGRzIHRoZSBhdHRhY2htZW50IGluZm9ybWF0aW9uIGJldHdlZW4gdGhlIGRtYV9idWYgYnVm
ZmVyCiAgKiBhbmQgaXRzIHVzZXIgZGV2aWNlKHMpLiBUaGUgbGlzdCBjb250YWlucyBvbmUgYXR0
YWNobWVudCBzdHJ1Y3QgcGVyIGRldmljZQpAQCAtMzk4LDYgKzQwOCw5IEBAIHN0cnVjdCBkbWFf
YnVmX2F0dGFjaG1lbnQgewogCWNvbnN0IHN0cnVjdCBkbWFfYnVmX2F0dGFjaF9vcHMgKmltcG9y
dGVyX29wczsKIAl2b2lkICppbXBvcnRlcl9wcml2OwogCXZvaWQgKnByaXY7CisjaWZkZWYgQ09O
RklHX0RNQUJVRl9TWVNGU19TVEFUUworCXVuc2lnbmVkIGludCBtYXBfY291bnRlcjsKKyNlbmRp
ZgogfTsKIAogLyoqCi0tIAoyLjI5LjIuNTc2LmdhM2ZjNDQ2ZDg0LWdvb2cKCl9fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkxpbmFyby1tbS1zaWcgbWFpbGlu
ZyBsaXN0CkxpbmFyby1tbS1zaWdAbGlzdHMubGluYXJvLm9yZwpodHRwczovL2xpc3RzLmxpbmFy
by5vcmcvbWFpbG1hbi9saXN0aW5mby9saW5hcm8tbW0tc2lnCg==
