Return-Path: <linaro-mm-sig-bounces@lists.linaro.org>
X-Original-To: lists+linaro-mm-sig@lfdr.de
Delivered-To: lists+linaro-mm-sig@lfdr.de
Received: from lists.linaro.org (lists.linaro.org [107.22.173.205])
	by mail.lfdr.de (Postfix) with ESMTPS id 85C6917074C
	for <lists+linaro-mm-sig@lfdr.de>; Wed, 26 Feb 2020 19:11:09 +0100 (CET)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 5AA9860865
	for <lists+linaro-mm-sig@lfdr.de>; Wed, 26 Feb 2020 18:11:08 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
	id 4C485619A9; Wed, 26 Feb 2020 18:11:08 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on lists.linaro.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.9 required=5.0 tests=BAYES_00,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_NONE,RCVD_IN_MSPIKE_H3,RCVD_IN_MSPIKE_WL,SPF_HELO_NONE
	autolearn=disabled version=3.4.2
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 7A446619AF;
	Wed, 26 Feb 2020 18:10:03 +0000 (UTC)
X-Original-To: linaro-mm-sig@lists.linaro.org
Delivered-To: linaro-mm-sig@lists.linaro.org
Received: from lists.linaro.org (localhost [127.0.0.1])
 by lists.linaro.org (Postfix) with ESMTP id 95942615AD
 for <linaro-mm-sig@lists.linaro.org>; Wed, 26 Feb 2020 18:10:00 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
 id 7E6DA619A9; Wed, 26 Feb 2020 18:10:00 +0000 (UTC)
Received: from mail-pj1-f67.google.com (mail-pj1-f67.google.com
 [209.85.216.67])
 by lists.linaro.org (Postfix) with ESMTPS id D54D9615AD
 for <linaro-mm-sig@lists.linaro.org>; Wed, 26 Feb 2020 18:09:57 +0000 (UTC)
Received: by mail-pj1-f67.google.com with SMTP id e9so1572468pjr.4
 for <linaro-mm-sig@lists.linaro.org>; Wed, 26 Feb 2020 10:09:57 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=DPo4JQy+OIw8xQQ5dONz5jNXosQ5NdHl3oIG8inea88=;
 b=geVpYdYgIjeqYEl8aIo5kLAX2TVvFxJwma10/48wIzGdplmrpgaWtoqXProky+zOgE
 ugnue70dXZyLiUEnZQ/oQmX1pZXRlY2EI5LWHgbhDZTTR1q8te+qrnDRIkCqO9xktkX/
 r8ZSnuS74iy0CE0DrkA3kSugc7qLNiqrlcLjcWjQtzcVcqOH84gpoxr4j0bSN/SSf6ir
 CmfYKBFM/Y89yu1hC9RTzIdec1i2gvu/NQrCZsnTTXxpkxIQBTKu1xvXhGi0oOcy6u9g
 ChzZIPIXyvEnQLW8i95mXJGzEEHwnIKKr3iI0ySszQyTjj71aJK0EMFMUWDbdK3SwvGF
 gipw==
X-Gm-Message-State: APjAAAXYdIThA04eRAGu3rBWGb6iLqZp52hRv3TXkvDV6R8qsriVrIkj
 x3V05XzS9yL+w/BENqlBY3bPHg==
X-Google-Smtp-Source: APXvYqx8VkS+pyxrM58pE80qFj0YQFKGVg36AofBUVGou98pxOFSrPrfE6VysWF0KBndwSSCJukJ4w==
X-Received: by 2002:a17:90a:868b:: with SMTP id
 p11mr358160pjn.60.1582740596700; 
 Wed, 26 Feb 2020 10:09:56 -0800 (PST)
Received: from omlet.com ([2605:6000:1026:c273::ce4])
 by smtp.gmail.com with ESMTPSA id h7sm4059498pfq.36.2020.02.26.10.09.54
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Wed, 26 Feb 2020 10:09:55 -0800 (PST)
From: Jason Ekstrand <jason@jlekstrand.net>
To: 
Date: Wed, 26 Feb 2020 12:09:35 -0600
Message-Id: <20200226180937.106875-1-jason@jlekstrand.net>
X-Mailer: git-send-email 2.24.1
In-Reply-To: <20200225235856.975366-1-jason@jlekstrand.net>
References: <20200225235856.975366-1-jason@jlekstrand.net>
MIME-Version: 1.0
X-Virus-Scanned: ClamAV using ClamSMTP
Cc: Chenbo Feng <fengc@google.com>, daniels@collabora.com, jajones@nvidia.com,
 bas@basnieuwenhuizen.nl, linux-kernel@vger.kernel.org,
 Greg Hackmann <ghackmann@google.com>, linaro-mm-sig@lists.linaro.org,
 hoegsberg@google.com, dri-devel@lists.freedesktop.org,
 Jason Ekstrand <jason@jlekstrand.net>, jessehall@google.com,
 airlied@redhat.com, christian.koenig@amd.com, linux-media@vger.kernel.org
Subject: [Linaro-mm-sig] [PATCH] RFC: dma-buf: Add an API for importing and
	exporting sync files (v2)
X-BeenThere: linaro-mm-sig@lists.linaro.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: "Unified memory management interest group."
 <linaro-mm-sig.lists.linaro.org>
List-Unsubscribe: <https://lists.linaro.org/mailman/options/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=unsubscribe>
List-Archive: <http://lists.linaro.org/pipermail/linaro-mm-sig/>
List-Post: <mailto:linaro-mm-sig@lists.linaro.org>
List-Help: <mailto:linaro-mm-sig-request@lists.linaro.org?subject=help>
List-Subscribe: <https://lists.linaro.org/mailman/listinfo/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linaro-mm-sig-bounces@lists.linaro.org
Sender: "Linaro-mm-sig" <linaro-mm-sig-bounces@lists.linaro.org>
X-Virus-Scanned: ClamAV using ClamSMTP

RXhwbGljaXQgc3luY2hyb25pemF0aW9uIGlzIHRoZSBmdXR1cmUuICBBdCBsZWFzdCwgdGhhdCBz
ZWVtcyB0byBiZSB3aGF0Cm1vc3QgdXNlcnNwYWNlIEFQSXMgYXJlIGFncmVlaW5nIG9uIGF0IHRo
aXMgcG9pbnQuICBIb3dldmVyLCBtb3N0IG9mIG91cgpMaW51eCBBUElzIChib3RoIHVzZXJzcGFj
ZSBhbmQga2VybmVsIFVBUEkpIGFyZSBjdXJyZW50bHkgYnVpbHQgYXJvdW5kCmltcGxpY2l0IHN5
bmNocm9uaXphdGlvbiB3aXRoIGRtYS1idWYuICBXaGlsZSB3b3JrIGlzIG9uZ29pbmcgdG8gY2hh
bmdlCm1hbnkgb2YgdGhlIHVzZXJzcGFjZSBBUElzIGFuZCBwcm90b2NvbHMgdG8gYW4gZXhwbGlj
aXQgc3luY2hyb25pemF0aW9uCm1vZGVsLCBzd2l0Y2hpbmcgb3ZlciBwaWVjZW1lYWwgaXMgZGlm
ZmljdWx0IGR1ZSB0byB0aGUgbnVtYmVyIG9mCnBvdGVudGlhbCBjb21wb25lbnRzIGludm9sdmVk
LiAgT24gdGhlIGtlcm5lbCBzaWRlLCBtYW55IGRyaXZlcnMgdXNlCmRtYS1idWYgaW5jbHVkaW5n
IEdQVSAoM0QvY29tcHV0ZSksIGRpc3BsYXksIHY0bCwgYW5kIG90aGVycy4gIEluCnVzZXJzcGFj
ZSwgd2UgaGF2ZSBYMTEsIHNldmVyYWwgV2F5bGFuZCBjb21wb3NpdG9ycywgM0QgZHJpdmVycywg
Y29tcHV0ZQpkcml2ZXJzIChPcGVuQ0wgZXRjLiksIG1lZGlhIGVuY29kZS9kZWNvZGUsIGFuZCB0
aGUgbGlzdCBnb2VzIG9uLgoKVGhpcyBwYXRjaCBwcm92aWRlcyBhIHBhdGggZm9yd2FyZCBieSBh
bGxvd2luZyB1c2Vyc3BhY2UgdG8gbWFudWFsbHkKbWFuYWdlIHRoZSBmZW5jZXMgYXR0YWNoZWQg
dG8gYSBkbWEtYnVmLiAgQWx0ZXJuYXRpdmVseSwgb25lIGNhbiB0aGluawpvZiB0aGlzIGFzIG1h
a2luZyBkbWEtYnVmJ3MgaW1wbGljaXQgc3luY2hyb25pemF0aW9uIHNpbXBseSBhIGNhcnJpZXIK
Zm9yIGFuIGV4cGxpY2l0IGZlbmNlLiAgVGhpcyBpcyBhY2NvbXBsaXNoZWQgYnkgYWRkaW5nIHR3
byBJT0NUTHMgdG8KZG1hLWJ1ZiBmb3IgaW1wb3J0aW5nIGFuZCBleHBvcnRpbmcgYSBzeW5jIGZp
bGUgdG8vZnJvbSB0aGUgZG1hLWJ1Zi4KVGhpcyB3YXkgYSB1c2Vyc3BhY2UgY29tcG9uZW50IHdo
aWNoIGlzIHVzZXMgZXhwbGljaXQgc3luY2hyb25pemF0aW9uLApzdWNoIGFzIGEgVnVsa2FuIGRy
aXZlciwgY2FuIG1hbnVhbGx5IHNldCB0aGUgd3JpdGUgZmVuY2Ugb24gYSBidWZmZXIKYmVmb3Jl
IGhhbmRpbmcgaXQgb2ZmIHRvIGFuIGltcGxpY2l0bHkgc3luY2hyb25pemVkIGNvbXBvbmVudCBz
dWNoIGFzIGEKV2F5bGFuZCBjb21wb3NpdG9yIG9yIHZpZGVvIGVuY29kZXIuICBJbiB0aGlzIHdh
eSwgZWFjaCBvZiB0aGUgZGlmZmVyZW50CmNvbXBvbmVudHMgY2FuIGJlIHVwZ3JhZGVkIHRvIGFu
IGV4cGxpY2l0IHN5bmNocm9uaXphdGlvbiBtb2RlbCBvbmUgYXQgYQp0aW1lIGFzIGxvbmcgYXMg
dGhlIHVzZXJzcGFjZSBwaWVjZXMgY29ubmVjdGluZyB0aGVtIGFyZSBhd2FyZSBvZiBpdCBhbmQK
aW1wb3J0L2V4cG9ydCBmZW5jZXMgYXQgdGhlIHJpZ2h0IHRpbWVzLgoKVGhlcmUgaXMgYSBwb3Rl
bnRpYWwgcmFjZSBjb25kaXRpb24gd2l0aCB0aGlzIEFQSSBpZiB1c2Vyc3BhY2UgaXMgbm90CmNh
cmVmdWwuICBBIHR5cGljYWwgdXNlIGNhc2UgZm9yIGltcGxpY2l0IHN5bmNocm9uaXphdGlvbiBp
cyB0byB3YWl0IGZvcgp0aGUgZG1hLWJ1ZiB0byBiZSByZWFkeSwgdXNlIGl0LCBhbmQgdGhlbiBz
aWduYWwgaXQgZm9yIHNvbWUgb3RoZXIKY29tcG9uZW50LiAgQmVjYXVzZSBhIHN5bmNfZmlsZSBj
YW5ub3QgYmUgY3JlYXRlZCB1bnRpbCBpdCBpcyBndWFyYW50ZWVkCnRvIGNvbXBsZXRlIGluIGZp
bml0ZSB0aW1lLCB1c2Vyc3BhY2UgY2FuIG9ubHkgc2lnbmFsIHRoZSBkbWEtYnVmIGFmdGVyCml0
IGhhcyBhbHJlYWR5IHN1Ym1pdHRlZCB0aGUgd29yayB3aGljaCB1c2VzIGl0IHRvIHRoZSBrZXJu
ZWwgYW5kIGhhcwpyZWNlaXZlZCBhIHN5bmNfZmlsZSBiYWNrLiAgVGhlcmUgaXMgbm8gd2F5IHRv
IGF0b21pY2FsbHkgc3VibWl0IGEKd2FpdC11c2Utc2lnbmFsIG9wZXJhdGlvbi4gIFRoaXMgaXMg
bm90LCBob3dldmVyLCByZWFsbHkgYSBwcm9ibGVtIHdpdGgKdGhpcyBBUEkgc28gbXVjaCBhcyBp
dCBpcyBhIHByb2JsZW0gd2l0aCBleHBsaWNpdCBzeW5jaHJvbml6YXRpb24KaXRzZWxmLiAgVGhl
IHdheSB0aGlzIGlzIHR5cGljYWxseSBoYW5kbGVkIGlzIHRvIGhhdmUgdmVyeSBleHBsaWNpdApv
d25lcnNoaXAgdHJhbnNmZXIgcG9pbnRzIGluIHRoZSBBUEkgb3IgcHJvdG9jb2wgd2hpY2ggZW5z
dXJlIHRoYXQgb25seQpvbmUgY29tcG9uZW50IGlzIHVzaW5nIGl0IGF0IGFueSBnaXZlbiB0aW1l
LiAgQm90aCBYMTEgKHZpYSB0aGUgUFJFU0VOVApleHRlbnNpb24pIGFuZCBXYXlsYW5kIHByb3Zp
ZGUgc3VjaCBvd25lcnNoaXAgdHJhbnNmZXIgcG9pbnRzIHZpYQpleHBsaWNpdCBwcmVzZW50IGFu
ZCBpZGxlIG1lc3NhZ2VzLgoKVGhlIGRlY2lzaW9uIHdhcyBpbnRlbnRpb25hbGx5IG1hZGUgaW4g
dGhpcyBwYXRjaCB0byBtYWtlIHRoZSBpbXBvcnQgYW5kCmV4cG9ydCBvcGVyYXRpb25zIElPQ1RM
cyBvbiB0aGUgZG1hLWJ1ZiBpdHNlbGYgcmF0aGVyIHRoYW4gYXMgYSBEUk0KSU9DVEwuICBUaGlz
IG1ha2VzIGl0IHRoZSBpbXBvcnQvZXhwb3J0IG9wZXJhdGlvbiB1bml2ZXJzYWwgYWNyb3NzIGFs
bApjb21wb25lbnRzIHdoaWNoIHVzZSBkbWEtYnVmIGluY2x1ZGluZyBHUFUsIGRpc3BsYXksIHY0
bCwgYW5kIG90aGVycy4KSXQgYWxzbyBtZWFucyB0aGF0IGEgdXNlcnNwYWNlIGNvbXBvbmVudCBj
YW4gZG8gdGhlIGltcG9ydC9leHBvcnQKd2l0aG91dCBhY2Nlc3MgdG8gdGhlIERSTSBmZCB3aGlj
aCBtYXkgYmUgdHJpY2t5IHRvIGdldCBpbiBjYXNlcyB3aGVyZQp0aGUgY2xpZW50IGNvbW11bmlj
YXRlcyB3aXRoIERSTSB2aWEgYSB1c2Vyc3BhY2UgQVBJIHN1Y2ggYXMgT3BlbkdMIG9yClZ1bGth
bi4gIEF0IGEgZnV0dXJlIGRhdGUgd2UgbWF5IGNob29zZSB0byBhZGQgZGlyZWN0IGltcG9ydC9l
eHBvcnQgQVBJcwp0byBjb21wb25lbnRzIHN1Y2ggYXMgZHJtX3N5bmNvYmogdG8gYXZvaWQgYWxs
b2NhdGluZyBhIGZpbGUgZGVzY3JpcHRvcgphbmQgZ29pbmcgdGhyb3VnaCB0d28gaW9jdGxzLiAg
SG93ZXZlciwgdGhhdCBzZWVtcyB0byBiZSBzb21ldGhpbmcgb2YgYQptaWNyby1vcHRpbWl6YXRp
b24gYXMgaW1wb3J0L2V4cG9ydCBvcGVyYXRpb25zIGFyZSBsaWtlbHkgdG8gaGFwcGVuIGF0IGEK
cmF0ZSBvZiBhIGZldyBwZXIgZnJhbWUgb2YgcmVuZGVyZWQgb3IgZGVjb2RlZCB2aWRlby4KCnYy
IChKYXNvbiBFa3N0cmFuZCk6CiAtIFVzZSBhIHdyYXBwZXIgZG1hX2ZlbmNlX2FycmF5IG9mIGFs
bCBmZW5jZXMgaW5jbHVkaW5nIHRoZSBuZXcgb25lCiAgIHdoZW4gaW1wb3J0aW5nIGFuIGV4Y2x1
c2l2ZSBmZW5jZS4KClNpZ25lZC1vZmYtYnk6IEphc29uIEVrc3RyYW5kIDxqYXNvbkBqbGVrc3Ry
YW5kLm5ldD4KLS0tCiBkcml2ZXJzL2RtYS1idWYvZG1hLWJ1Zi5jICAgIHwgMTYyICsrKysrKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysrCiBpbmNsdWRlL3VhcGkvbGludXgvZG1hLWJ1Zi5o
IHwgIDEzICsrLQogMiBmaWxlcyBjaGFuZ2VkLCAxNzMgaW5zZXJ0aW9ucygrKSwgMiBkZWxldGlv
bnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2RtYS1idWYvZG1hLWJ1Zi5jIGIvZHJpdmVycy9k
bWEtYnVmL2RtYS1idWYuYwppbmRleCBkNDA5Nzg1NmM4NmIuLjE2MmY5MGU4ODk2YiAxMDA2NDQK
LS0tIGEvZHJpdmVycy9kbWEtYnVmL2RtYS1idWYuYworKysgYi9kcml2ZXJzL2RtYS1idWYvZG1h
LWJ1Zi5jCkBAIC0yMCw2ICsyMCw3IEBACiAjaW5jbHVkZSA8bGludXgvZGVidWdmcy5oPgogI2lu
Y2x1ZGUgPGxpbnV4L21vZHVsZS5oPgogI2luY2x1ZGUgPGxpbnV4L3NlcV9maWxlLmg+CisjaW5j
bHVkZSA8bGludXgvc3luY19maWxlLmg+CiAjaW5jbHVkZSA8bGludXgvcG9sbC5oPgogI2luY2x1
ZGUgPGxpbnV4L2RtYS1yZXN2Lmg+CiAjaW5jbHVkZSA8bGludXgvbW0uaD4KQEAgLTM0OCw2ICsz
NDksMTYxIEBAIHN0YXRpYyBsb25nIGRtYV9idWZfc2V0X25hbWUoc3RydWN0IGRtYV9idWYgKmRt
YWJ1ZiwgY29uc3QgY2hhciBfX3VzZXIgKmJ1ZikKIAlyZXR1cm4gcmV0OwogfQogCisvKiBUaGlz
IGZ1bmN0aW9uIHRha2VzIGEgcmVmIHRvIGFkZF9mZW5jZSBvbiBzdWNjZXNzLiAgVGhlIGNhbGxl
ciBzdGlsbAorICogb3ducyBpdHMgcmVmIGFuZCBoYXMgdG8gZG1hX2ZlbmNlX3B1dCBpdC4KKyAq
Lworc3RhdGljIHN0cnVjdCBkbWFfZmVuY2UgKmRtYV9idWZfZ2V0X3VuaWZpZWRfZmVuY2Uoc3Ry
dWN0IGRtYV9idWYgKmRtYWJ1ZiwKKwkJCQkJCSAgIHN0cnVjdCBkbWFfZmVuY2UgKmFkZF9mZW5j
ZSkKK3sKKwlzdHJ1Y3QgZG1hX2ZlbmNlICoqZmVuY2VzID0gTlVMTDsKKwlzdHJ1Y3QgZG1hX2Zl
bmNlX2FycmF5ICphcnJheTsKKwl1bnNpZ25lZCBpLCBudW1fZmVuY2VzID0gMDsKKwlpbnQgcmV0
OworCisJcmV0ID0gZG1hX3Jlc3ZfZ2V0X2ZlbmNlc19yY3UoZG1hYnVmLT5yZXN2LCBOVUxMLAor
CQkJCSAgICAgICZudW1fZmVuY2VzLCAmZmVuY2VzKTsKKwlpZiAocmV0KQorCQlyZXR1cm4gTlVM
TDsgLyogcmV0IGNhbiBvbmx5IGJlIDAgb3IgLUVOT01FTSAqLworCisJaWYgKG51bV9mZW5jZXMg
PT0gMCkgeworCQlpZiAoYWRkX2ZlbmNlKSB7CisJCQlyZXR1cm4gYWRkX2ZlbmNlOworCQl9IGVs
c2UgeworCQkJcmV0dXJuIGRtYV9mZW5jZV9nZXRfc3R1YigpOworCQl9CisJfSBlbHNlIGlmIChu
dW1fZmVuY2VzID09IDEgJiYgKCFhZGRfZmVuY2UgfHwgYWRkX2ZlbmNlID09IGZlbmNlc1swXSkp
IHsKKwkJc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UgPSBmZW5jZXNbMF07CisJCWtmcmVlKGZlbmNl
cyk7CisJCXJldHVybiBmZW5jZTsKKwl9CisKKwlpZiAoYWRkX2ZlbmNlKSB7CisJCXN0cnVjdCBk
bWFfZmVuY2UgKipuZmVuY2VzOworCQlzaXplX3Qgc3o7CisKKwkJLyogR2V0IGEgcmVmIHRvIGFk
ZF9mZW5jZSBzbyB0aGF0IHdlIGhhdmUgYSByZWYgdG8gZXZlcnkKKwkJICogZmVuY2Ugd2UgYXJl
IGdvaW5nIHRvIHB1dCBpbiB0aGUgYXJyYXkuCisJCSAqLworCQlkbWFfZmVuY2VfZ2V0KGFkZF9m
ZW5jZSk7CisKKwkJc3ogPSAobnVtX2ZlbmNlcyArIDEpICogc2l6ZW9mKCpmZW5jZXMpOworCQlu
ZmVuY2VzID0ga3JlYWxsb2MoZmVuY2VzLCBzeiwgR0ZQX05PV0FJVCB8IF9fR0ZQX05PV0FSTik7
CisJCWlmICghbmZlbmNlcykKKwkJCWdvdG8gZXJyX3B1dF9mZW5jZXM7CisKKwkJbmZlbmNlc1tu
dW1fZmVuY2VzKytdID0gYWRkX2ZlbmNlOworCX0KKworCWFycmF5ID0gZG1hX2ZlbmNlX2FycmF5
X2NyZWF0ZShudW1fZmVuY2VzLCBmZW5jZXMsCisJCQkJICAgICAgIGRtYV9mZW5jZV9jb250ZXh0
X2FsbG9jKDEpLAorCQkJCSAgICAgICAxLCBmYWxzZSk7CisJaWYgKCFhcnJheSkKKwkJZ290byBl
cnJfcHV0X2ZlbmNlczsKKworCS8qIFRoZSBmZW5jZSBhcnJheSBub3cgb3ducyBmZW5jZXNfYXJy
IGFuZCBvdXIgcmVmZXJlbmNlcyB0byBlYWNoCisJICogb2YgdGhlIGluZGl2aWR1YWwgZmVuY2Vz
LiAgV2Ugb25seSBvd24gYSByZWZlcmVuY2UgdG8gdGhlIG9uZQorCSAqIGFycmF5IGZlbmNlLgor
CSAqLworCisJcmV0dXJuICZhcnJheS0+YmFzZTsKKworZXJyX3B1dF9mZW5jZXM6CisJZm9yIChp
ID0gMDsgaSA8IG51bV9mZW5jZXM7IGkrKykKKwkJZG1hX2ZlbmNlX3B1dChmZW5jZXNbMF0pOwor
CWRtYV9mZW5jZV9wdXQoYWRkX2ZlbmNlKTsKKwlrZnJlZShmZW5jZXMpOworCXJldHVybiBOVUxM
OworfQorCitzdGF0aWMgbG9uZyBkbWFfYnVmX3dhaXRfc3luY19maWxlKHN0cnVjdCBkbWFfYnVm
ICpkbWFidWYsCisJCQkJICAgY29uc3Qgdm9pZCBfX3VzZXIgKnVzZXJfZGF0YSkKK3sKKwlzdHJ1
Y3QgZG1hX2J1Zl9zeW5jX2ZpbGUgYXJnOworCXN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlLCAqdW5p
ZmllZF9mZW5jZTsKKwlpbnQgcmV0OworCisJaWYgKGNvcHlfZnJvbV91c2VyKCZhcmcsIHVzZXJf
ZGF0YSwgc2l6ZW9mKGFyZykpKQorCQlyZXR1cm4gLUVGQVVMVDsKKworCWlmIChhcmcuZmxhZ3Mg
IT0gMCAmJiBhcmcuZmxhZ3MgIT0gRE1BX0JVRl9TWU5DX0ZJTEVfU1lOQ19XUklURSkKKwkJcmV0
dXJuIC1FSU5WQUw7CisKKwlmZW5jZSA9IHN5bmNfZmlsZV9nZXRfZmVuY2UoYXJnLmZkKTsKKwlp
ZiAoIWZlbmNlKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCWlmIChhcmcuZmxhZ3MgJiBETUFfQlVG
X1NZTkNfRklMRV9TWU5DX1dSSVRFKSB7CisJCWRtYV9yZXN2X2xvY2soZG1hYnVmLT5yZXN2LCBO
VUxMKTsKKwkJdW5pZmllZF9mZW5jZSA9IGRtYV9idWZfZ2V0X3VuaWZpZWRfZmVuY2UoZG1hYnVm
LCBmZW5jZSk7CisJCWlmICh1bmlmaWVkX2ZlbmNlKQorCQkJZG1hX3Jlc3ZfYWRkX2V4Y2xfZmVu
Y2UoZG1hYnVmLT5yZXN2LCBmZW5jZSk7CisJCWVsc2UKKwkJCXJldCA9IC1FTk9NRU07CisJCWRt
YV9yZXN2X3VubG9jayhkbWFidWYtPnJlc3YpOworCX0gZWxzZSB7CisJCWRtYV9yZXN2X2FkZF9z
aGFyZWRfZmVuY2UoZG1hYnVmLT5yZXN2LCBmZW5jZSk7CisJfQorCisJZG1hX2ZlbmNlX3B1dChm
ZW5jZSk7CisKKwlyZXR1cm4gcmV0OworfQorCitzdGF0aWMgbG9uZyBkbWFfYnVmX3NpZ25hbF9z
eW5jX2ZpbGUoc3RydWN0IGRtYV9idWYgKmRtYWJ1ZiwKKwkJCQkgICAgIHZvaWQgX191c2VyICp1
c2VyX2RhdGEpCit7CisJc3RydWN0IGRtYV9idWZfc3luY19maWxlIGFyZzsKKwlzdHJ1Y3QgZG1h
X2ZlbmNlICpmZW5jZSA9IE5VTEw7CisJc3RydWN0IHN5bmNfZmlsZSAqc3luY19maWxlOworCWlu
dCBmZCwgcmV0OworCisJaWYgKGNvcHlfZnJvbV91c2VyKCZhcmcsIHVzZXJfZGF0YSwgc2l6ZW9m
KGFyZykpKQorCQlyZXR1cm4gLUVGQVVMVDsKKworCWlmIChhcmcuZmxhZ3MgIT0gMCAmJiBhcmcu
ZmxhZ3MgIT0gRE1BX0JVRl9TWU5DX0ZJTEVfU1lOQ19XUklURSkKKwkJcmV0dXJuIC1FSU5WQUw7
CisKKwlmZCA9IGdldF91bnVzZWRfZmRfZmxhZ3MoT19DTE9FWEVDKTsKKwlpZiAoZmQgPCAwKQor
CQlyZXR1cm4gZmQ7CisKKwlpZiAoYXJnLmZsYWdzICYgRE1BX0JVRl9TWU5DX0ZJTEVfU1lOQ19X
UklURSkgeworCQkvKiBXZSBuZWVkIHRvIGluY2x1ZGUgYm90aCB0aGUgZXhjbHVzaXZlIGZlbmNl
IGFuZCBhbGwgb2YKKwkJICogdGhlIHNoYXJlZCBmZW5jZXMgaW4gb3VyIGZlbmNlLgorCQkgKi8K
KwkJZmVuY2UgPSBkbWFfYnVmX2dldF91bmlmaWVkX2ZlbmNlKGRtYWJ1ZiwgTlVMTCk7CisJCWlm
ICghZmVuY2UpIHsKKwkJCXJldCA9IC1FTk9NRU07CisJCQlnb3RvIGVycl9wdXRfZmQ7CisJCX0K
Kwl9IGVsc2UgeworCQlmZW5jZSA9IGRtYV9yZXN2X2dldF9leGNsX3JjdShkbWFidWYtPnJlc3Yp
OworCQlpZiAoIWZlbmNlKQorCQkJZmVuY2UgPSBkbWFfZmVuY2VfZ2V0X3N0dWIoKTsKKwl9CisK
KwlzeW5jX2ZpbGUgPSBzeW5jX2ZpbGVfY3JlYXRlKGZlbmNlKTsKKworCWRtYV9mZW5jZV9wdXQo
ZmVuY2UpOworCisJaWYgKCFzeW5jX2ZpbGUpIHsKKwkJcmV0ID0gLUVJTlZBTDsKKwkJZ290byBl
cnJfcHV0X2ZkOworCX0KKworCWZkX2luc3RhbGwoZmQsIHN5bmNfZmlsZS0+ZmlsZSk7CisKKwlh
cmcuZmQgPSBmZDsKKwlpZiAoY29weV90b191c2VyKHVzZXJfZGF0YSwgJmFyZywgc2l6ZW9mKGFy
ZykpKQorCQlyZXR1cm4gLUVGQVVMVDsKKworCXJldHVybiAwOworCitlcnJfcHV0X2ZkOgorCXB1
dF91bnVzZWRfZmQoZmQpOworCXJldHVybiByZXQ7Cit9CisKIHN0YXRpYyBsb25nIGRtYV9idWZf
aW9jdGwoc3RydWN0IGZpbGUgKmZpbGUsCiAJCQkgIHVuc2lnbmVkIGludCBjbWQsIHVuc2lnbmVk
IGxvbmcgYXJnKQogewpAQCAtMzkwLDYgKzU0NiwxMiBAQCBzdGF0aWMgbG9uZyBkbWFfYnVmX2lv
Y3RsKHN0cnVjdCBmaWxlICpmaWxlLAogCWNhc2UgRE1BX0JVRl9TRVRfTkFNRToKIAkJcmV0dXJu
IGRtYV9idWZfc2V0X25hbWUoZG1hYnVmLCAoY29uc3QgY2hhciBfX3VzZXIgKilhcmcpOwogCisJ
Y2FzZSBETUFfQlVGX0lPQ1RMX1dBSVRfU1lOQ19GSUxFOgorCQlyZXR1cm4gZG1hX2J1Zl93YWl0
X3N5bmNfZmlsZShkbWFidWYsIChjb25zdCB2b2lkIF9fdXNlciAqKWFyZyk7CisKKwljYXNlIERN
QV9CVUZfSU9DVExfU0lHTkFMX1NZTkNfRklMRToKKwkJcmV0dXJuIGRtYV9idWZfc2lnbmFsX3N5
bmNfZmlsZShkbWFidWYsICh2b2lkIF9fdXNlciAqKWFyZyk7CisKIAlkZWZhdWx0OgogCQlyZXR1
cm4gLUVOT1RUWTsKIAl9CmRpZmYgLS1naXQgYS9pbmNsdWRlL3VhcGkvbGludXgvZG1hLWJ1Zi5o
IGIvaW5jbHVkZS91YXBpL2xpbnV4L2RtYS1idWYuaAppbmRleCBkYmM3MDkyZTA0YjUuLjgyNWI5
YTkxM2M4OSAxMDA2NDQKLS0tIGEvaW5jbHVkZS91YXBpL2xpbnV4L2RtYS1idWYuaAorKysgYi9p
bmNsdWRlL3VhcGkvbGludXgvZG1hLWJ1Zi5oCkBAIC0zNyw4ICszNywxNyBAQCBzdHJ1Y3QgZG1h
X2J1Zl9zeW5jIHsKIAogI2RlZmluZSBETUFfQlVGX05BTUVfTEVOCTMyCiAKK3N0cnVjdCBkbWFf
YnVmX3N5bmNfZmlsZSB7CisJX191MzIgZmxhZ3M7CisJX19zMzIgZmQ7Cit9OworCisjZGVmaW5l
IERNQV9CVUZfU1lOQ19GSUxFX1NZTkNfV1JJVEUJKDEgPDwgMCkKKwogI2RlZmluZSBETUFfQlVG
X0JBU0UJCSdiJwotI2RlZmluZSBETUFfQlVGX0lPQ1RMX1NZTkMJX0lPVyhETUFfQlVGX0JBU0Us
IDAsIHN0cnVjdCBkbWFfYnVmX3N5bmMpCi0jZGVmaW5lIERNQV9CVUZfU0VUX05BTUUJX0lPVyhE
TUFfQlVGX0JBU0UsIDEsIGNvbnN0IGNoYXIgKikKKyNkZWZpbmUgRE1BX0JVRl9JT0NUTF9TWU5D
CSAgICBfSU9XKERNQV9CVUZfQkFTRSwgMCwgc3RydWN0IGRtYV9idWZfc3luYykKKyNkZWZpbmUg
RE1BX0JVRl9TRVRfTkFNRQkgICAgX0lPVyhETUFfQlVGX0JBU0UsIDEsIGNvbnN0IGNoYXIgKikK
KyNkZWZpbmUgRE1BX0JVRl9JT0NUTF9XQUlUX1NZTkNfRklMRQlfSU9XKERNQV9CVUZfQkFTRSwg
Miwgc3RydWN0IGRtYV9idWZfc3luYykKKyNkZWZpbmUgRE1BX0JVRl9JT0NUTF9TSUdOQUxfU1lO
Q19GSUxFCV9JT1coRE1BX0JVRl9CQVNFLCAzLCBzdHJ1Y3QgZG1hX2J1Zl9zeW5jKQogCiAjZW5k
aWYKLS0gCjIuMjQuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX18KTGluYXJvLW1tLXNpZyBtYWlsaW5nIGxpc3QKTGluYXJvLW1tLXNpZ0BsaXN0cy5saW5h
cm8ub3JnCmh0dHBzOi8vbGlzdHMubGluYXJvLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2xpbmFyby1t
bS1zaWcK
