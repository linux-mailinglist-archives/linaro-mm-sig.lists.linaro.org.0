Return-Path: <linaro-mm-sig-bounces+lists+linaro-mm-sig=lfdr.de@lists.linaro.org>
X-Original-To: lists+linaro-mm-sig@lfdr.de
Delivered-To: lists+linaro-mm-sig@lfdr.de
Received: from lists.linaro.org (lists.linaro.org [3.208.193.21])
	by mail.lfdr.de (Postfix) with ESMTPS id 75082AA9EEE
	for <lists+linaro-mm-sig@lfdr.de>; Tue,  6 May 2025 00:16:42 +0200 (CEST)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 97331458C9
	for <lists+linaro-mm-sig@lfdr.de>; Mon,  5 May 2025 22:16:41 +0000 (UTC)
Received: from nyc.source.kernel.org (nyc.source.kernel.org [147.75.193.91])
	by lists.linaro.org (Postfix) with ESMTPS id 2FB43458FE
	for <linaro-mm-sig@lists.linaro.org>; Mon,  5 May 2025 22:16:23 +0000 (UTC)
Authentication-Results: lists.linaro.org;
	dkim=pass header.d=kernel.org header.s=k20201202 header.b=DLn3SzVG;
	dmarc=pass (policy=quarantine) header.from=kernel.org;
	spf=pass (lists.linaro.org: domain of sashal@kernel.org designates 147.75.193.91 as permitted sender) smtp.mailfrom=sashal@kernel.org
Received: from smtp.kernel.org (transwarp.subspace.kernel.org [100.75.92.58])
	by nyc.source.kernel.org (Postfix) with ESMTP id 44837A4C7A9;
	Mon,  5 May 2025 22:10:55 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id AF774C4CEEE;
	Mon,  5 May 2025 22:16:19 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1746483382;
	bh=oFfyZftriuHRvxyDoBVXnRc1yhWP3i5SH8qmJTPEE98=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=DLn3SzVGCHCBa1l9qRpb6C8ycnDF6snuyf4vTjynd3o5DFMJAxRVKjZ7bTTLXnalF
	 0gtCzjJtUUheQYshguwX5nrxBF2s2tpryQgZ1xbLrBbNWO8SivMVs/WeL5yR/Qp9b3
	 OsJ9FXRLpYRCGddsyU0i3bYd3O4n/olkfQ20FRmZKnbSW0t3vSCwQD6o5EAVroptak
	 ft5Uhxd8HGTHjPFBwdII/LUvE1ar04W81AVUBiEfeux5473TBgI3dYlaK/Qz8mE3pv
	 le9RwM4ZXYKieTgqFur77NsH2mcXFSnAr6jVqatrMo+BuzzB+Q0kjbtK3HMz0FFgOP
	 UOEOIqyyQF0iQ==
From: Sasha Levin <sashal@kernel.org>
To: linux-kernel@vger.kernel.org,
	stable@vger.kernel.org
Date: Mon,  5 May 2025 18:04:36 -0400
Message-Id: <20250505221419.2672473-60-sashal@kernel.org>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <20250505221419.2672473-1-sashal@kernel.org>
References: <20250505221419.2672473-1-sashal@kernel.org>
MIME-Version: 1.0
X-stable: review
X-Patchwork-Hint: Ignore
X-stable-base: Linux 6.14.5
X-Rspamd-Server: lists.linaro.org
X-Rspamd-Queue-Id: 2FB43458FE
X-Spamd-Bar: ---
X-Spamd-Result: default: False [-3.00 / 15.00];
	BAYES_HAM(-3.00)[100.00%];
	MID_CONTAINS_FROM(1.00)[];
	DMARC_POLICY_ALLOW(-0.50)[kernel.org,quarantine];
	R_SPF_ALLOW(-0.20)[+ip4:147.75.193.91:c];
	R_DKIM_ALLOW(-0.20)[kernel.org:s=k20201202];
	MIME_GOOD(-0.10)[text/plain];
	RCVD_VIA_SMTP_AUTH(0.00)[];
	FROM_EQ_ENVFROM(0.00)[];
	ARC_NA(0.00)[];
	MIME_TRACE(0.00)[0:+];
	ASN(0.00)[asn:54825, ipnet:147.75.192.0/21, country:US];
	RCPT_COUNT_TWELVE(0.00)[28];
	FREEMAIL_CC(0.00)[amd.com,kernel.org,gmail.com,ffwll.ch,linaro.org,treblig.org,huawei.com,igalia.com,froggi.es,lists.freedesktop.org,vger.kernel.org,lists.linaro.org];
	NEURAL_HAM(-0.00)[-1.000];
	TO_DN_SOME(0.00)[];
	RCVD_COUNT_TWO(0.00)[2];
	FROM_HAS_DN(0.00)[];
	TO_MATCH_ENVRCPT_SOME(0.00)[];
	URIBL_BLOCKED(0.00)[amd.com:email,nyc.source.kernel.org:helo,nyc.source.kernel.org:rdns];
	RCVD_TLS_LAST(0.00)[];
	DKIM_TRACE(0.00)[kernel.org:+]
X-Rspamd-Action: no action
Message-ID-Hash: ZQQG7Q22NWCLTYEPCEK4ANUPBPEMK645
X-Message-ID-Hash: ZQQG7Q22NWCLTYEPCEK4ANUPBPEMK645
X-MailFrom: sashal@kernel.org
X-Mailman-Rule-Misses: dmarc-mitigation; no-senders; approved; emergency; loop; banned-address; member-moderation; nonmember-moderation; administrivia; implicit-dest; max-recipients; max-size; news-moderation; no-subject; digests; suspicious-header
CC: =?UTF-8?q?Christian=20K=C3=B6nig?= <christian.koenig@amd.com>, Srinivasan Shanmugam <srinivasan.shanmugam@amd.com>, Alex Deucher <alexander.deucher@amd.com>, Sasha Levin <sashal@kernel.org>, simona@ffwll.ch, sumit.semwal@linaro.org, lijo.lazar@amd.com, mario.limonciello@amd.com, sunil.khatri@amd.com, Jesse.zhang@amd.com, linux@treblig.org, zhangzekun11@huawei.com, victor.skvortsov@amd.com, Hawking.Zhang@amd.com, tvrtko.ursulin@igalia.com, pierre-eric.pelloux-prayer@amd.com, vitaly.prosyak@amd.com, andrealmeid@igalia.com, Trigger.Huang@amd.com, joshua@froggi.es, Felix.Kuehling@amd.com, amd-gfx@lists.freedesktop.org, dri-devel@lists.freedesktop.org, linux-media@vger.kernel.org, linaro-mm-sig@lists.linaro.org
X-Mailman-Version: 3.3.5
Precedence: list
Subject: [Linaro-mm-sig] [PATCH AUTOSEL 6.14 060/642] drm/amdgpu: rework how isolation is enforced v2
List-Id: "Unified memory management interest group." <linaro-mm-sig.lists.linaro.org>
Archived-At: <https://lists.linaro.org/archives/list/linaro-mm-sig@lists.linaro.org/message/ZQQG7Q22NWCLTYEPCEK4ANUPBPEMK645/>
List-Archive: <https://lists.linaro.org/archives/list/linaro-mm-sig@lists.linaro.org/>
List-Help: <mailto:linaro-mm-sig-request@lists.linaro.org?subject=help>
List-Owner: <mailto:linaro-mm-sig-owner@lists.linaro.org>
List-Post: <mailto:linaro-mm-sig@lists.linaro.org>
List-Subscribe: <mailto:linaro-mm-sig-join@lists.linaro.org>
List-Unsubscribe: <mailto:linaro-mm-sig-leave@lists.linaro.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64

RnJvbTogQ2hyaXN0aWFuIEvDtm5pZyA8Y2hyaXN0aWFuLmtvZW5pZ0BhbWQuY29tPg0KDQpbIFVw
c3RyZWFtIGNvbW1pdCBiZDIyZTQ0YWQ0MTVhYzIyZTNhNGY5YTk4M2QyYTA4NWY2Y2I0NDI3IF0N
Cg0KTGltaXRpbmcgdGhlIG51bWJlciBvZiBhdmFpbGFibGUgVk1JRHMgdG8gZW5mb3JjZSBpc29s
YXRpb24gY2F1c2VzIHNvbWUNCmlzc3VlcyB3aXRoIGdhbmcgc3VibWl0IGFuZCBhcHBseWluZyBj
ZXJ0YWluIEhXIHdvcmthcm91bmRzIHdoaWNoDQpyZXF1aXJlIG11bHRpcGxlIFZNSURzIHRvIHdv
cmsgY29ycmVjdGx5Lg0KDQpTbyBpbnN0ZWFkIHN0YXJ0IHRvIHRyYWNrIGFsbCBzdWJtaXNzaW9u
cyB0byB0aGUgcmVsZXZhbnQgZW5naW5lcyBpbiBhDQpwZXIgcGFydGl0aW9uIGRhdGEgc3RydWN0
dXJlIGFuZCB1c2UgdGhlIGRtYV9mZW5jZXMgb2YgdGhlIHN1Ym1pc3Npb25zDQp0byBlbmZvcmNl
IGlzb2xhdGlvbiBzaW1pbGFyIHRvIHdoYXQgYSBWTUlEIGxpbWl0IGRvZXMuDQoNCnYyOiB1c2Ug
fjBsIGZvciBqb2JzIHdpdGhvdXQgaXNvbGF0aW9uIHRvIGRpc3RpbmN0IGl0IGZyb20ga2VybmVs
DQogICAgc3VibWlzc2lvbnMgd2hpY2ggdXNlcyBOVUxMIGZvciB0aGUgb3duZXIuIEFkZCBzb21l
IHdhcm5pbmcgd2hlbiB3ZQ0KICAgIGFyZSBPT00uDQoNClNpZ25lZC1vZmYtYnk6IENocmlzdGlh
biBLw7ZuaWcgPGNocmlzdGlhbi5rb2VuaWdAYW1kLmNvbT4NCkFja2VkLWJ5OiBTcmluaXZhc2Fu
IFNoYW5tdWdhbSA8c3Jpbml2YXNhbi5zaGFubXVnYW1AYW1kLmNvbT4NClNpZ25lZC1vZmYtYnk6
IEFsZXggRGV1Y2hlciA8YWxleGFuZGVyLmRldWNoZXJAYW1kLmNvbT4NClNpZ25lZC1vZmYtYnk6
IFNhc2hhIExldmluIDxzYXNoYWxAa2VybmVsLm9yZz4NCi0tLQ0KIGRyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2FtZGdwdS5oICAgICAgICB8IDEzICsrLQ0KIGRyaXZlcnMvZ3B1L2RybS9hbWQv
YW1kZ3B1L2FtZGdwdV9kZXZpY2UuYyB8IDk4ICsrKysrKysrKysrKysrKysrKysrKy0NCiBkcml2
ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfaWRzLmMgICAgfCA0MyArKysrLS0tLS0tDQog
ZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2pvYi5jICAgIHwgMTYgKysrLQ0KIGRy
aXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9zeW5jLmMgICB8IDE5ICsrKysrDQogZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3N5bmMuaCAgIHwgIDEgKw0KIDYgZmlsZXMg
Y2hhbmdlZCwgMTU1IGluc2VydGlvbnMoKyksIDM1IGRlbGV0aW9ucygtKQ0KDQpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1LmggYi9kcml2ZXJzL2dwdS9kcm0v
YW1kL2FtZGdwdS9hbWRncHUuaA0KaW5kZXggOThmMGMxMmRmMTJiYy4uOWE2MWY1ZmUzMjQ1YSAx
MDA2NDQNCi0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdS5oDQorKysgYi9k
cml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHUuaA0KQEAgLTExODcsOSArMTE4NywxNSBA
QCBzdHJ1Y3QgYW1kZ3B1X2RldmljZSB7DQogCWJvb2wgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgZGVidWdfZW5hYmxlX3Jhc19hY2E7DQogCWJvb2wgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgZGVidWdfZXhwX3Jlc2V0czsNCiANCi0JYm9vbAkJCQllbmZvcmNlX2lzb2xhdGlvbltNQVhf
WENQXTsNCi0JLyogQWRkZWQgdGhpcyBtdXRleCBmb3IgY2xlYW5lciBzaGFkZXIgaXNvbGF0aW9u
IGJldHdlZW4gR0ZYIGFuZCBjb21wdXRlIHByb2Nlc3NlcyAqLw0KKwkvKiBQcm90ZWN0aW9uIGZv
ciB0aGUgZm9sbG93aW5nIGlzb2xhdGlvbiBzdHJ1Y3R1cmUgKi8NCiAJc3RydWN0IG11dGV4ICAg
ICAgICAgICAgICAgICAgICBlbmZvcmNlX2lzb2xhdGlvbl9tdXRleDsNCisJYm9vbAkJCQllbmZv
cmNlX2lzb2xhdGlvbltNQVhfWENQXTsNCisJc3RydWN0IGFtZGdwdV9pc29sYXRpb24gew0KKwkJ
dm9pZAkJCSpvd25lcjsNCisJCXN0cnVjdCBkbWFfZmVuY2UJKnNwZWFyaGVhZDsNCisJCXN0cnVj
dCBhbWRncHVfc3luYwlhY3RpdmU7DQorCQlzdHJ1Y3QgYW1kZ3B1X3N5bmMJcHJldjsNCisJfSBp
c29sYXRpb25bTUFYX1hDUF07DQogDQogCXN0cnVjdCBhbWRncHVfaW5pdF9sZXZlbCAqaW5pdF9s
dmw7DQogfTsNCkBAIC0xNDcwLDYgKzE0NzYsOSBAQCB2b2lkIGFtZGdwdV9kZXZpY2VfcGNpZV9w
b3J0X3dyZWcoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsDQogc3RydWN0IGRtYV9mZW5jZSAq
YW1kZ3B1X2RldmljZV9nZXRfZ2FuZyhzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldik7DQogc3Ry
dWN0IGRtYV9mZW5jZSAqYW1kZ3B1X2RldmljZV9zd2l0Y2hfZ2FuZyhzdHJ1Y3QgYW1kZ3B1X2Rl
dmljZSAqYWRldiwNCiAJCQkJCSAgICBzdHJ1Y3QgZG1hX2ZlbmNlICpnYW5nKTsNCitzdHJ1Y3Qg
ZG1hX2ZlbmNlICphbWRncHVfZGV2aWNlX2VuZm9yY2VfaXNvbGF0aW9uKHN0cnVjdCBhbWRncHVf
ZGV2aWNlICphZGV2LA0KKwkJCQkJCSAgc3RydWN0IGFtZGdwdV9yaW5nICpyaW5nLA0KKwkJCQkJ
CSAgc3RydWN0IGFtZGdwdV9qb2IgKmpvYik7DQogYm9vbCBhbWRncHVfZGV2aWNlX2hhc19kaXNw
bGF5X2hhcmR3YXJlKHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2KTsNCiBzc2l6ZV90IGFtZGdw
dV9nZXRfc29mdF9mdWxsX3Jlc2V0X21hc2soc3RydWN0IGFtZGdwdV9yaW5nICpyaW5nKTsNCiBz
c2l6ZV90IGFtZGdwdV9zaG93X3Jlc2V0X21hc2soY2hhciAqYnVmLCB1aW50MzJfdCBzdXBwb3J0
ZWRfcmVzZXQpOw0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdw
dV9kZXZpY2UuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kZXZpY2UuYw0K
aW5kZXggNzFlOGE3NjE4MGFkNi4uZTI5OGI0ODQ4OGMyMiAxMDA2NDQNCi0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kZXZpY2UuYw0KKysrIGIvZHJpdmVycy9ncHUvZHJt
L2FtZC9hbWRncHUvYW1kZ3B1X2RldmljZS5jDQpAQCAtNDIzMiw2ICs0MjMyLDExIEBAIGludCBh
bWRncHVfZGV2aWNlX2luaXQoc3RydWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsDQogCW11dGV4X2lu
aXQoJmFkZXYtPmdmeC5yZXNldF9zZW1fbXV0ZXgpOw0KIAkvKiBJbml0aWFsaXplIHRoZSBtdXRl
eCBmb3IgY2xlYW5lciBzaGFkZXIgaXNvbGF0aW9uIGJldHdlZW4gR0ZYIGFuZCBjb21wdXRlIHBy
b2Nlc3NlcyAqLw0KIAltdXRleF9pbml0KCZhZGV2LT5lbmZvcmNlX2lzb2xhdGlvbl9tdXRleCk7
DQorCWZvciAoaSA9IDA7IGkgPCBNQVhfWENQOyArK2kpIHsNCisJCWFkZXYtPmlzb2xhdGlvbltp
XS5zcGVhcmhlYWQgPSBkbWFfZmVuY2VfZ2V0X3N0dWIoKTsNCisJCWFtZGdwdV9zeW5jX2NyZWF0
ZSgmYWRldi0+aXNvbGF0aW9uW2ldLmFjdGl2ZSk7DQorCQlhbWRncHVfc3luY19jcmVhdGUoJmFk
ZXYtPmlzb2xhdGlvbltpXS5wcmV2KTsNCisJfQ0KIAltdXRleF9pbml0KCZhZGV2LT5nZngua2Zk
X3NjaF9tdXRleCk7DQogDQogCWFtZGdwdV9kZXZpY2VfaW5pdF9hcHVfZmxhZ3MoYWRldik7DQpA
QCAtNDczMSw3ICs0NzM2LDcgQEAgdm9pZCBhbWRncHVfZGV2aWNlX2ZpbmlfaHcoc3RydWN0IGFt
ZGdwdV9kZXZpY2UgKmFkZXYpDQogDQogdm9pZCBhbWRncHVfZGV2aWNlX2Zpbmlfc3coc3RydWN0
IGFtZGdwdV9kZXZpY2UgKmFkZXYpDQogew0KLQlpbnQgaWR4Ow0KKwlpbnQgaSwgaWR4Ow0KIAli
b29sIHB4Ow0KIA0KIAlhbWRncHVfZGV2aWNlX2lwX2ZpbmkoYWRldik7DQpAQCAtNDczOSw2ICs0
NzQ0LDExIEBAIHZvaWQgYW1kZ3B1X2RldmljZV9maW5pX3N3KHN0cnVjdCBhbWRncHVfZGV2aWNl
ICphZGV2KQ0KIAlhbWRncHVfdWNvZGVfcmVsZWFzZSgmYWRldi0+ZmlybXdhcmUuZ3B1X2luZm9f
ZncpOw0KIAlhZGV2LT5hY2NlbF93b3JraW5nID0gZmFsc2U7DQogCWRtYV9mZW5jZV9wdXQocmN1
X2RlcmVmZXJlbmNlX3Byb3RlY3RlZChhZGV2LT5nYW5nX3N1Ym1pdCwgdHJ1ZSkpOw0KKwlmb3Ig
KGkgPSAwOyBpIDwgTUFYX1hDUDsgKytpKSB7DQorCQlkbWFfZmVuY2VfcHV0KGFkZXYtPmlzb2xh
dGlvbltpXS5zcGVhcmhlYWQpOw0KKwkJYW1kZ3B1X3N5bmNfZnJlZSgmYWRldi0+aXNvbGF0aW9u
W2ldLmFjdGl2ZSk7DQorCQlhbWRncHVfc3luY19mcmVlKCZhZGV2LT5pc29sYXRpb25baV0ucHJl
dik7DQorCX0NCiANCiAJYW1kZ3B1X3Jlc2V0X2ZpbmkoYWRldik7DQogDQpAQCAtNjg3NSw2ICs2
ODg1LDkyIEBAIHN0cnVjdCBkbWFfZmVuY2UgKmFtZGdwdV9kZXZpY2Vfc3dpdGNoX2dhbmcoc3Ry
dWN0IGFtZGdwdV9kZXZpY2UgKmFkZXYsDQogCXJldHVybiBOVUxMOw0KIH0NCiANCisvKioNCisg
KiBhbWRncHVfZGV2aWNlX2VuZm9yY2VfaXNvbGF0aW9uIC0gZW5mb3JjZSBIVyBpc29sYXRpb24N
CisgKiBAYWRldjogdGhlIGFtZGdwdSBkZXZpY2UgcG9pbnRlcg0KKyAqIEByaW5nOiB0aGUgSFcg
cmluZyB0aGUgam9iIGlzIHN1cHBvc2VkIHRvIHJ1biBvbg0KKyAqIEBqb2I6IHRoZSBqb2Igd2hp
Y2ggaXMgYWJvdXQgdG8gYmUgcHVzaGVkIHRvIHRoZSBIVyByaW5nDQorICoNCisgKiBNYWtlcyBz
dXJlIHRoYXQgb25seSBvbmUgY2xpZW50IGF0IGEgdGltZSBjYW4gdXNlIHRoZSBHRlggYmxvY2su
DQorICogUmV0dXJuczogVGhlIGRlcGVuZGVuY3kgdG8gd2FpdCBvbiBiZWZvcmUgdGhlIGpvYiBj
YW4gYmUgcHVzaGVkIHRvIHRoZSBIVy4NCisgKiBUaGUgZnVuY3Rpb24gaXMgY2FsbGVkIG11bHRp
cGxlIHRpbWVzIHVudGlsIE5VTEwgaXMgcmV0dXJuZWQuDQorICovDQorc3RydWN0IGRtYV9mZW5j
ZSAqYW1kZ3B1X2RldmljZV9lbmZvcmNlX2lzb2xhdGlvbihzdHJ1Y3QgYW1kZ3B1X2RldmljZSAq
YWRldiwNCisJCQkJCQkgIHN0cnVjdCBhbWRncHVfcmluZyAqcmluZywNCisJCQkJCQkgIHN0cnVj
dCBhbWRncHVfam9iICpqb2IpDQorew0KKwlzdHJ1Y3QgYW1kZ3B1X2lzb2xhdGlvbiAqaXNvbGF0
aW9uID0gJmFkZXYtPmlzb2xhdGlvbltyaW5nLT54Y3BfaWRdOw0KKwlzdHJ1Y3QgZHJtX3NjaGVk
X2ZlbmNlICpmID0gam9iLT5iYXNlLnNfZmVuY2U7DQorCXN0cnVjdCBkbWFfZmVuY2UgKmRlcDsN
CisJdm9pZCAqb3duZXI7DQorCWludCByOw0KKw0KKwkvKg0KKwkgKiBGb3Igbm93IGVuZm9yY2Ug
aXNvbGF0aW9uIG9ubHkgZm9yIHRoZSBHRlggYmxvY2sgc2luY2Ugd2Ugb25seSBuZWVkDQorCSAq
IHRoZSBjbGVhbmVyIHNoYWRlciBvbiB0aG9zZSByaW5ncy4NCisJICovDQorCWlmIChyaW5nLT5m
dW5jcy0+dHlwZSAhPSBBTURHUFVfUklOR19UWVBFX0dGWCAmJg0KKwkgICAgcmluZy0+ZnVuY3Mt
PnR5cGUgIT0gQU1ER1BVX1JJTkdfVFlQRV9DT01QVVRFKQ0KKwkJcmV0dXJuIE5VTEw7DQorDQor
CS8qDQorCSAqIEFsbCBzdWJtaXNzaW9ucyB3aGVyZSBlbmZvcmNlIGlzb2xhdGlvbiBpcyBmYWxz
ZSBhcmUgaGFuZGxlZCBhcyBpZg0KKwkgKiB0aGV5IGNvbWUgZnJvbSBhIHNpbmdsZSBjbGllbnQu
IFVzZSB+MGwgYXMgdGhlIG93bmVyIHRvIGRpc3RpbmN0IGl0DQorCSAqIGZyb20ga2VybmVsIHN1
Ym1pc3Npb25zIHdoZXJlIHRoZSBvd25lciBpcyBOVUxMLg0KKwkgKi8NCisJb3duZXIgPSBqb2It
PmVuZm9yY2VfaXNvbGF0aW9uID8gZi0+b3duZXIgOiAodm9pZCAqKX4wbDsNCisNCisJbXV0ZXhf
bG9jaygmYWRldi0+ZW5mb3JjZV9pc29sYXRpb25fbXV0ZXgpOw0KKw0KKwkvKg0KKwkgKiBUaGUg
InNwZWFyaGVhZCIgc3VibWlzc2lvbiBpcyB0aGUgZmlyc3Qgb25lIHdoaWNoIGNoYW5nZXMgdGhl
DQorCSAqIG93bmVyc2hpcCB0byBpdHMgY2xpZW50LiBXZSBhbHdheXMgbmVlZCB0byB3YWl0IGZv
ciBpdCB0byBiZQ0KKwkgKiBwdXNoZWQgdG8gdGhlIEhXIGJlZm9yZSBwcm9jZWVkaW5nIHdpdGgg
YW55dGhpbmcuDQorCSAqLw0KKwlpZiAoJmYtPnNjaGVkdWxlZCAhPSBpc29sYXRpb24tPnNwZWFy
aGVhZCAmJg0KKwkgICAgIWRtYV9mZW5jZV9pc19zaWduYWxlZChpc29sYXRpb24tPnNwZWFyaGVh
ZCkpIHsNCisJCWRlcCA9IGlzb2xhdGlvbi0+c3BlYXJoZWFkOw0KKwkJZ290byBvdXRfZ3JhYl9y
ZWY7DQorCX0NCisNCisJaWYgKGlzb2xhdGlvbi0+b3duZXIgIT0gb3duZXIpIHsNCisNCisJCS8q
DQorCQkgKiBXYWl0IGZvciBhbnkgZ2FuZyB0byBiZSBhc3NlbWJsZWQgYmVmb3JlIHN3aXRjaGlu
ZyB0byBhDQorCQkgKiBkaWZmZXJlbnQgb3duZXIgb3Igb3RoZXJ3aXNlIHdlIGNvdWxkIGRlYWRs
b2NrIHRoZQ0KKwkJICogc3VibWlzc2lvbnMuDQorCQkgKi8NCisJCWlmICgham9iLT5nYW5nX3N1
Ym1pdCkgew0KKwkJCWRlcCA9IGFtZGdwdV9kZXZpY2VfZ2V0X2dhbmcoYWRldik7DQorCQkJaWYg
KCFkbWFfZmVuY2VfaXNfc2lnbmFsZWQoZGVwKSkNCisJCQkJZ290byBvdXRfcmV0dXJuX2RlcDsN
CisJCQlkbWFfZmVuY2VfcHV0KGRlcCk7DQorCQl9DQorDQorCQlkbWFfZmVuY2VfcHV0KGlzb2xh
dGlvbi0+c3BlYXJoZWFkKTsNCisJCWlzb2xhdGlvbi0+c3BlYXJoZWFkID0gZG1hX2ZlbmNlX2dl
dCgmZi0+c2NoZWR1bGVkKTsNCisJCWFtZGdwdV9zeW5jX21vdmUoJmlzb2xhdGlvbi0+YWN0aXZl
LCAmaXNvbGF0aW9uLT5wcmV2KTsNCisJCWlzb2xhdGlvbi0+b3duZXIgPSBvd25lcjsNCisJfQ0K
Kw0KKwkvKg0KKwkgKiBTcGVjaWZ5aW5nIHRoZSByaW5nIGhlcmUgaGVscHMgdG8gcGlwZWxpbmUg
c3VibWlzc2lvbnMgZXZlbiB3aGVuDQorCSAqIGlzb2xhdGlvbiBpcyBlbmFibGVkLiBJZiB0aGF0
IGlzIG5vdCBkZXNpcmVkIGZvciB0ZXN0aW5nIE5VTEwgY2FuIGJlDQorCSAqIHVzZWQgaW5zdGVh
ZCBvZiB0aGUgcmluZyB0byBlbmZvcmNlIGEgQ1BVIHJvdW5kIHRyaXAgd2hpbGUgc3dpdGNoaW5n
DQorCSAqIGJldHdlZW4gY2xpZW50cy4NCisJICovDQorCWRlcCA9IGFtZGdwdV9zeW5jX3BlZWtf
ZmVuY2UoJmlzb2xhdGlvbi0+cHJldiwgcmluZyk7DQorCXIgPSBhbWRncHVfc3luY19mZW5jZSgm
aXNvbGF0aW9uLT5hY3RpdmUsICZmLT5maW5pc2hlZCwgR0ZQX05PV0FJVCk7DQorCWlmIChyKQ0K
KwkJRFJNX1dBUk4oIk9PTSB0cmFja2luZyBpc29sYXRpb25cbiIpOw0KKw0KK291dF9ncmFiX3Jl
ZjoNCisJZG1hX2ZlbmNlX2dldChkZXApOw0KK291dF9yZXR1cm5fZGVwOg0KKwltdXRleF91bmxv
Y2soJmFkZXYtPmVuZm9yY2VfaXNvbGF0aW9uX211dGV4KTsNCisJcmV0dXJuIGRlcDsNCit9DQor
DQogYm9vbCBhbWRncHVfZGV2aWNlX2hhc19kaXNwbGF5X2hhcmR3YXJlKHN0cnVjdCBhbWRncHVf
ZGV2aWNlICphZGV2KQ0KIHsNCiAJc3dpdGNoIChhZGV2LT5hc2ljX3R5cGUpIHsNCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfaWRzLmMgYi9kcml2ZXJzL2dw
dS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfaWRzLmMNCmluZGV4IDhlNzEyYTExYWJhNWQuLjkwMDhi
NzM4OGU4OTcgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVf
aWRzLmMNCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9pZHMuYw0KQEAg
LTI4Nyw0MCArMjg3LDI3IEBAIHN0YXRpYyBpbnQgYW1kZ3B1X3ZtaWRfZ3JhYl9yZXNlcnZlZChz
dHJ1Y3QgYW1kZ3B1X3ZtICp2bSwNCiAJICAgICgqaWQpLT5mbHVzaGVkX3VwZGF0ZXMgPCB1cGRh
dGVzIHx8DQogCSAgICAhKCppZCktPmxhc3RfZmx1c2ggfHwNCiAJICAgICgoKmlkKS0+bGFzdF9m
bHVzaC0+Y29udGV4dCAhPSBmZW5jZV9jb250ZXh0ICYmDQotCSAgICAgIWRtYV9mZW5jZV9pc19z
aWduYWxlZCgoKmlkKS0+bGFzdF9mbHVzaCkpKSB7DQorCSAgICAgIWRtYV9mZW5jZV9pc19zaWdu
YWxlZCgoKmlkKS0+bGFzdF9mbHVzaCkpKQ0KKwkJbmVlZHNfZmx1c2ggPSB0cnVlOw0KKw0KKwlp
ZiAoKCppZCktPm93bmVyICE9IHZtLT5pbW1lZGlhdGUuZmVuY2VfY29udGV4dCB8fA0KKwkgICAg
KCFhZGV2LT52bV9tYW5hZ2VyLmNvbmN1cnJlbnRfZmx1c2ggJiYgbmVlZHNfZmx1c2gpKSB7DQog
CQlzdHJ1Y3QgZG1hX2ZlbmNlICp0bXA7DQogDQotCQkvKiBXYWl0IGZvciB0aGUgZ2FuZyB0byBi
ZSBhc3NlbWJsZWQgYmVmb3JlIHVzaW5nIGENCi0JCSAqIHJlc2VydmVkIFZNSUQgb3Igb3RoZXJ3
aXNlIHRoZSBnYW5nIGNvdWxkIGRlYWRsb2NrLg0KKwkJLyogRG9uJ3QgdXNlIHBlciBlbmdpbmUg
YW5kIHBlciBwcm9jZXNzIFZNSUQgYXQgdGhlDQorCQkgKiBzYW1lIHRpbWUNCiAJCSAqLw0KLQkJ
dG1wID0gYW1kZ3B1X2RldmljZV9nZXRfZ2FuZyhhZGV2KTsNCi0JCWlmICghZG1hX2ZlbmNlX2lz
X3NpZ25hbGVkKHRtcCkgJiYgdG1wICE9IGpvYi0+Z2FuZ19zdWJtaXQpIHsNCisJCWlmIChhZGV2
LT52bV9tYW5hZ2VyLmNvbmN1cnJlbnRfZmx1c2gpDQorCQkJcmluZyA9IE5VTEw7DQorDQorCQkv
KiB0byBwcmV2ZW50IG9uZSBjb250ZXh0IHN0YXJ2ZWQgYnkgYW5vdGhlciBjb250ZXh0ICovDQor
CQkoKmlkKS0+cGRfZ3B1X2FkZHIgPSAwOw0KKwkJdG1wID0gYW1kZ3B1X3N5bmNfcGVla19mZW5j
ZSgmKCppZCktPmFjdGl2ZSwgcmluZyk7DQorCQlpZiAodG1wKSB7DQogCQkJKmlkID0gTlVMTDsN
Ci0JCQkqZmVuY2UgPSB0bXA7DQorCQkJKmZlbmNlID0gZG1hX2ZlbmNlX2dldCh0bXApOw0KIAkJ
CXJldHVybiAwOw0KIAkJfQ0KLQkJZG1hX2ZlbmNlX3B1dCh0bXApOw0KLQ0KLQkJLyogTWFrZSBz
dXJlIHRoZSBpZCBpcyBvd25lZCBieSB0aGUgZ2FuZyBiZWZvcmUgcHJvY2VlZGluZyAqLw0KLQkJ
aWYgKCFqb2ItPmdhbmdfc3VibWl0IHx8DQotCQkgICAgKCppZCktPm93bmVyICE9IHZtLT5pbW1l
ZGlhdGUuZmVuY2VfY29udGV4dCkgew0KLQ0KLQkJCS8qIERvbid0IHVzZSBwZXIgZW5naW5lIGFu
ZCBwZXIgcHJvY2VzcyBWTUlEIGF0IHRoZQ0KLQkJCSAqIHNhbWUgdGltZQ0KLQkJCSAqLw0KLQkJ
CWlmIChhZGV2LT52bV9tYW5hZ2VyLmNvbmN1cnJlbnRfZmx1c2gpDQotCQkJCXJpbmcgPSBOVUxM
Ow0KLQ0KLQkJCS8qIHRvIHByZXZlbnQgb25lIGNvbnRleHQgc3RhcnZlZCBieSBhbm90aGVyIGNv
bnRleHQgKi8NCi0JCQkoKmlkKS0+cGRfZ3B1X2FkZHIgPSAwOw0KLQkJCXRtcCA9IGFtZGdwdV9z
eW5jX3BlZWtfZmVuY2UoJigqaWQpLT5hY3RpdmUsIHJpbmcpOw0KLQkJCWlmICh0bXApIHsNCi0J
CQkJKmlkID0gTlVMTDsNCi0JCQkJKmZlbmNlID0gZG1hX2ZlbmNlX2dldCh0bXApOw0KLQkJCQly
ZXR1cm4gMDsNCi0JCQl9DQotCQl9DQotCQluZWVkc19mbHVzaCA9IHRydWU7DQogCX0NCiANCiAJ
LyogR29vZCB3ZSBjYW4gdXNlIHRoaXMgVk1JRC4gUmVtZW1iZXIgdGhpcyBzdWJtaXNzaW9uIGFz
DQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2pvYi5jIGIv
ZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2pvYi5jDQppbmRleCAxMDBmMDQ0NzU5
NDM1Li42ODVjNjFhMDVhZjg1IDEwMDY0NA0KLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRn
cHUvYW1kZ3B1X2pvYi5jDQorKysgYi9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVf
am9iLmMNCkBAIC0zNDIsMTcgKzM0MiwyNCBAQCBhbWRncHVfam9iX3ByZXBhcmVfam9iKHN0cnVj
dCBkcm1fc2NoZWRfam9iICpzY2hlZF9qb2IsDQogew0KIAlzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJp
bmcgPSB0b19hbWRncHVfcmluZyhzX2VudGl0eS0+cnEtPnNjaGVkKTsNCiAJc3RydWN0IGFtZGdw
dV9qb2IgKmpvYiA9IHRvX2FtZGdwdV9qb2Ioc2NoZWRfam9iKTsNCi0Jc3RydWN0IGRtYV9mZW5j
ZSAqZmVuY2UgPSBOVUxMOw0KKwlzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZTsNCiAJaW50IHI7DQog
DQogCXIgPSBkcm1fc2NoZWRfZW50aXR5X2Vycm9yKHNfZW50aXR5KTsNCiAJaWYgKHIpDQogCQln
b3RvIGVycm9yOw0KIA0KLQlpZiAoam9iLT5nYW5nX3N1Ym1pdCkNCisJaWYgKGpvYi0+Z2FuZ19z
dWJtaXQpIHsNCiAJCWZlbmNlID0gYW1kZ3B1X2RldmljZV9zd2l0Y2hfZ2FuZyhyaW5nLT5hZGV2
LCBqb2ItPmdhbmdfc3VibWl0KTsNCisJCWlmIChmZW5jZSkNCisJCQlyZXR1cm4gZmVuY2U7DQor
CX0NCisNCisJZmVuY2UgPSBhbWRncHVfZGV2aWNlX2VuZm9yY2VfaXNvbGF0aW9uKHJpbmctPmFk
ZXYsIHJpbmcsIGpvYik7DQorCWlmIChmZW5jZSkNCisJCXJldHVybiBmZW5jZTsNCiANCi0JaWYg
KCFmZW5jZSAmJiBqb2ItPnZtICYmICFqb2ItPnZtaWQpIHsNCisJaWYgKGpvYi0+dm0gJiYgIWpv
Yi0+dm1pZCkgew0KIAkJciA9IGFtZGdwdV92bWlkX2dyYWIoam9iLT52bSwgcmluZywgam9iLCAm
ZmVuY2UpOw0KIAkJaWYgKHIpIHsNCiAJCQlkZXZfZXJyKHJpbmctPmFkZXYtPmRldiwgIkVycm9y
IGdldHRpbmcgVk0gSUQgKCVkKVxuIiwgcik7DQpAQCAtMzY1LDkgKzM3MiwxMCBAQCBhbWRncHVf
am9iX3ByZXBhcmVfam9iKHN0cnVjdCBkcm1fc2NoZWRfam9iICpzY2hlZF9qb2IsDQogCQkgKi8N
CiAJCWlmICghZmVuY2UpDQogCQkJam9iLT52bSA9IE5VTEw7DQorCQlyZXR1cm4gZmVuY2U7DQog
CX0NCiANCi0JcmV0dXJuIGZlbmNlOw0KKwlyZXR1cm4gTlVMTDsNCiANCiBlcnJvcjoNCiAJZG1h
X2ZlbmNlX3NldF9lcnJvcigmam9iLT5iYXNlLnNfZmVuY2UtPmZpbmlzaGVkLCByKTsNCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfc3luYy5jIGIvZHJpdmVy
cy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3N5bmMuYw0KaW5kZXggYzU4NmFiNGM5MTFiZi4u
ZDc1NzE1YjNmMTg3MCAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2Ft
ZGdwdV9zeW5jLmMNCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9zeW5j
LmMNCkBAIC0zOTksNiArMzk5LDI1IEBAIGludCBhbWRncHVfc3luY19jbG9uZShzdHJ1Y3QgYW1k
Z3B1X3N5bmMgKnNvdXJjZSwgc3RydWN0IGFtZGdwdV9zeW5jICpjbG9uZSkNCiAJcmV0dXJuIDA7
DQogfQ0KIA0KKy8qKg0KKyAqIGFtZGdwdV9zeW5jX21vdmUgLSBtb3ZlIGFsbCBmZW5jZXMgZnJv
bSBzcmMgdG8gZHN0DQorICoNCisgKiBAc3JjOiBzb3VyY2Ugb2YgdGhlIGZlbmNlcywgZW1wdHkg
YWZ0ZXIgZnVuY3Rpb24NCisgKiBAZHN0OiBkZXN0aW5hdGlvbiBmb3IgdGhlIGZlbmNlcw0KKyAq
DQorICogTW92ZXMgYWxsIGZlbmNlcyBmcm9tIHNvdXJjZSB0byBkZXN0aW5hdGlvbi4gQWxsIGZl
bmNlcyBpbiBkZXN0aW5hdGlvbiBhcmUNCisgKiBmcmVlZCBhbmQgc291cmNlIGlzIGVtcHR5IGFm
dGVyIHRoZSBmdW5jdGlvbiBjYWxsLg0KKyAqLw0KK3ZvaWQgYW1kZ3B1X3N5bmNfbW92ZShzdHJ1
Y3QgYW1kZ3B1X3N5bmMgKnNyYywgc3RydWN0IGFtZGdwdV9zeW5jICpkc3QpDQorew0KKwl1bnNp
Z25lZCBpbnQgaTsNCisNCisJYW1kZ3B1X3N5bmNfZnJlZShkc3QpOw0KKw0KKwlmb3IgKGkgPSAw
OyBpIDwgSEFTSF9TSVpFKHNyYy0+ZmVuY2VzKTsgKytpKQ0KKwkJaGxpc3RfbW92ZV9saXN0KCZz
cmMtPmZlbmNlc1tpXSwgJmRzdC0+ZmVuY2VzW2ldKTsNCit9DQorDQogLyoqDQogICogYW1kZ3B1
X3N5bmNfcHVzaF90b19qb2IgLSBwdXNoIGZlbmNlcyBpbnRvIGpvYg0KICAqIEBzeW5jOiBzeW5j
IG9iamVjdCB0byBnZXQgdGhlIGZlbmNlcyBmcm9tDQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3N5bmMuaCBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1
L2FtZGdwdV9zeW5jLmgNCmluZGV4IGUzMjcyZGNlNzk4ZDcuLmE5MWE4ZWFmODA4YjEgMTAwNjQ0
DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfc3luYy5oDQorKysgYi9k
cml2ZXJzL2dwdS9kcm0vYW1kL2FtZGdwdS9hbWRncHVfc3luYy5oDQpAQCAtNTYsNiArNTYsNyBA
QCBzdHJ1Y3QgZG1hX2ZlbmNlICphbWRncHVfc3luY19wZWVrX2ZlbmNlKHN0cnVjdCBhbWRncHVf
c3luYyAqc3luYywNCiAJCQkJICAgICBzdHJ1Y3QgYW1kZ3B1X3JpbmcgKnJpbmcpOw0KIHN0cnVj
dCBkbWFfZmVuY2UgKmFtZGdwdV9zeW5jX2dldF9mZW5jZShzdHJ1Y3QgYW1kZ3B1X3N5bmMgKnN5
bmMpOw0KIGludCBhbWRncHVfc3luY19jbG9uZShzdHJ1Y3QgYW1kZ3B1X3N5bmMgKnNvdXJjZSwg
c3RydWN0IGFtZGdwdV9zeW5jICpjbG9uZSk7DQordm9pZCBhbWRncHVfc3luY19tb3ZlKHN0cnVj
dCBhbWRncHVfc3luYyAqc3JjLCBzdHJ1Y3QgYW1kZ3B1X3N5bmMgKmRzdCk7DQogaW50IGFtZGdw
dV9zeW5jX3B1c2hfdG9fam9iKHN0cnVjdCBhbWRncHVfc3luYyAqc3luYywgc3RydWN0IGFtZGdw
dV9qb2IgKmpvYik7DQogaW50IGFtZGdwdV9zeW5jX3dhaXQoc3RydWN0IGFtZGdwdV9zeW5jICpz
eW5jLCBib29sIGludHIpOw0KIHZvaWQgYW1kZ3B1X3N5bmNfZnJlZShzdHJ1Y3QgYW1kZ3B1X3N5
bmMgKnN5bmMpOw0KLS0gDQoyLjM5LjUNCg0KX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX18KTGluYXJvLW1tLXNpZyBtYWlsaW5nIGxpc3QgLS0gbGluYXJvLW1t
LXNpZ0BsaXN0cy5saW5hcm8ub3JnClRvIHVuc3Vic2NyaWJlIHNlbmQgYW4gZW1haWwgdG8gbGlu
YXJvLW1tLXNpZy1sZWF2ZUBsaXN0cy5saW5hcm8ub3JnCg==
