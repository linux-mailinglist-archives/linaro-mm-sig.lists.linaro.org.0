Return-Path: <linaro-mm-sig-bounces@lists.linaro.org>
X-Original-To: lists+linaro-mm-sig@lfdr.de
Delivered-To: lists+linaro-mm-sig@lfdr.de
Received: from lists.linaro.org (lists.linaro.org [107.22.173.205])
	by mail.lfdr.de (Postfix) with ESMTPS id 5DB212ACC70
	for <lists+linaro-mm-sig@lfdr.de>; Tue, 10 Nov 2020 04:55:25 +0100 (CET)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 8E7766621A
	for <lists+linaro-mm-sig@lfdr.de>; Tue, 10 Nov 2020 03:55:24 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
	id 82BCB665F2; Tue, 10 Nov 2020 03:55:24 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on lists.linaro.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.9 required=5.0 tests=BAYES_00,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_HI,SPF_HELO_NONE autolearn=disabled version=3.4.2
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id D1161665A5;
	Tue, 10 Nov 2020 03:54:36 +0000 (UTC)
X-Original-To: linaro-mm-sig@lists.linaro.org
Delivered-To: linaro-mm-sig@lists.linaro.org
Received: from lists.linaro.org (localhost [127.0.0.1])
 by lists.linaro.org (Postfix) with ESMTP id CE3A461900
 for <linaro-mm-sig@lists.linaro.org>; Tue, 10 Nov 2020 03:54:31 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
 id B6A81665A5; Tue, 10 Nov 2020 03:54:31 +0000 (UTC)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by lists.linaro.org (Postfix) with ESMTPS id 3F5E661900
 for <linaro-mm-sig@lists.linaro.org>; Tue, 10 Nov 2020 03:54:30 +0000 (UTC)
Received: from sasha-vm.mshome.net (c-73-47-72-35.hsd1.nh.comcast.net
 [73.47.72.35])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
 (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id B838720731;
 Tue, 10 Nov 2020 03:54:27 +0000 (UTC)
From: Sasha Levin <sashal@kernel.org>
To: linux-kernel@vger.kernel.org,
	stable@vger.kernel.org
Date: Mon,  9 Nov 2020 22:53:12 -0500
Message-Id: <20201110035318.423757-49-sashal@kernel.org>
X-Mailer: git-send-email 2.27.0
In-Reply-To: <20201110035318.423757-1-sashal@kernel.org>
References: <20201110035318.423757-1-sashal@kernel.org>
MIME-Version: 1.0
X-stable: review
X-Patchwork-Hint: Ignore
X-Virus-Scanned: ClamAV using ClamSMTP
Cc: Sasha Levin <sashal@kernel.org>, linaro-mm-sig@lists.linaro.org,
 Geert Uytterhoeven <geert+renesas@glider.be>, dri-devel@lists.freedesktop.org,
 Wolfram Sang <wsa@kernel.org>, Wolfram Sang <wsa+renesas@sang-engineering.com>,
 linux-i2c@vger.kernel.org, Ulrich Hecht <uli+renesas@fpond.eu>,
 linux-media@vger.kernel.org
Subject: [Linaro-mm-sig] [PATCH AUTOSEL 5.9 49/55] i2c: sh_mobile: implement
	atomic transfers
X-BeenThere: linaro-mm-sig@lists.linaro.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: "Unified memory management interest group."
 <linaro-mm-sig.lists.linaro.org>
List-Unsubscribe: <https://lists.linaro.org/mailman/options/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=unsubscribe>
List-Archive: <http://lists.linaro.org/pipermail/linaro-mm-sig/>
List-Post: <mailto:linaro-mm-sig@lists.linaro.org>
List-Help: <mailto:linaro-mm-sig-request@lists.linaro.org?subject=help>
List-Subscribe: <https://lists.linaro.org/mailman/listinfo/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linaro-mm-sig-bounces@lists.linaro.org
Sender: "Linaro-mm-sig" <linaro-mm-sig-bounces@lists.linaro.org>
X-Virus-Scanned: ClamAV using ClamSMTP

RnJvbTogVWxyaWNoIEhlY2h0IDx1bGkrcmVuZXNhc0BmcG9uZC5ldT4KClsgVXBzdHJlYW0gY29t
bWl0IGE0OWNjMWZlOWQ2NGEyZGM0ZTE5YjU5OTIwNGY0MDNlNWQyNWY0NGIgXQoKSW1wbGVtZW50
cyBhdG9taWMgdHJhbnNmZXJzIHRvIGZpeCByZWJvb3Qvc2h1dGRvd24gb24gcjhhNzc5MCBMYWdl
ciBhbmQKc2ltaWxhciBib2FyZHMuCgpTaWduZWQtb2ZmLWJ5OiBVbHJpY2ggSGVjaHQgPHVsaSty
ZW5lc2FzQGZwb25kLmV1PgpUZXN0ZWQtYnk6IFdvbGZyYW0gU2FuZyA8d3NhK3JlbmVzYXNAc2Fu
Zy1lbmdpbmVlcmluZy5jb20+ClRlc3RlZC1ieTogR2VlcnQgVXl0dGVyaG9ldmVuIDxnZWVydCty
ZW5lc2FzQGdsaWRlci5iZT4KW3dzYTogc29tZSB3aGl0ZXNwYWNlIGZpeGluZ10KU2lnbmVkLW9m
Zi1ieTogV29sZnJhbSBTYW5nIDx3c2FAa2VybmVsLm9yZz4KU2lnbmVkLW9mZi1ieTogU2FzaGEg
TGV2aW4gPHNhc2hhbEBrZXJuZWwub3JnPgotLS0KIGRyaXZlcnMvaTJjL2J1c3Nlcy9pMmMtc2hf
bW9iaWxlLmMgfCA4NiArKysrKysrKysrKysrKysrKysrKysrKy0tLS0tLS0KIDEgZmlsZSBjaGFu
Z2VkLCA2NiBpbnNlcnRpb25zKCspLCAyMCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2kyYy9idXNzZXMvaTJjLXNoX21vYmlsZS5jIGIvZHJpdmVycy9pMmMvYnVzc2VzL2kyYy1z
aF9tb2JpbGUuYwppbmRleCBjYWI3MjU1NTk5OTkxLi5iZGQ2MDc3MDc3OWFkIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2kyYy9idXNzZXMvaTJjLXNoX21vYmlsZS5jCisrKyBiL2RyaXZlcnMvaTJjL2J1
c3Nlcy9pMmMtc2hfbW9iaWxlLmMKQEAgLTEyOSw2ICsxMjksNyBAQCBzdHJ1Y3Qgc2hfbW9iaWxl
X2kyY19kYXRhIHsKIAlpbnQgc3I7CiAJYm9vbCBzZW5kX3N0b3A7CiAJYm9vbCBzdG9wX2FmdGVy
X2RtYTsKKwlib29sIGF0b21pY194ZmVyOwogCiAJc3RydWN0IHJlc291cmNlICpyZXM7CiAJc3Ry
dWN0IGRtYV9jaGFuICpkbWFfdHg7CkBAIC0zMzAsMTMgKzMzMSwxNSBAQCBzdGF0aWMgdW5zaWdu
ZWQgY2hhciBpMmNfb3Aoc3RydWN0IHNoX21vYmlsZV9pMmNfZGF0YSAqcGQsIGVudW0gc2hfbW9i
aWxlX2kyY19vcAogCQlyZXQgPSBpaWNfcmQocGQsIElDRFIpOwogCQlicmVhazsKIAljYXNlIE9Q
X1JYX1NUT1A6IC8qIGVuYWJsZSBEVEUgaW50ZXJydXB0LCBpc3N1ZSBzdG9wICovCi0JCWlpY193
cihwZCwgSUNJQywKLQkJICAgICAgIElDSUNfRFRFRSB8IElDSUNfV0FJVEUgfCBJQ0lDX0FMRSB8
IElDSUNfVEFDS0UpOworCQlpZiAoIXBkLT5hdG9taWNfeGZlcikKKwkJCWlpY193cihwZCwgSUNJ
QywKKwkJCSAgICAgICBJQ0lDX0RURUUgfCBJQ0lDX1dBSVRFIHwgSUNJQ19BTEUgfCBJQ0lDX1RB
Q0tFKTsKIAkJaWljX3dyKHBkLCBJQ0NSLCBJQ0NSX0lDRSB8IElDQ1JfUkFDSyk7CiAJCWJyZWFr
OwogCWNhc2UgT1BfUlhfU1RPUF9EQVRBOiAvKiBlbmFibGUgRFRFIGludGVycnVwdCwgcmVhZCBk
YXRhLCBpc3N1ZSBzdG9wICovCi0JCWlpY193cihwZCwgSUNJQywKLQkJICAgICAgIElDSUNfRFRF
RSB8IElDSUNfV0FJVEUgfCBJQ0lDX0FMRSB8IElDSUNfVEFDS0UpOworCQlpZiAoIXBkLT5hdG9t
aWNfeGZlcikKKwkJCWlpY193cihwZCwgSUNJQywKKwkJCSAgICAgICBJQ0lDX0RURUUgfCBJQ0lD
X1dBSVRFIHwgSUNJQ19BTEUgfCBJQ0lDX1RBQ0tFKTsKIAkJcmV0ID0gaWljX3JkKHBkLCBJQ0RS
KTsKIAkJaWljX3dyKHBkLCBJQ0NSLCBJQ0NSX0lDRSB8IElDQ1JfUkFDSyk7CiAJCWJyZWFrOwpA
QCAtNDI5LDcgKzQzMiw4IEBAIHN0YXRpYyBpcnFyZXR1cm5fdCBzaF9tb2JpbGVfaTJjX2lzcihp
bnQgaXJxLCB2b2lkICpkZXZfaWQpCiAKIAlpZiAod2FrZXVwKSB7CiAJCXBkLT5zciB8PSBTV19E
T05FOwotCQl3YWtlX3VwKCZwZC0+d2FpdCk7CisJCWlmICghcGQtPmF0b21pY194ZmVyKQorCQkJ
d2FrZV91cCgmcGQtPndhaXQpOwogCX0KIAogCS8qIGRlZmVhdCB3cml0ZSBwb3N0aW5nIHRvIGF2
b2lkIHNwdXJpb3VzIFdBSVQgaW50ZXJydXB0cyAqLwpAQCAtNTgxLDYgKzU4NSw5IEBAIHN0YXRp
YyB2b2lkIHN0YXJ0X2NoKHN0cnVjdCBzaF9tb2JpbGVfaTJjX2RhdGEgKnBkLCBzdHJ1Y3QgaTJj
X21zZyAqdXNyX21zZywKIAlwZC0+cG9zID0gLTE7CiAJcGQtPnNyID0gMDsKIAorCWlmIChwZC0+
YXRvbWljX3hmZXIpCisJCXJldHVybjsKKwogCXBkLT5kbWFfYnVmID0gaTJjX2dldF9kbWFfc2Fm
ZV9tc2dfYnVmKHBkLT5tc2csIDgpOwogCWlmIChwZC0+ZG1hX2J1ZikKIAkJc2hfbW9iaWxlX2ky
Y194ZmVyX2RtYShwZCk7CkBAIC02MzcsMTUgKzY0NCwxMyBAQCBzdGF0aWMgaW50IHBvbGxfYnVz
eShzdHJ1Y3Qgc2hfbW9iaWxlX2kyY19kYXRhICpwZCkKIAlyZXR1cm4gaSA/IDAgOiAtRVRJTUVE
T1VUOwogfQogCi1zdGF0aWMgaW50IHNoX21vYmlsZV9pMmNfeGZlcihzdHJ1Y3QgaTJjX2FkYXB0
ZXIgKmFkYXB0ZXIsCi0JCQkgICAgICBzdHJ1Y3QgaTJjX21zZyAqbXNncywKLQkJCSAgICAgIGlu
dCBudW0pCitzdGF0aWMgaW50IHNoX21vYmlsZV94ZmVyKHN0cnVjdCBzaF9tb2JpbGVfaTJjX2Rh
dGEgKnBkLAorCQkJIHN0cnVjdCBpMmNfbXNnICptc2dzLCBpbnQgbnVtKQogewotCXN0cnVjdCBz
aF9tb2JpbGVfaTJjX2RhdGEgKnBkID0gaTJjX2dldF9hZGFwZGF0YShhZGFwdGVyKTsKIAlzdHJ1
Y3QgaTJjX21zZwkqbXNnOwogCWludCBlcnIgPSAwOwogCWludCBpOwotCWxvbmcgdGltZW91dDsK
Kwlsb25nIHRpbWVfbGVmdDsKIAogCS8qIFdha2UgdXAgZGV2aWNlIGFuZCBlbmFibGUgY2xvY2sg
Ki8KIAlwbV9ydW50aW1lX2dldF9zeW5jKHBkLT5kZXYpOwpAQCAtNjYyLDE1ICs2NjcsMzUgQEAg
c3RhdGljIGludCBzaF9tb2JpbGVfaTJjX3hmZXIoc3RydWN0IGkyY19hZGFwdGVyICphZGFwdGVy
LAogCQlpZiAoZG9fc3RhcnQpCiAJCQlpMmNfb3AocGQsIE9QX1NUQVJUKTsKIAotCQkvKiBUaGUg
aW50ZXJydXB0IGhhbmRsZXIgdGFrZXMgY2FyZSBvZiB0aGUgcmVzdC4uLiAqLwotCQl0aW1lb3V0
ID0gd2FpdF9ldmVudF90aW1lb3V0KHBkLT53YWl0LAotCQkJCSAgICAgICBwZC0+c3IgJiAoSUNT
Ul9UQUNLIHwgU1dfRE9ORSksCi0JCQkJICAgICAgIGFkYXB0ZXItPnRpbWVvdXQpOwotCi0JCS8q
ICdzdG9wX2FmdGVyX2RtYScgdGVsbHMgaWYgRE1BIHRyYW5zZmVyIHdhcyBjb21wbGV0ZSAqLwot
CQlpMmNfcHV0X2RtYV9zYWZlX21zZ19idWYocGQtPmRtYV9idWYsIHBkLT5tc2csIHBkLT5zdG9w
X2FmdGVyX2RtYSk7CisJCWlmIChwZC0+YXRvbWljX3hmZXIpIHsKKwkJCXVuc2lnbmVkIGxvbmcg
aiA9IGppZmZpZXMgKyBwZC0+YWRhcC50aW1lb3V0OworCisJCQl0aW1lX2xlZnQgPSB0aW1lX2Jl
Zm9yZV9lcShqaWZmaWVzLCBqKTsKKwkJCXdoaWxlICh0aW1lX2xlZnQgJiYKKwkJCSAgICAgICAh
KHBkLT5zciAmIChJQ1NSX1RBQ0sgfCBTV19ET05FKSkpIHsKKwkJCQl1bnNpZ25lZCBjaGFyIHNy
ID0gaWljX3JkKHBkLCBJQ1NSKTsKKworCQkJCWlmIChzciAmIChJQ1NSX0FMICAgfCBJQ1NSX1RB
Q0sgfAorCQkJCQkgIElDU1JfV0FJVCB8IElDU1JfRFRFKSkgeworCQkJCQlzaF9tb2JpbGVfaTJj
X2lzcigwLCBwZCk7CisJCQkJCXVkZWxheSgxNTApOworCQkJCX0gZWxzZSB7CisJCQkJCWNwdV9y
ZWxheCgpOworCQkJCX0KKwkJCQl0aW1lX2xlZnQgPSB0aW1lX2JlZm9yZV9lcShqaWZmaWVzLCBq
KTsKKwkJCX0KKwkJfSBlbHNlIHsKKwkJCS8qIFRoZSBpbnRlcnJ1cHQgaGFuZGxlciB0YWtlcyBj
YXJlIG9mIHRoZSByZXN0Li4uICovCisJCQl0aW1lX2xlZnQgPSB3YWl0X2V2ZW50X3RpbWVvdXQo
cGQtPndhaXQsCisJCQkJCXBkLT5zciAmIChJQ1NSX1RBQ0sgfCBTV19ET05FKSwKKwkJCQkJcGQt
PmFkYXAudGltZW91dCk7CisKKwkJCS8qICdzdG9wX2FmdGVyX2RtYScgdGVsbHMgaWYgRE1BIHhm
ZXIgd2FzIGNvbXBsZXRlICovCisJCQlpMmNfcHV0X2RtYV9zYWZlX21zZ19idWYocGQtPmRtYV9i
dWYsIHBkLT5tc2csCisJCQkJCQkgcGQtPnN0b3BfYWZ0ZXJfZG1hKTsKKwkJfQogCi0JCWlmICgh
dGltZW91dCkgeworCQlpZiAoIXRpbWVfbGVmdCkgewogCQkJZGV2X2VycihwZC0+ZGV2LCAiVHJh
bnNmZXIgcmVxdWVzdCB0aW1lZCBvdXRcbiIpOwogCQkJaWYgKHBkLT5kbWFfZGlyZWN0aW9uICE9
IERNQV9OT05FKQogCQkJCXNoX21vYmlsZV9pMmNfY2xlYW51cF9kbWEocGQpOwpAQCAtNjk2LDE0
ICs3MjEsMzUgQEAgc3RhdGljIGludCBzaF9tb2JpbGVfaTJjX3hmZXIoc3RydWN0IGkyY19hZGFw
dGVyICphZGFwdGVyLAogCXJldHVybiBlcnIgPzogbnVtOwogfQogCitzdGF0aWMgaW50IHNoX21v
YmlsZV9pMmNfeGZlcihzdHJ1Y3QgaTJjX2FkYXB0ZXIgKmFkYXB0ZXIsCisJCQkgICAgICBzdHJ1
Y3QgaTJjX21zZyAqbXNncywKKwkJCSAgICAgIGludCBudW0pCit7CisJc3RydWN0IHNoX21vYmls
ZV9pMmNfZGF0YSAqcGQgPSBpMmNfZ2V0X2FkYXBkYXRhKGFkYXB0ZXIpOworCisJcGQtPmF0b21p
Y194ZmVyID0gZmFsc2U7CisJcmV0dXJuIHNoX21vYmlsZV94ZmVyKHBkLCBtc2dzLCBudW0pOwor
fQorCitzdGF0aWMgaW50IHNoX21vYmlsZV9pMmNfeGZlcl9hdG9taWMoc3RydWN0IGkyY19hZGFw
dGVyICphZGFwdGVyLAorCQkJCSAgICAgc3RydWN0IGkyY19tc2cgKm1zZ3MsCisJCQkJICAgICBp
bnQgbnVtKQoreworCXN0cnVjdCBzaF9tb2JpbGVfaTJjX2RhdGEgKnBkID0gaTJjX2dldF9hZGFw
ZGF0YShhZGFwdGVyKTsKKworCXBkLT5hdG9taWNfeGZlciA9IHRydWU7CisJcmV0dXJuIHNoX21v
YmlsZV94ZmVyKHBkLCBtc2dzLCBudW0pOworfQorCiBzdGF0aWMgdTMyIHNoX21vYmlsZV9pMmNf
ZnVuYyhzdHJ1Y3QgaTJjX2FkYXB0ZXIgKmFkYXB0ZXIpCiB7CiAJcmV0dXJuIEkyQ19GVU5DX0ky
QyB8IEkyQ19GVU5DX1NNQlVTX0VNVUwgfCBJMkNfRlVOQ19QUk9UT0NPTF9NQU5HTElORzsKIH0K
IAogc3RhdGljIGNvbnN0IHN0cnVjdCBpMmNfYWxnb3JpdGhtIHNoX21vYmlsZV9pMmNfYWxnb3Jp
dGhtID0gewotCS5mdW5jdGlvbmFsaXR5CT0gc2hfbW9iaWxlX2kyY19mdW5jLAotCS5tYXN0ZXJf
eGZlcgk9IHNoX21vYmlsZV9pMmNfeGZlciwKKwkuZnVuY3Rpb25hbGl0eSA9IHNoX21vYmlsZV9p
MmNfZnVuYywKKwkubWFzdGVyX3hmZXIgPSBzaF9tb2JpbGVfaTJjX3hmZXIsCisJLm1hc3Rlcl94
ZmVyX2F0b21pYyA9IHNoX21vYmlsZV9pMmNfeGZlcl9hdG9taWMsCiB9OwogCiBzdGF0aWMgY29u
c3Qgc3RydWN0IGkyY19hZGFwdGVyX3F1aXJrcyBzaF9tb2JpbGVfaTJjX3F1aXJrcyA9IHsKLS0g
CjIuMjcuMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18K
TGluYXJvLW1tLXNpZyBtYWlsaW5nIGxpc3QKTGluYXJvLW1tLXNpZ0BsaXN0cy5saW5hcm8ub3Jn
Cmh0dHBzOi8vbGlzdHMubGluYXJvLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2xpbmFyby1tbS1zaWcK
