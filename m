Return-Path: <linaro-mm-sig-bounces@lists.linaro.org>
X-Original-To: lists+linaro-mm-sig@lfdr.de
Delivered-To: lists+linaro-mm-sig@lfdr.de
Received: from lists.linaro.org (lists.linaro.org [107.22.173.205])
	by mail.lfdr.de (Postfix) with ESMTPS id 995442199EE
	for <lists+linaro-mm-sig@lfdr.de>; Thu,  9 Jul 2020 09:30:33 +0200 (CEST)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id ECBD96602F
	for <lists+linaro-mm-sig@lfdr.de>; Thu,  9 Jul 2020 07:30:29 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
	id DEA0866034; Thu,  9 Jul 2020 07:30:29 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on lists.linaro.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.9 required=5.0 tests=BAYES_00,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_BLOCKED,RCVD_IN_MSPIKE_H2,SPF_HELO_NONE
	autolearn=disabled version=3.4.2
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id BD88266027;
	Thu,  9 Jul 2020 07:29:39 +0000 (UTC)
X-Original-To: linaro-mm-sig@lists.linaro.org
Delivered-To: linaro-mm-sig@lists.linaro.org
Received: from lists.linaro.org (localhost [127.0.0.1])
 by lists.linaro.org (Postfix) with ESMTP id A4DE060C31
 for <linaro-mm-sig@lists.linaro.org>; Thu,  9 Jul 2020 07:29:36 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
 id 8B60D66027; Thu,  9 Jul 2020 07:29:36 +0000 (UTC)
Received: from mail-wr1-f66.google.com (mail-wr1-f66.google.com
 [209.85.221.66])
 by lists.linaro.org (Postfix) with ESMTPS id 3770360C31
 for <linaro-mm-sig@lists.linaro.org>; Thu,  9 Jul 2020 07:29:34 +0000 (UTC)
Received: by mail-wr1-f66.google.com with SMTP id j4so1188071wrp.10
 for <linaro-mm-sig@lists.linaro.org>; Thu, 09 Jul 2020 00:29:34 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:mime-version:references:in-reply-to:from:date
 :message-id:subject:to:cc;
 bh=QLf3JWPj0alwMi3/QRK8jDSx0ygp/lxS9WUKSf5Y9tw=;
 b=Ah4tkPaYXo6o5nI9lPHiKsjE53cyhUpOXoQlmpYUq5Nsw6jayWZu7dXOOXNdBqtSD0
 xK8357QfMaUNHozWie+CB+XNx8ae64slDzevCrZ7bWUk5IPJtmTNjU5/NkPuGHY/kFSU
 b4Sl51pJYP78nxG8JtqBNaN5K+Mjcq7FsR+Oty4gL6OpCAmL7xfBSKHjG3i8T1KsWlug
 dsr+jxNujlZQ3xO5A5T+8cdCR/PQrwDdbqvxpkGhjgCSr3WzAxhYGK7I6P11J6xejaZ/
 JZU6/U/jeuOMDu5UbrouzAJE4y4T6zGroNyWa7GzwzDuLXK6j7kp4TPFiz8VBoqLJPDN
 Gm8A==
X-Gm-Message-State: AOAM532pJ95r3PW3oNkXo1EgyO8AmddZ3NW89PgVHpiYpRCacMJ9KH10
 FTJhN7k7McNopdgGqXl3adW3psEnwOMlIeEFsi13SA==
X-Google-Smtp-Source: ABdhPJyvjHsNIlAxHFL2C3MHVJKQZNLaDmrtK3luRNyuNIM3xw0dKhfnraR2CdqxwXkaHTztP0s2DSUpfaQvwqc35Hg=
X-Received: by 2002:a5d:664e:: with SMTP id f14mr62231186wrw.6.1594279773059; 
 Thu, 09 Jul 2020 00:29:33 -0700 (PDT)
MIME-Version: 1.0
References: <20200604081224.863494-1-daniel.vetter@ffwll.ch>
 <20200604081224.863494-4-daniel.vetter@ffwll.ch>
 <159186243606.1506.4437341616828968890@build.alporthouse.com>
 <CAPM=9ty6r1LuXAH_rf98GH0R9yN3x8xzKPjZG3QyvokpQBR-Hg@mail.gmail.com>
 <CAPj87rM0S2OPssf+WA+pjanT-0Om3yuUM1zUJCv4qTx5VYE=Fw@mail.gmail.com>
 <159255511144.7737.12635440776531222029@build.alporthouse.com>
 <CAKMK7uHEwj6jiZkRZ5PaCUNWcuU9oE4KYm4XHZwHnFzEuChZ7w@mail.gmail.com>
 <159255801588.7737.4425728073225310839@build.alporthouse.com>
 <20200619094309.GT20149@phenom.ffwll.local>
In-Reply-To: <20200619094309.GT20149@phenom.ffwll.local>
From: Daniel Stone <daniel@fooishbar.org>
Date: Thu, 9 Jul 2020 08:29:21 +0100
Message-ID: <CAPj87rOMzBUBWv7kJRvbX3tor-v=3=ZuGeRu0Ws8BOJ=OxX3XA@mail.gmail.com>
To: Chris Wilson <chris@chris-wilson.co.uk>, 
 amd-gfx mailing list <amd-gfx@lists.freedesktop.org>,
 linux-rdma <linux-rdma@vger.kernel.org>, 
 Intel Graphics Development <intel-gfx@lists.freedesktop.org>,
 LKML <linux-kernel@vger.kernel.org>, 
 DRI Development <dri-devel@lists.freedesktop.org>, 
 "moderated list:DMA BUFFER SHARING FRAMEWORK" <linaro-mm-sig@lists.linaro.org>,
 Thomas Hellstrom <thomas.hellstrom@intel.com>,
 Daniel Vetter <daniel.vetter@intel.com>, 
 Mika Kuoppala <mika.kuoppala@intel.com>,
 =?UTF-8?Q?Christian_K=C3=B6nig?= <christian.koenig@amd.com>, 
 Linux Media Mailing List <linux-media@vger.kernel.org>
X-Virus-Scanned: ClamAV using ClamSMTP
Subject: Re: [Linaro-mm-sig] [Intel-gfx] [PATCH 03/18] dma-fence: basic
	lockdep annotations
X-BeenThere: linaro-mm-sig@lists.linaro.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: "Unified memory management interest group."
 <linaro-mm-sig.lists.linaro.org>
List-Unsubscribe: <https://lists.linaro.org/mailman/options/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=unsubscribe>
List-Archive: <http://lists.linaro.org/pipermail/linaro-mm-sig/>
List-Post: <mailto:linaro-mm-sig@lists.linaro.org>
List-Help: <mailto:linaro-mm-sig-request@lists.linaro.org?subject=help>
List-Subscribe: <https://lists.linaro.org/mailman/listinfo/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linaro-mm-sig-bounces@lists.linaro.org
Sender: "Linaro-mm-sig" <linaro-mm-sig-bounces@lists.linaro.org>
X-Virus-Scanned: ClamAV using ClamSMTP

SGksCkp1bXBpbmcgaW4gYWZ0ZXIgYSBjb3VwbGUgb2Ygd2Vla3Mgd2hlcmUgSSd2ZSBwYWdlZCBt
b3N0IGV2ZXJ5dGhpbmcKb3V0IG9mIG15IGJyYWluIC4uLgoKT24gRnJpLCAxOSBKdW4gMjAyMCBh
dCAxMDo0MywgRGFuaWVsIFZldHRlciA8ZGFuaWVsQGZmd2xsLmNoPiB3cm90ZToKPiBPbiBGcmks
IEp1biAxOSwgMjAyMCBhdCAxMDoxMzozNUFNICswMTAwLCBDaHJpcyBXaWxzb24gd3JvdGU6Cj4g
PiA+IFRoZSBwcm9wb3NlZCBwYXRjaGVzIG1pZ2h0IHZlcnkgd2VsbCBlbmNvZGUgdGhlIHdyb25n
IGNvbnRyYWN0LCB0aGF0J3MKPiA+ID4gYWxsIHVwIGZvciBkaXNjdXNzaW9uLiBCdXQgZnVuZGFt
ZW50YWxseSBxdWVzdGlvbmluZyB0aGF0IHdlIG5lZWQgb25lCj4gPiA+IGlzIG1pc3Npbmcgd2hh
dCB1cHN0cmVhbSBpcyBhbGwgYWJvdXQuCj4gPgo+ID4gVGhlbiBJIGhhdmUgbm90IGNsZWFybHkg
Y29tbXVuaWNhdGVkLCBhcyBteSBvcGluaW9uIGlzIG5vdCB0aGF0Cj4gPiB2YWxpZGF0aW9uIGlz
IHdvcnRobGVzcywgYnV0IHRoYXQgdGhlIGltcGxlbWVudGF0aW9uIGlzIGVuc2hyaW5pbmcgYQo+
ID4gZ2xvYmFsIHByb3BlcnR5IG9uIGEgbG93IGxldmVsIHByaW1pdGl2ZSB0aGF0IHByZXZlbnRz
IGl0IGZyb20gYmVpbmcKPiA+IHVzZWQgZWxzZXdoZXJlLiBBbmQgSSB3YW50IHRvIHJlcGxhY2Ug
Y29tcGxldGlvbiBbY2hhaW5zXSB3aXRoIGZlbmNlcywgYW5kCj4gPiBiaW8gd2l0aCBmZW5jZXMs
IGFuZCBjbG9zdXJlcyB3aXRoIGZlbmNlcywgYW5kIHdoYXQgb3RoZXIgZXF1aXZhbGVuY2llcwo+
ID4gdGhlcmUgYXJlIGluIHRoZSBrZXJuZWwuIFRoZSBmZW5jZSBpcyBhcyBjZW50cmFsIGEgbG9j
a2luZyBjb25zdHJ1Y3QgYXMKPiA+IHN0cnVjdCBjb21wbGV0aW9uIGFuZCBkZXNlcnZlcyB0byBi
ZSBhIGZvdW5kYXRpb25hbCBwcmltaXRpdmUgcHJvdmlkZWQKPiA+IGJ5IGtlcm5lbC8gdXNlZCB0
aHJvdWdob3V0IGFsbCBkcml2ZXJzIGZvciBkaXNjcmV0ZSBwcm9ibGVtIGRvbWFpbnMuCj4gPgo+
ID4gVGhpcyBpcyBuYXJyb3dpbmcgZG1hX2ZlbmNlIHdoZXJlYnkgYWRkaW5nCj4gPiAgICAgICBz
dHJ1Y3QgbG9ja2RlcF9tYXAgKmRtYV9mZW5jZTo6d2FpdF9tYXAKPiA+IGFuZCBhbm5vdGF0aW5n
IGxpbmthZ2UsIGFsbG93cyB5b3UgdG8gY29udGludWUgdG8gc3BlY2lmeSB0aGF0IGFsbAo+ID4g
ZG1hX2ZlbmNlIHVzZWQgZm9yIGEgcGFydGljdWxhciBwdXJwb3NlIG11c3QgZm9sbG93IGNvbW1v
biBydWxlcywKPiA+IHdpdGhvdXQgcmVzdHJpY3RpbmcgdGhlIHByaW1pdGl2ZSBmb3IgdXNlcyBv
dXRzaWRlIG9mIHRoaXMgc2NvcGUuCj4KPiBTb21ld2hlcmUgZWxzZSBpbiB0aGlzIHRocmVhZCBJ
IGhhZCBkaXNjdXNzaW9ucyB3aXRoIEphc29uIEd1bnRob3JwZSBhYm91dAo+IHRoaXMgdG9waWMu
IEl0IG1pZ2h0IG1heWJlIGNoYW5nZSBzb21ld2hhdCBkZXBlbmRpbmcgdXBvbiBleGFjdCBydWxl
cywgYnV0Cj4gaGlzIHRha2UgaXMgdmVyeSBtdWNoICJJIGRvbid0IHdhbnQgZG1hX2ZlbmNlIGlu
IHJkbWEiLiBPciBwcmV0dHkgY2xvc2UgdG8KPiB0aGF0IGF0IGxlYXN0Lgo+Cj4gU2ltaWxhciBk
aXNjdXNzaW9ucyB3aXRoIGhhYmFuYWxhYnMsIHRoZXkncmUgdXNpbmcgZG1hX2ZlbmNlIGludGVy
bmFsbHkKPiB3aXRob3V0IGFueSBvZiB0aGUgdWFwaS4gRGlzY3Vzc2lvbiB0aGVyZSBoYXMgYWxz
byBub3cgY29uY2x1ZGVkIHRoYXQgaXQncwo+IGJlc3QgaWYgdGhleSByZW1vdmUgdGhlbSwgYW5k
IHNpbXBseSBzd2l0Y2ggb3ZlciB0byBhIHdhaXRfcXVldWUgb3IKPiBjb21wbGV0aW9uIGxpa2Ug
ZXZlcnkgb3RoZXIgZHJpdmVyIGRvZXMuCj4KPiBUaGUgbmV4dCByb3VuZCBvZiB0aGUgcGF0Y2hl
cyBhbHJlYWR5IGhhdmUgYSBwYXJhZ3JhcGggdG8gYXQgbGVhc3QKPiBzb21ld2hhdCBsaW1pdCBo
b3cgbm9uLWdwdSBkcml2ZXJzIHVzZSBkbWFfZmVuY2UuIEFuZCBJIGd1ZXNzIGFjdHVhbAo+IGNv
bnNlbnN1cyBtaWdodCBiZSBwb2ludGluZyBldmVuIG1vcmUgc3Ryb25nbHkgYXQgZG1hX2ZlbmNl
IGJlaW5nIHNvbGVseQo+IHNvbWV0aGluZyBmb3IgZ3B1cyBhbmQgY2xvc2VseSByZWxhdGVkIHN1
YnN5c3RlbSAobWF5YmUgbWVkaWEpIGZvciBzeW5jaW5nCj4gZG1hLWJ1ZiBhY2Nlc3MuCj4KPiBT
byBkbWFfZmVuY2UgYXMgZ2VuZXJhbCByZXBsYWNlbWVudCBmb3IgY29tcGxldGlvbiBjaGFpbnMg
SSB0aGluayBqdXN0Cj4gd29udCBoYXBwZW4uCj4KPiBXaGF0IG1pZ2h0IG1ha2Ugc2Vuc2UgaXMg
aWYgZS5nLiB0aGUgbG9ja2RlcCBhbm5vdGF0aW9ucyBjb3VsZCBiZSByZXVzZWQsCj4gYXQgbGVh
c3QgaW4gZGVzaWduLCBmb3Igd2FpdF9xdWV1ZSBvciBjb21wbGV0aW9uIG9yIGFueXRoaW5nIGVs
c2UKPiByZWFsbHkuIEkgZG8gdGhpbmsgdGhhdCBoYXMgYSBmYWlyIGNoYW5jZSBjb21wYXJlZCB0
byB0aGUgYXV0b21hZ2ljCj4gY3Jvc3MtcmVsZWFzZSBhbm5vdGF0aW9ucyBhcHByb2FjaCwgd2hp
Y2ggcmVsaWVkIHdheSB0b28gaGVhdmlseSBvbgo+IGd1ZXNzaW5nIHdoZXJlIGJhcnJpZXJzIGFy
ZS4gTXkgZXhwZXJpZW5jZSBmcm9tIGp1c3QgYSBiaXQgb2YgcGxheWluZwo+IGFyb3VuZCB3aXRo
IHRoZXNlIHBhdGNoZXMgaGVyZSBhbmQgZGlzY3Vzc2luZyB0aGVtIHdpdGggb3RoZXIgZHJpdmVy
Cj4gbWFpbnRhaW5lcnMgaXMgdGhhdCBhY2N1cmF0ZWx5IGRlY2lkaW5nIHdoZXJlIGNyaXRpY2Fs
IHNlY3Rpb25zIHN0YXJ0IGFuZAo+IGVuZCBpcyBhIGpvYiBmb3IgaHVtYW5zIG9ubHkuIEFuZCBp
ZiB5b3UgZ2V0IGl0IHdyb25nLCB5b3Ugd2lsbCBoYXZlIGEKPiBmYWxzZSBwb3NpdGl2ZS4KPgo+
IEFuZCB5b3UncmUgaW5kZWVkIGNvcnJlY3QgdGhhdCBpZiB3ZSdkIGRvIGFubm90YXRpb25zIGZv
ciBjb21wbGV0aW9ucyBhbmQKPiB3YWl0IHF1ZXVlcywgdGhlbiB0aGF0IHdvdWxkIG5lZWQgdG8g
aGF2ZSBhIGNsYXNzIHBlciBzZW1hbnRpY2FsbHkKPiBlcXVpdmFsZW50IHVzZXIsIGxpa2Ugd2Ug
aGF2ZSBsb2NrZGVwIGNsYXNzZXMgZm9yIG11dGV4ZXMsIG5vdCBqdXN0IG9uZQo+IG92ZXJhbGwu
Cj4KPiBCdXQgZG1hX2ZlbmNlIG90b2ggaXMgc29tZXRoaW5nIHZlcnkgc3BlY2lmaWMsIHdoaWNo
IGNvbWVzIHdpdGggdmVyeQo+IHNwZWNpZmljIHJ1bGVzIGF0dGFjaGVkIC0gaXQncyBub3QgYSBn
ZW5lcmljIHdhaXRfcXVldWUgYXQgYWxsLiBPcmlnaW5hbGx5Cj4gaXQgZGlkIHN0YXJ0IG91dCBh
cyBvbmUgZXZlbiwgYnV0IGl0IGlzIGEgdmVyeSBzcGVjaWFsaXplZCB3YWl0X3F1ZXVlLgo+Cj4g
U28gdGhlcmUncyBpbW8gdHdvIGNhc2VzOgo+Cj4gLSBZb3VyIGNvbXBsZXRpb24gaXMgZW50aXJl
bHkgb3J0aG9nb25hbCBvZiBkbWFfZmVuY2VzLCBhbmQgY2FuIG5ldmVyIGV2ZXIKPiAgIGJsb2Nr
IGEgZG1hX2ZlbmNlLiBEb24ndCB1c2UgZG1hX2ZlbmNlIGZvciB0aGlzLCBhbmQgbm8gcHJvYmxl
bS4gSXQncwo+ICAganVzdCBhbm90aGVyIHdhaXRfcXVldWUgc29tZXdoZXJlLgo+Cj4gLSBZb3Vy
IGNvbXBsZXRpb24gY2FuIGV2ZW50dWFsbHksIG1heWJlIHRocm91Z2ggbG90cyBvZiBjb252b2x1
dGlvbnMgYW5kCj4gICBkZXBkZW5jaWVzLCBibG9jayBhIGRtYV9mZW5jZS4gSW4gdGhhdCBjYXNl
IGZ1bGwgZG1hX2ZlbmNlIHJ1bGVzIGFwcGx5LAo+ICAgYW5kIHRoZSBvbmx5IHRoaW5nIHlvdSBj
YW4gZG8gd2l0aCBhIGN1c3RvbSBhbm5vdGF0aW9uIGlzIG1ha2UgdGhlIHJ1bGVzCj4gICBldmVu
IHN0cmljdGVyLiBFLmcuIGlmIGEgc3ViLXRpbWVsaW5lIGluIHRoZSBzY2hlZHVsZXIgaXNuJ3Qg
YWxsb3dlZCB0bwo+ICAgdGFrZSBjZXJ0YWluIHNjaGVkdWxlciBsb2Nrcy4gQnV0IHRoZSB1c2Vy
c3BhY2UgdmlzaWJsZS9wdWJsaXNoZWQgZmVuY2UKPiAgIGRvIHRha2UgdGhlbSwgbWF5YmUgYXMg
cGFydCBvZiBjb21tYW5kIHN1Ym1pc3Npb24gb3IgcmV0aXJlbWVudC4KPiAgIEVudGlyZWx5IGh5
cG90ZXRoaWNhbCwgbm8gaWRlYSBhbnkgZHJpdmVyIGFjdHVhbGx5IG5lZWRzIHRoaXMuCgpJIGRv
bid0IGNsYWltIHRvIHVuZGVyc3RhbmQgdGhlIGltcGxlbWVudGF0aW9uIG9mIGk5MTUncyBzY2hl
ZHVsZXIgYW5kCkdFTSBoYW5kbGluZywgYW5kIGl0IHNlZW1zIGxpa2UgdGhlcmUncyBzb21lIHB1
YmxpYyBjb250ZXh0IG1pc3NpbmcKaGVyZS4gQnV0IHRvIG1lLCB0aGUgYWJvdmUgaXMgYSBnb29k
IHN0YXRlbWVudCBvZiB3aGF0IEkgKGFuZCBhIGxvdCBvZgpvdGhlciB1c2Vyc3BhY2UpIGhhdmUg
YmVlbiByZWx5aW5nIG9uIC0gdGhhdCBkbWEtZmVuY2UgaXMgYSB2ZXJ5CnRpZ2h0bHkgc2NvcGVk
IHRoaW5nIHdoaWNoIGlzIHZlcnkgcHJlZGljdGFibGUgYnV0IGluIGV4dHJlbWlzLgoKSXQgd291
bGQgYmUgZ3JlYXQgdG8gaGF2ZSBzb21ldGhpbmcgbGlrZSB0aGlzIGVuc2hyaW5lZCBpbiBkbWEt
ZmVuY2UKZG9jdW1lbnRhdGlvbiwgdmlzaWJsZSB0byBib3RoIGtlcm5lbCBhbmQgZXh0ZXJuYWwg
dXNlcnMuIFRoZQpwcm9wZXJ0aWVzIHdlJ3ZlIHNvIGZhciBiZWVuIGFzc3VtaW5nIGZvciB0aGUg
Z3JhcGhpY3MgcGlwZWxpbmUgLQpjb3ZlcmluZyBwcm9kdWN0aW9uICYgZXhlY3V0aW9uIG9mIHZl
cnRleC9mcmFnbWVudCB3b3JrbG9hZHMgb24gdGhlCkdQVSwgZnJhbWVidWZmZXIgZGlzcGxheSwg
YW5kIHRvIHRoZSBleHRlbnQgdGhpcyBpcyBuZWNlc3NhcnkKaW52b2x2aW5nIGNvbXB1dGUgLSBh
cmUgc29tZXRoaW5nIGxpa2UgdGhpczoKCkEgc2luZ2xlIGRtYS1mZW5jZSB3aXRoIG5vIGRlcGVu
ZGVuY2llcyByZXByZXNlbnRzICh0aGUgdGFpbCBvZikgYQp1bml0IG9mIHdvcmssIHdoaWNoIGhh
cyBiZWVuIGFsbCBidXQgY29tbWl0dGVkIHRvIHRoZSBoYXJkd2FyZS4gT25jZQpjb21taXR0ZWQg
dG8gdGhlIGhhcmR3YXJlLCB0aGlzIHdvcmsgd2lsbCBjb21wbGV0ZSAoc3VjY2Vzc2Z1bGx5IG9y
IGluCmVycm9yKSBpbiBib3VuZGVkIHRpbWUuIFRoZSB1bml0IG9mIHdvcmsgcmVmZXJyZWQgdG8g
YnkgYSBkbWEtZmVuY2UKbWF5IGNhcnJ5IGRlcGVuZGVuY2llcyBvbiBvdGhlciBkbWEtZmVuY2Vz
LCB3aGljaCBtdXN0IG9mIGNvdXJzZSBiZQpzdWJqZWN0IHRvIHRoZSBzYW1lIHJlc3RyaWN0aW9u
cyBhcyBhYm92ZS4gTm8gYWN0aW9uIGZyb20gYW55CnVzZXJzcGFjZSBjb21wb25lbnQgaXMgcmVx
dWlyZWQgdG8gZW5zdXJlIHRoYXQgdGhlIGNvbXBsZXRpb24gb2NjdXJzLgoKVGhlIGNhc2VzIEkg
a25vdyBvZiB3aGljaCBsZWdpdGltYXRlbHkgYmxvdyBob2xlcyBpbiB0aGlzIGFyZToKICAtIHRo
ZSB3b3JrIGlzIHNjaGVkdWxlZCBidXQgR1BVIGV4ZWN1dGlvbiByZXNvdXJjZSBjb250ZW50aW9u
CnByZXZlbnRzIGl0IGZyb20gY29tcGxldGlvbiwgZS5nLiBzb21ldGhpbmcgb24gYSBoaWdoZXIt
cHJpb3JpdHkKY29udGV4dCByZXBlYXRlZGx5IGdldHMgc2NoZWR1bGVkIGluIGZyb250IG9mIGl0
IC0gdGhpcyBpcyBPSyBiZWNhdXNlCmJ5IGRlZmluaXRpb24gaXQncyB3aGF0IHNob3VsZCBoYXBw
ZW4KICAtIHRoZSB3b3JrIGlzIHNjaGVkdWxlZCBidXQgQ1BVIGV4ZWN1dGlvbiByZXNvdXJjZSBj
b250ZW50aW9uCnByZXZlbnRzIGl0IGZyb20gY29tcGxldGlvbiwgZS5nLiB0aGUgRFJNIHNjaGVk
dWxlciBkb2VzIG5vdCBnZXQgdG8KdHJpZ2dlciB0aGUgaGFyZHdhcmUgdG8gZXhlY3V0ZSB0aGUg
d29yayAtIHRoaXMgaXMgT0sgYmVjYXVzZSBhdCB0aGlzCnBvaW50IHdlIGhhdmUgYSBiaWcgc3lz
dGVtLXdpZGUgcHJvYmxlbQogIC0gdGhlIHdvcmsgaXMgc2NoZWR1bGVkIGJ1dCBub24tZXhlY3V0
aW9uIHJlc291cmNlIGNvbnRlbnRpb24KcHJldmVudHMgaXQgZnJvbSBtYWtpbmcgcHJvZ3Jlc3Ms
IGUuZy4gVlJBTSBjb250ZW50aW9uIGFuZC9vciBhIHBhZ2luZwpzdG9ybSAtIHRoaXMgaXMgT0sg
YmVjYXVzZSBhZ2FpbiB3ZSBoYXZlIGEgbGFyZ2VyIHByb2JsZW0gaGVyZSBhbmQgd2UKY2FuJ3Qg
cmVhc29uYWJseSBleHBlY3QgdGhlIGRyaXZlciB0byBzb2x2ZSB0aGlzCiAgLSB0aGUgd29yayBp
cyBleGVjdXRlZCBidXQgZXhlY3V0aW9uIGRvZXMgbm90IGNvbXBsZXRlIGR1ZSB0byB0aGUKbmF0
dXJlIG9mIHRoZSB3b3JrLCBlLmcuIGEgY2hhaW4gb2Ygd29yayBjb250YWlucyBhIGhvc3RpbGUg
Y29tcHV0ZQpzaGFkZXIgd2hpY2ggZG9lcyBub3QgY29tcGxldGUgaW4gYW55IHJlYXNvbmFibGUg
dGltZSAtIHRoaXMgaXMgT0sKYmVjYXVzZSB3ZSByZXF1aXJlIFREUjsgZXZlbiB3aXRob3V0IGEg
c21hcnQgY29tcG9zaXRvciBkZXRlY3RpbmcKYmFzZWQgb24gZmVuY2Ugd2FpdHMgdGhhdCB0aGUg
d29yayBpcyB1bnN1aXRhYmxlIGFuZCBzaG91bGQgbm90IGhvbGQKdXAgb3RoZXIgd29yaywgdGhl
IGRyaXZlciB3aWxsIHByb2JhYmx5IGJhbiB0aGUgY29udGV4dCBhbmQgbG9jayBpdApvdXQgYW55
d2F5CgpUaGUgZmlyc3QgdGhyZWUgYXJlIGdlbmVyYWwgc3lzdGVtIHJlc291cmNlLW92ZXJsb2Fk
IGNhc2VzLCBubwpkaWZmZXJlbnQgZnJvbSB0aGUgQ1BVLXNpZGUgZXF1aXZhbGVudCB3aGVyZSBp
dCdzIHVwIHRvIHRoZSBhZG1pbiB0bwppbXBvc2UgdWxpbWl0cyB0byBwcmV2ZW50IGZvcmtib21i
cyBvciBydW5hd2F5IG1lbW9yeSB1c2FnZSwgb3IgdXAgdG8KdGhlIHVzZXIgdG8gcnVuIGZld2Vy
IEVsZWN0cm9uIGFwcHMuIFRoZSBsYXN0IG9uZSBpcyBtb3JlIGRpZmZpY3VsdCwKYmVjYXVzZSB3
ZSBjYW4ndCBzb2x2ZSB0aGUgaGFsdGluZyBwcm9ibGVtIHRvIGtub3cgYWhlYWQgb2YgdGltZSB0
aGF0CnRoZSB1c2VyIGhhcyBzdWJtaXR0ZWQgYW4gaW5maW5pdGUgd29ya2xvYWQsIHNvIHdlIGhh
dmUgdG8gbGl2ZSB3aXRoCnRoYXQgYXMgYSByZWFsIGhhemFyZCBhbmQgbWl0aWdhdGUgaXQgd2hl
cmUgd2UgY2FuIChieSByZXR1cm5pbmcgLUVJTwphbmQga2lsbGluZyB0aGUgYXBwIGZyb20gaW5z
aWRlIE1lc2EpLgoKSWYgcmVwdXJwb3NpbmcgZG1hLWZlbmNlIGZvciBub24tZ3JhcGhpY3MgdXNl
cyAobGlrZSBnZW5lcmFsLXB1cnBvc2UKY29tcHV0ZSBvciBkcml2ZXItaW50ZXJuYWwgdHJhY2tp
bmcgZm9yIHRoaW5ncyBvdGhlciB0aGFuIEdQVQp3b3JrbG9hZHMpIG1ha2VzIGl0IG1vcmUgZGlm
ZmljdWx0IHRvIGd1YXJhbnRlZSB0aGUgYWJvdmUgcHJvcGVydGllcywKdGhlbiBJIGRvbid0IHdh
bnQgdG8gZG8gaXQuIE1heWJlIHRoZSBhbnN3ZXIgaXMgdGhhdCBkbWEtZmVuY2UgZ2V0cwpzcGxp
dCBpbnRvIGl0cyBjb3JlIGluZnJhc3RydWN0dXJlIHdoaWNoIGNhbiBiZSB1c2VkIGZvciBjb21w
bGV0aW9uCmNoYWlucywgd2l0aCBhY3R1YWwgZG1hLWZlbmNlIGJlaW5nIGxheWVyZWQgYWJvdmUg
Z2VuZXJpYyBjb21wbGV0aW9uCkFQSXM6IG90aGVyLWNvbXBsZXRpb24tQVBJIGNhbiBjb25zdW1l
IGZlbmNlcywgYnV0IGZlbmNlcyBfY2Fubm90Xwpjb25zdW1lIG5vbi1mZW5jZSB0aGluZ3MuCgpU
aGlzIGRvZXMgZm9yY2UgYSBzcGxpdCBiZXR3ZWVuIGdyYXBoaWNzIChHTC9WdWxrYW4vZGlzcGxh
eSkgd29ya2xvYWRzCmFuZCBjb21wdXRlIChDTC9vbmVBUEkvSFNBL0NVREEpLCB3aGljaCBJIGdl
dCBpcyByZWFsbHkgZGlmZmljdWx0IHRvCnJlc29sdmUgaW4gdGhlIGRyaXZlci4gQnV0IHRoZSB0
d28gYXJlIGhhcmQgc3BsaXQgYW55d2F5OiBncmFwaGljcwpyZXF1aXJlcyB1cGZyb250IGFuZCBl
eHBsaWNpdCBidWZmZXIgbWFuYWdlbWVudCwgaW4gcmV0dXJuIGRhbmdsaW5nCnRoZSBjYXJyb3Qg
dGhhdCB5b3UgY2FuIHBpcGVsaW5lIHlvdXIgd29ya2xvYWRzIGFuZCBleHBlY3QgY29tcGxldGlv
bgppbiByZWFzb25hYmxlIHRpbWUuIEdlbmVyYWwtcHVycG9zZSBjb21wdXRlIGxldHMgeW91IGdv
IGZhciBtb3JlIFlPTE8Kb24gcmVzb3VyY2UgYWNjZXNzLCBpbmNsdWRpbmcgZnVsbCB1c2VycHRy
IFNWTSwgYnV0IHRoZSBmbGlwc2lkZSBpcwp0aGF0IHlvdXIgZXhlY3V0aW9uIHRpbWUgbWlnaHQg
YmUgbWVhc3VyZWQgaW4gd2Vla3M7IGFzIGEgcmVzdWx0IHlvdQpkb24ndCBnZXQgdG8gZG8gZXhl
Y3V0aW9uIHBpcGVsaW5pbmcgYmVjYXVzZSBldmVuIGlmIHlvdSBjb3VsZCwgaXQncwpub3QgYSBi
aWcgZW5vdWdoIHdpbiByZWxhdGl2ZSB0byB5b3VyIGV4ZWN1dGlvbiB0aW1lIHRvIGJlIHdvcnRo
IHRoZQpleHRyYSBkcml2ZXIgYW5kIHN5c3RlbSBjb21wbGV4aXR5LiBJIGRvbid0IHRoaW5rIHRo
ZXJlJ3MgYSByZWFzb25hYmxlCmxvd2VzdCBjb21tb24gZGVub21pbmF0b3IgYmV0d2VlbiB0aGUg
dHdvIHRoYXQgd2UgY2FuIHRyeSB0byByZXVzZSBhCmdlbmVyaWMgbW9kZWwgZm9yIGJvdGgsIGJl
Y2F1c2UgeW91IG1ha2UgdG9vIG1hbnkgY29tcHJvbWlzZXMgdG8gdHJ5CnRvIGZpdCBjb25mbGlj
dGluZyBpbnRlcmVzdHMuCgpJbiB0aGUgcHJlLXN5bmNvYmogZGF5cywgd2UgZGlkIGxvb2sgYXQg
d2hhdCB3ZSBjYWxsZWQgJ2VtcHR5IGZlbmNlcycKb3IgJ2Z1dHVyZSBmZW5jZXMnIHdpdGggdGhl
IENocm9tZU9TIHRlYW06IGEgc3luY2hyb25pc2F0aW9uIG9iamVjdAp3aGljaCB3YXNuJ3QgYmFj
a2VkIGJ5IGEgcHJvbWlzZSBvZiBjb21wbGV0aW9uIGFzIGRtYS1mZW5jZSBpcywgYnV0Cmluc3Rl
YWQgYnkgdGhlIG1ldGEtcHJvbWlzZSAoZnJvbSB1c2Vyc3BhY2UpIG9mIGEgcHJvbWlzZSBvZgpj
b21wbGV0aW9uLiBVbHRpbWF0ZWx5IGl0IG5ldmVyIGJlY2FtZSBhIHJlYWwgdGhpbmcgZm9yIHRo
ZSBzYW1lCnJlYXNvbiB0aGF0IHN3c3luYyBpc24ndCBlaXRoZXI7IGl0IG5lZWRlZCBzbyBtdWNo
IHNwZWNpYWwtY2FzZQpoYW5kbGluZyBhbmQgc28gbWFueSBkaXNjbGFpbWVycyBhbmQgb3B0LWlu
cyBldmVyeXdoZXJlIHRoYXQgYnkgdGhlCmVuZCwgd2Ugd2VyZW4ndCBzdXJlIHdoeSB3ZSB3ZXJl
IHRyeWluZyB0byBzaG9laG9ybiBpdCBpbnRvIGRtYS1mZW5jZQphcGFydCBmcm9tIGRtYS1mZW5j
ZSBhbHJlYWR5IGV4aXN0aW5nIC0gYnV0IGJ5IHJlbW92aW5nIGFsbCBpdHMKZ3VhcmFudGVlcywg
d2UgYWxzbyByZW1vdmVkIGFsbCBpdHMgdXNlZnVsbmVzcyBhcyBhIHByaW1pdGl2ZS4KCkNoZWVy
cywKRGFuaWVsCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
CkxpbmFyby1tbS1zaWcgbWFpbGluZyBsaXN0CkxpbmFyby1tbS1zaWdAbGlzdHMubGluYXJvLm9y
ZwpodHRwczovL2xpc3RzLmxpbmFyby5vcmcvbWFpbG1hbi9saXN0aW5mby9saW5hcm8tbW0tc2ln
Cg==
