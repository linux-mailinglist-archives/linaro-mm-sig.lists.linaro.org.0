Return-Path: <linaro-mm-sig-bounces@lists.linaro.org>
X-Original-To: lists+linaro-mm-sig@lfdr.de
Delivered-To: lists+linaro-mm-sig@lfdr.de
Received: from lists.linaro.org (lists.linaro.org [107.22.173.205])
	by mail.lfdr.de (Postfix) with ESMTPS id 0B760382F42
	for <lists+linaro-mm-sig@lfdr.de>; Mon, 17 May 2021 16:14:05 +0200 (CEST)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 1DEFD60D3D
	for <lists+linaro-mm-sig@lfdr.de>; Mon, 17 May 2021 14:14:03 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
	id BB05060D70; Mon, 17 May 2021 14:13:57 +0000 (UTC)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 3987F60B35;
	Mon, 17 May 2021 14:13:50 +0000 (UTC)
X-Original-To: linaro-mm-sig@lists.linaro.org
Delivered-To: linaro-mm-sig@lists.linaro.org
Received: from lists.linaro.org (localhost [127.0.0.1])
 by lists.linaro.org (Postfix) with ESMTP id DD40860B83
 for <linaro-mm-sig@lists.linaro.org>; Mon, 17 May 2021 14:11:41 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
 id ABBF460B8C; Mon, 17 May 2021 14:11:41 +0000 (UTC)
Received: from mail-ed1-f43.google.com (mail-ed1-f43.google.com
 [209.85.208.43])
 by lists.linaro.org (Postfix) with ESMTPS id 79055607C8
 for <linaro-mm-sig@lists.linaro.org>; Mon, 17 May 2021 14:11:39 +0000 (UTC)
Received: by mail-ed1-f43.google.com with SMTP id l7so7102027edb.1
 for <linaro-mm-sig@lists.linaro.org>; Mon, 17 May 2021 07:11:39 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=1TaSNylme+JvUMjvUDZAG6e9dDKRezmdrX3RloFyGZo=;
 b=obwgDZIugCkavc2C2O7U/AHrzARiCc2C8wS2OcEF8A/Lz53YxU+rvhY8zhBwxWI1vm
 pAYPz73Lrua1BJRk+x5yt1L4Q0HKs+BRHB0un96HvyRJMYqWKNLEoSSLADSR3KNN0mw2
 qSs67cUV+TvakdfDDIDto15rcv8a/IV3G38/gJ8c2ak+uYa4IHYinajaDFBzHzDWFmfR
 I+o0eUu3Ow6LBdGeiQ1odCup1K4ozbN9MgKO00mGsaLsTvmfCkeKF5gPaA5eKYeVVMPW
 aMv4dvn0DM13TOdaXfr293ChYp32NDdk4MdAsJgwK7biV3tPpbyEz8K6lYslV5VCqKsx
 vgxA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=1TaSNylme+JvUMjvUDZAG6e9dDKRezmdrX3RloFyGZo=;
 b=gkD0qbMudtbPwLR0KHttCbOMyjyPKqne33amoAO4t0zJQ9QH4qAANbqaC/uo+J11eU
 kPtOEhrcyyZdwKHNjfuH6PsYuF2di5Mn3jUUbgCMBypGAQhVpRbG7YSsKta20nOo/Hwo
 QPsBuQqlIbQzTnM9e5hf7DSCngg65Mi8DfEsX5NxBah6zVw6K8J4OdSNb1+zLFzlvPOo
 vvQSwBACdoSYV+WNkCCsbo0awQx+y+oDoUWzfZjVKkOGgP6oi8yIDj2llKmkx2ctvs5e
 r2+mnrHqfPbQRPoF6Ctwu1nSMFPl2s4jOpzbXkau2IxH4zt6ezGfWc/OsUyo8751anoT
 SPDw==
X-Gm-Message-State: AOAM532YmULmL9B6Wu11bApdDe7hgLR8FoLSUvpT7D0kRry3WpjKUNPe
 CUDeAucFxcpZnsvXhb0HHFw=
X-Google-Smtp-Source: ABdhPJy1U+/VzB9TxG2xU0UxnnG1F60eJH6yP19zNQEDzO4wyQzMJSxcOn/WI5tChwNss6SV6balIQ==
X-Received: by 2002:aa7:c24d:: with SMTP id y13mr226169edo.155.1621260698476; 
 Mon, 17 May 2021 07:11:38 -0700 (PDT)
Received: from abel.fritz.box ([2a02:908:1252:fb60:1df4:c5b6:b8fd:3c4b])
 by smtp.gmail.com with ESMTPSA id b9sm2419624edt.71.2021.05.17.07.11.37
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Mon, 17 May 2021 07:11:38 -0700 (PDT)
From: "=?UTF-8?q?Christian=20K=C3=B6nig?=" <ckoenig.leichtzumerken@gmail.com>
X-Google-Original-From: =?UTF-8?q?Christian=20K=C3=B6nig?=
 <christian.koenig@amd.com>
To: dri-devel@lists.freedesktop.org,
	linaro-mm-sig@lists.linaro.org
Date: Mon, 17 May 2021 16:11:26 +0200
Message-Id: <20210517141129.2225-9-christian.koenig@amd.com>
X-Mailer: git-send-email 2.25.1
In-Reply-To: <20210517141129.2225-1-christian.koenig@amd.com>
References: <20210517141129.2225-1-christian.koenig@amd.com>
MIME-Version: 1.0
X-Virus-Scanned: ClamAV using ClamSMTP
Subject: [Linaro-mm-sig] [PATCH 08/11] dma-buf: improve shared fence
 abstraction
X-BeenThere: linaro-mm-sig@lists.linaro.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: "Unified memory management interest group."
 <linaro-mm-sig.lists.linaro.org>
List-Unsubscribe: <https://lists.linaro.org/mailman/options/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=unsubscribe>
List-Archive: <http://lists.linaro.org/pipermail/linaro-mm-sig/>
List-Post: <mailto:linaro-mm-sig@lists.linaro.org>
List-Help: <mailto:linaro-mm-sig-request@lists.linaro.org?subject=help>
List-Subscribe: <https://lists.linaro.org/mailman/listinfo/linaro-mm-sig>,
 <mailto:linaro-mm-sig-request@lists.linaro.org?subject=subscribe>
Cc: daniel@ffwll.ch
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linaro-mm-sig-bounces@lists.linaro.org
Sender: "Linaro-mm-sig" <linaro-mm-sig-bounces@lists.linaro.org>
X-Virus-Scanned: ClamAV using ClamSMTP

UHV0IGFjY2VzcyB0byB0aGUgc2hhcmVkIGZlbmNlcyBiZWhpbmQgYW4gaW50ZXJhdG9yLgpUaGlz
IHdheSB3ZSBkb24ndCBuZWVkIHRvIGV4cG9zZSB0aGUgaW50ZXJuYWwgaW1wbGVtZW50YXRpb24g
YW55IG1vcmUuCgpTaWduZWQtb2ZmLWJ5OiBDaHJpc3RpYW4gS8O2bmlnIDxjaHJpc3RpYW4ua29l
bmlnQGFtZC5jb20+Ci0tLQogZHJpdmVycy9kbWEtYnVmL2RtYS1idWYuYyAgICAgICAgICAgICAg
ICAgICB8IDQ2ICsrKysrKy0tLS0tLS0tLS0KIGRyaXZlcnMvZG1hLWJ1Zi9kbWEtcmVzdi5jICAg
ICAgICAgICAgICAgICAgfCA2MSArKysrKysrKysrKysrKysrKysrKysKIGRyaXZlcnMvZ3B1L2Ry
bS9hbWQvYW1kZ3B1L2FtZGdwdV9kbWFfYnVmLmMgfCAgOSArLS0KIGRyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2FtZGdwdV9zeW5jLmMgICAgfCAxNCArKy0tLQogZHJpdmVycy9ncHUvZHJtL2Ft
ZC9hbWRncHUvYW1kZ3B1X3R0bS5jICAgICB8IDE0ICsrLS0tCiBkcml2ZXJzL2dwdS9kcm0vZXRu
YXZpdi9ldG5hdml2X2dlbS5jICAgICAgIHwgMTUgKystLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1
L2dlbS9pOTE1X2dlbV9idXN5LmMgICAgfCAxNiArKy0tLS0KIGRyaXZlcnMvZ3B1L2RybS9ub3V2
ZWF1L25vdXZlYXVfZmVuY2UuYyAgICAgfCAyNCArKysrLS0tLQogZHJpdmVycy9ncHUvZHJtL3F4
bC9xeGxfZGVidWdmcy5jICAgICAgICAgICB8IDEwICsrLS0KIGRyaXZlcnMvZ3B1L2RybS9yYWRl
b24vcmFkZW9uX3N5bmMuYyAgICAgICAgfCAxNCArKy0tLQogZHJpdmVycy9ncHUvZHJtL3R0bS90
dG1fYm8uYyAgICAgICAgICAgICAgICB8IDE1ICsrLS0tCiBpbmNsdWRlL2xpbnV4L2RtYS1yZXN2
LmggICAgICAgICAgICAgICAgICAgIHwgNDAgKysrKysrLS0tLS0tLS0KIDEyIGZpbGVzIGNoYW5n
ZWQsIDE0MCBpbnNlcnRpb25zKCspLCAxMzggZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9kbWEtYnVmL2RtYS1idWYuYyBiL2RyaXZlcnMvZG1hLWJ1Zi9kbWEtYnVmLmMKaW5kZXgg
NWFiZjZiOGM4OWFjLi5jNTFjMWZjYTRjMWIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZG1hLWJ1Zi9k
bWEtYnVmLmMKKysrIGIvZHJpdmVycy9kbWEtYnVmL2RtYS1idWYuYwpAQCAtMjA2LDEyICsyMDYs
MTIgQEAgc3RhdGljIHZvaWQgZG1hX2J1Zl9wb2xsX2NiKHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNl
LCBzdHJ1Y3QgZG1hX2ZlbmNlX2NiICpjYikKIAogc3RhdGljIF9fcG9sbF90IGRtYV9idWZfcG9s
bChzdHJ1Y3QgZmlsZSAqZmlsZSwgcG9sbF90YWJsZSAqcG9sbCkKIHsKKwlzdHJ1Y3QgZG1hX2Zl
bmNlICpmZW5jZV9leGNsLCAqZmVuY2Vfc2hhcmVkOworCXN0cnVjdCBkbWFfcmVzdl9jdXJzb3Ig
Y3Vyc29yOwogCXN0cnVjdCBkbWFfYnVmICpkbWFidWY7CiAJc3RydWN0IGRtYV9yZXN2ICpyZXN2
OwotCXN0cnVjdCBkbWFfcmVzdl9saXN0ICpmb2JqOwotCXN0cnVjdCBkbWFfZmVuY2UgKmZlbmNl
X2V4Y2w7CiAJX19wb2xsX3QgZXZlbnRzOwotCXVuc2lnbmVkIHNoYXJlZF9jb3VudCwgc2VxOwor
CXVuc2lnbmVkIHNlcTsKIAogCWRtYWJ1ZiA9IGZpbGUtPnByaXZhdGVfZGF0YTsKIAlpZiAoIWRt
YWJ1ZiB8fCAhZG1hYnVmLT5yZXN2KQpAQCAtMjI5LDIyICsyMjksMTggQEAgc3RhdGljIF9fcG9s
bF90IGRtYV9idWZfcG9sbChzdHJ1Y3QgZmlsZSAqZmlsZSwgcG9sbF90YWJsZSAqcG9sbCkKIAlz
ZXEgPSByZWFkX3NlcWNvdW50X2JlZ2luKCZyZXN2LT5zZXEpOwogCXJjdV9yZWFkX2xvY2soKTsK
IAotCWZvYmogPSByY3VfZGVyZWZlcmVuY2UocmVzdi0+ZmVuY2UpOwotCWlmIChmb2JqKQotCQlz
aGFyZWRfY291bnQgPSBmb2JqLT5zaGFyZWRfY291bnQ7Ci0JZWxzZQotCQlzaGFyZWRfY291bnQg
PSAwOworCWZlbmNlX3NoYXJlZCA9IGRtYV9yZXN2X2ZpcnN0X3NoYXJlZChyZXN2LCAmY3Vyc29y
KTsKIAlmZW5jZV9leGNsID0gZG1hX3Jlc3ZfZXhjbHVzaXZlKHJlc3YpOwogCWlmIChyZWFkX3Nl
cWNvdW50X3JldHJ5KCZyZXN2LT5zZXEsIHNlcSkpIHsKIAkJcmN1X3JlYWRfdW5sb2NrKCk7CiAJ
CWdvdG8gcmV0cnk7CiAJfQogCi0JaWYgKGZlbmNlX2V4Y2wgJiYgKCEoZXZlbnRzICYgRVBPTExP
VVQpIHx8IHNoYXJlZF9jb3VudCA9PSAwKSkgeworCWlmIChmZW5jZV9leGNsICYmICghKGV2ZW50
cyAmIEVQT0xMT1VUKSB8fCAhZmVuY2Vfc2hhcmVkKSkgewogCQlzdHJ1Y3QgZG1hX2J1Zl9wb2xs
X2NiX3QgKmRjYiA9ICZkbWFidWYtPmNiX2V4Y2w7CiAJCV9fcG9sbF90IHBldmVudHMgPSBFUE9M
TElOOwogCi0JCWlmIChzaGFyZWRfY291bnQgPT0gMCkKKwkJaWYgKGZlbmNlX3NoYXJlZCkKIAkJ
CXBldmVudHMgfD0gRVBPTExPVVQ7CiAKIAkJc3Bpbl9sb2NrX2lycSgmZG1hYnVmLT5wb2xsLmxv
Y2spOwpAQCAtMjc1LDkgKzI3MSw4IEBAIHN0YXRpYyBfX3BvbGxfdCBkbWFfYnVmX3BvbGwoc3Ry
dWN0IGZpbGUgKmZpbGUsIHBvbGxfdGFibGUgKnBvbGwpCiAJCX0KIAl9CiAKLQlpZiAoKGV2ZW50
cyAmIEVQT0xMT1VUKSAmJiBzaGFyZWRfY291bnQgPiAwKSB7CisJaWYgKChldmVudHMgJiBFUE9M
TE9VVCkgJiYgZmVuY2Vfc2hhcmVkKSB7CiAJCXN0cnVjdCBkbWFfYnVmX3BvbGxfY2JfdCAqZGNi
ID0gJmRtYWJ1Zi0+Y2Jfc2hhcmVkOwotCQlpbnQgaTsKIAogCQkvKiBPbmx5IHF1ZXVlIGEgbmV3
IGNhbGxiYWNrIGlmIG5vIGV2ZW50IGhhcyBmaXJlZCB5ZXQgKi8KIAkJc3Bpbl9sb2NrX2lycSgm
ZG1hYnVmLT5wb2xsLmxvY2spOwpAQCAtMjkwLDEzICsyODUsMTEgQEAgc3RhdGljIF9fcG9sbF90
IGRtYV9idWZfcG9sbChzdHJ1Y3QgZmlsZSAqZmlsZSwgcG9sbF90YWJsZSAqcG9sbCkKIAkJaWYg
KCEoZXZlbnRzICYgRVBPTExPVVQpKQogCQkJZ290byBvdXQ7CiAKLQkJZm9yIChpID0gMDsgaSA8
IHNoYXJlZF9jb3VudDsgKytpKSB7Ci0JCQlzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSA9IHJjdV9k
ZXJlZmVyZW5jZShmb2JqLT5zaGFyZWRbaV0pOwotCi0JCQlpZiAoIWRtYV9mZW5jZV9nZXRfcmN1
KGZlbmNlKSkgeworCQlkbyB7CisJCQlpZiAoIWRtYV9mZW5jZV9nZXRfcmN1KGZlbmNlX3NoYXJl
ZCkpIHsKIAkJCQkvKgogCQkJCSAqIGZlbmNlIHJlZmNvdW50IGRyb3BwZWQgdG8gemVybywgdGhp
cyBtZWFucwotCQkJCSAqIHRoYXQgZm9iaiBoYXMgYmVlbiBmcmVlZAorCQkJCSAqIHRoYXQgdGhl
IHNoYXJlZCBmZW5jZSBoYXMgYmVlbiBmcmVlZAogCQkJCSAqCiAJCQkJICogY2FsbCBkbWFfYnVm
X3BvbGxfY2IgYW5kIGZvcmNlIGEgcmVjaGVjayEKIAkJCQkgKi8KQEAgLTMwNCwxNyArMjk3LDE3
IEBAIHN0YXRpYyBfX3BvbGxfdCBkbWFfYnVmX3BvbGwoc3RydWN0IGZpbGUgKmZpbGUsIHBvbGxf
dGFibGUgKnBvbGwpCiAJCQkJZG1hX2J1Zl9wb2xsX2NiKE5VTEwsICZkY2ItPmNiKTsKIAkJCQli
cmVhazsKIAkJCX0KLQkJCWlmICghZG1hX2ZlbmNlX2FkZF9jYWxsYmFjayhmZW5jZSwgJmRjYi0+
Y2IsCisJCQlpZiAoIWRtYV9mZW5jZV9hZGRfY2FsbGJhY2soZmVuY2Vfc2hhcmVkLCAmZGNiLT5j
YiwKIAkJCQkJCSAgICBkbWFfYnVmX3BvbGxfY2IpKSB7Ci0JCQkJZG1hX2ZlbmNlX3B1dChmZW5j
ZSk7CisJCQkJZG1hX2ZlbmNlX3B1dChmZW5jZV9zaGFyZWQpOwogCQkJCWV2ZW50cyAmPSB+RVBP
TExPVVQ7CiAJCQkJYnJlYWs7CiAJCQl9Ci0JCQlkbWFfZmVuY2VfcHV0KGZlbmNlKTsKLQkJfQor
CQkJZG1hX2ZlbmNlX3B1dChmZW5jZV9zaGFyZWQpOworCQl9IHdoaWxlICgoZmVuY2Vfc2hhcmVk
ID0gZG1hX3Jlc3ZfbmV4dF9zaGFyZWQocmVzdiwgJmN1cnNvcikpKTsKIAogCQkvKiBObyBjYWxs
YmFjayBxdWV1ZWQsIHdha2UgdXAgYW55IGFkZGl0aW9uYWwgd2FpdGVycy4gKi8KLQkJaWYgKGkg
PT0gc2hhcmVkX2NvdW50KQorCQlpZiAoIWZlbmNlX3NoYXJlZCkKIAkJCWRtYV9idWZfcG9sbF9j
YihOVUxMLCAmZGNiLT5jYik7CiAJfQogCkBAIC0xMzUzLDEwICsxMzQ2LDkgQEAgc3RhdGljIGlu
dCBkbWFfYnVmX2RlYnVnX3Nob3coc3RydWN0IHNlcV9maWxlICpzLCB2b2lkICp1bnVzZWQpCiAJ
c3RydWN0IGRtYV9idWYgKmJ1Zl9vYmo7CiAJc3RydWN0IGRtYV9idWZfYXR0YWNobWVudCAqYXR0
YWNoX29iajsKIAlzdHJ1Y3QgZG1hX3Jlc3YgKnJvYmo7Ci0Jc3RydWN0IGRtYV9yZXN2X2xpc3Qg
KmZvYmo7CiAJc3RydWN0IGRtYV9mZW5jZSAqZmVuY2U7CiAJdW5zaWduZWQgc2VxOwotCWludCBj
b3VudCA9IDAsIGF0dGFjaF9jb3VudCwgc2hhcmVkX2NvdW50LCBpOworCWludCBjb3VudCA9IDAs
IGF0dGFjaF9jb3VudDsKIAlzaXplX3Qgc2l6ZSA9IDA7CiAKIAlyZXQgPSBtdXRleF9sb2NrX2lu
dGVycnVwdGlibGUoJmRiX2xpc3QubG9jayk7CkBAIC0xMzY5LDYgKzEzNjEsNyBAQCBzdGF0aWMg
aW50IGRtYV9idWZfZGVidWdfc2hvdyhzdHJ1Y3Qgc2VxX2ZpbGUgKnMsIHZvaWQgKnVudXNlZCkK
IAkJICAgInNpemUiLCAiZmxhZ3MiLCAibW9kZSIsICJjb3VudCIsICJpbm8iKTsKIAogCWxpc3Rf
Zm9yX2VhY2hfZW50cnkoYnVmX29iaiwgJmRiX2xpc3QuaGVhZCwgbGlzdF9ub2RlKSB7CisJCXN0
cnVjdCBkbWFfcmVzdl9jdXJzb3IgY3Vyc29yOwogCiAJCXJldCA9IGRtYV9yZXN2X2xvY2tfaW50
ZXJydXB0aWJsZShidWZfb2JqLT5yZXN2LCBOVUxMKTsKIAkJaWYgKHJldCkKQEAgLTEzOTIsMTAg
KzEzODUsNyBAQCBzdGF0aWMgaW50IGRtYV9idWZfZGVidWdfc2hvdyhzdHJ1Y3Qgc2VxX2ZpbGUg
KnMsIHZvaWQgKnVudXNlZCkKIAkJCQkgICBmZW5jZS0+b3BzLT5nZXRfdGltZWxpbmVfbmFtZShm
ZW5jZSksCiAJCQkJICAgZG1hX2ZlbmNlX2lzX3NpZ25hbGVkKGZlbmNlKSA/ICIiIDogInVuIik7
CiAKLQkJZm9iaiA9IHJjdV9kZXJlZmVyZW5jZShyb2JqLT5mZW5jZSk7Ci0JCXNoYXJlZF9jb3Vu
dCA9IGZvYmogPyBmb2JqLT5zaGFyZWRfY291bnQgOiAwOwotCQlmb3IgKGkgPSAwOyBpIDwgc2hh
cmVkX2NvdW50OyBpKyspIHsKLQkJCWZlbmNlID0gcmN1X2RlcmVmZXJlbmNlKGZvYmotPnNoYXJl
ZFtpXSk7CisJCWRtYV9yZXN2X2Zvcl9lYWNoX3NoYXJlZChyb2JqLCAmY3Vyc29yLCBmZW5jZSkg
ewogCQkJaWYgKCFkbWFfZmVuY2VfZ2V0X3JjdShmZW5jZSkpCiAJCQkJY29udGludWU7CiAJCQlz
ZXFfcHJpbnRmKHMsICJcdFNoYXJlZCBmZW5jZTogJXMgJXMgJXNzaWduYWxsZWRcbiIsCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2RtYS1idWYvZG1hLXJlc3YuYyBiL2RyaXZlcnMvZG1hLWJ1Zi9kbWEt
cmVzdi5jCmluZGV4IDU3MDNlMzI4YjhhYy4uZWY3ZTA0NjRlMDhkIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2RtYS1idWYvZG1hLXJlc3YuYworKysgYi9kcml2ZXJzL2RtYS1idWYvZG1hLXJlc3YuYwpA
QCAtMzksNiArMzksMTkgQEAKICNpbmNsdWRlIDxsaW51eC9zY2hlZC9tbS5oPgogI2luY2x1ZGUg
PGxpbnV4L21tdV9ub3RpZmllci5oPgogCisvKioKKyAqIHN0cnVjdCBkbWFfcmVzdl9saXN0IC0g
YSBsaXN0IG9mIHNoYXJlZCBmZW5jZXMKKyAqIEByY3U6IGZvciBpbnRlcm5hbCB1c2UKKyAqIEBz
aGFyZWRfY291bnQ6IHRhYmxlIG9mIHNoYXJlZCBmZW5jZXMKKyAqIEBzaGFyZWRfbWF4OiBmb3Ig
Z3Jvd2luZyBzaGFyZWQgZmVuY2UgdGFibGUKKyAqIEBzaGFyZWQ6IHNoYXJlZCBmZW5jZSB0YWJs
ZQorICovCitzdHJ1Y3QgZG1hX3Jlc3ZfbGlzdCB7CisJc3RydWN0IHJjdV9oZWFkIHJjdTsKKwl1
MzIgc2hhcmVkX2NvdW50LCBzaGFyZWRfbWF4OworCXN0cnVjdCBkbWFfZmVuY2UgX19yY3UgKnNo
YXJlZFtdOworfTsKKwogLyoqCiAgKiBET0M6IFJlc2VydmF0aW9uIE9iamVjdCBPdmVydmlldwog
ICoKQEAgLTE0Niw2ICsxNTksNTQgQEAgdm9pZCBkbWFfcmVzdl9maW5pKHN0cnVjdCBkbWFfcmVz
diAqb2JqKQogfQogRVhQT1JUX1NZTUJPTChkbWFfcmVzdl9maW5pKTsKIAorLyoqCisgKiBkbWFf
cmVzdl9zaGFyZWQgLSBnZXQgdGhlIHJlc2VydmF0aW9uIG9iamVjdCdzIHNoYXJlZCBmZW5jZSBs
aXN0CisgKiBAb2JqOiB0aGUgcmVzZXJ2YXRpb24gb2JqZWN0CisgKgorICogUmV0dXJucyB0aGUg
c2hhcmVkIGZlbmNlIGxpc3QuIFRoZSBvYmotPmxvY2sgb3IgcmN1IHJlYWQgc2lkZSBtdXN0IGJl
IGhlbGQuCisgKi8KK3N0YXRpYyBpbmxpbmUgc3RydWN0IGRtYV9yZXN2X2xpc3QgKmRtYV9yZXN2
X3NoYXJlZChzdHJ1Y3QgZG1hX3Jlc3YgKm9iaikKK3sKKwlyZXR1cm4gcmN1X2RlcmVmZXJlbmNl
X2NoZWNrKG9iai0+ZmVuY2UsIGRtYV9yZXN2X2hlbGQob2JqKSk7Cit9CisKKy8qKgorICogZG1h
X3Jlc3ZfZmlyc3Rfc2hhcmVkIC0gZ2V0IGZpcnN0IHNoYXJlZCBmZW5jZQorICogQG9iajogdGhl
IHJlc2VydmF0aW9uIG9iamVjdAorICogQGN1cnNvcjogY3Vyc29yIHRvIHJlY29yZCB0aGUgcG9z
aXRpb24KKyAqCisgKiBSZXR1cm4gdGhlIGZpcnN0IHNoYXJlZCBmZW5jZSBvZiB0aGUgcmVzdiBv
YmplY3QgYW5kIGluaXRpYWxpemUgdGhlIGN1cnNvciB0bworICogdHJhY2sgdGhlIHBvc2l0aW9u
IGluc2lkZSB0aGUgbGlzdC4KKyAqLworc3RydWN0IGRtYV9mZW5jZSAqZG1hX3Jlc3ZfZmlyc3Rf
c2hhcmVkKHN0cnVjdCBkbWFfcmVzdiAqb2JqLAorCQkJCQlzdHJ1Y3QgZG1hX3Jlc3ZfY3Vyc29y
ICpjdXJzb3IpCit7CisJY3Vyc29yLT5mZW5jZXMgPSBkbWFfcmVzdl9zaGFyZWQob2JqKTsKKwlp
ZiAoIWN1cnNvci0+ZmVuY2VzKQorCQlyZXR1cm4gTlVMTDsKKworCWN1cnNvci0+aSA9IDA7CisJ
cmV0dXJuIGRtYV9yZXN2X25leHRfc2hhcmVkKG9iaiwgY3Vyc29yKTsKK30KK0VYUE9SVF9TWU1C
T0woZG1hX3Jlc3ZfZmlyc3Rfc2hhcmVkKTsKKworLyoqCisgKiBkbWFfcmVzdl9uZXh0X3NoYXJl
ZCAtIGdldCB0aGUgbmV4dCBzaGFyZWQgZmVuY2UgZnJvbSB0aGUgcmVzdiBvYmplY3QKKyAqIEBv
Ymo6IHRoZSByZXNlcnZhdGlvbiBvYmplY3QKKyAqIEBjdXJzb3I6IGN1cnNvciB0byByZWNvcmQg
dGhlIHBvc2l0aW9uCisgKgorICogUmV0dXJuIHRoZSBuZXh0IHNoYXJlZCBmZW5jZSBvZiB0aGUg
cmVzdiBvYmplY3Qgd2hlcmUgY3Vyc29yIHBvaW50cyB0by4KKyAqLworc3RydWN0IGRtYV9mZW5j
ZSAqZG1hX3Jlc3ZfbmV4dF9zaGFyZWQoc3RydWN0IGRtYV9yZXN2ICpvYmosCisJCQkJICAgICAg
IHN0cnVjdCBkbWFfcmVzdl9jdXJzb3IgKmN1cnNvcikKK3sKKwlpZiAoY3Vyc29yLT5pID49IGN1
cnNvci0+ZmVuY2VzLT5zaGFyZWRfY291bnQpCisJCXJldHVybiBOVUxMOworCisJcmV0dXJuIGRt
YV9yZXN2X2xpc3RfZmVuY2Uob2JqLCBjdXJzb3ItPmZlbmNlcywgY3Vyc29yLT5pKyspOworfQor
RVhQT1JUX1NZTUJPTChkbWFfcmVzdl9uZXh0X3NoYXJlZCk7CisKIC8qKgogICogZG1hX3Jlc3Zf
cmVzZXJ2ZV9zaGFyZWQgLSBSZXNlcnZlIHNwYWNlIHRvIGFkZCBzaGFyZWQgZmVuY2VzIHRvCiAg
KiBhIGRtYV9yZXN2LgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1k
Z3B1X2RtYV9idWYuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kbWFfYnVm
LmMKaW5kZXggMDM3MTk0N2JhOTZiLi42N2NlZjgwZTI1YzggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9kbWFfYnVmLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2FtZC9hbWRncHUvYW1kZ3B1X2RtYV9idWYuYwpAQCAtOTUsMjAgKzk1LDE1IEBAIF9fZG1hX3Jl
c3ZfbWFrZV9leGNsdXNpdmUoc3RydWN0IGRtYV9yZXN2ICpvYmopCiAJdW5zaWduZWQgaW50IGNv
dW50OwogCWludCByOwogCi0JaWYgKCFkbWFfcmVzdl9zaGFyZWQob2JqKSkgLyogbm8gc2hhcmVk
IGZlbmNlcyB0byBjb252ZXJ0ICovCi0JCXJldHVybiAwOwotCiAJciA9IGRtYV9yZXN2X2dldF9m
ZW5jZXNfcmN1KG9iaiwgTlVMTCwgJmNvdW50LCAmZmVuY2VzKTsKIAlpZiAocikKIAkJcmV0dXJu
IHI7CiAKLQlpZiAoY291bnQgPT0gMCkgewotCQkvKiBOb3cgdGhhdCB3YXMgdW5leHBlY3RlZC4g
Ki8KLQl9IGVsc2UgaWYgKGNvdW50ID09IDEpIHsKKwlpZiAoY291bnQgPT0gMSkgewogCQlkbWFf
cmVzdl9hZGRfZXhjbF9mZW5jZShvYmosIGZlbmNlc1swXSk7CiAJCWRtYV9mZW5jZV9wdXQoZmVu
Y2VzWzBdKTsKIAkJa2ZyZWUoZmVuY2VzKTsKLQl9IGVsc2UgeworCX0gZWxzZSBpZiAoY291bnQg
PiAxKSB7CiAJCXN0cnVjdCBkbWFfZmVuY2VfYXJyYXkgKmFycmF5OwogCiAJCWFycmF5ID0gZG1h
X2ZlbmNlX2FycmF5X2NyZWF0ZShjb3VudCwgZmVuY2VzLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3N5bmMuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1k
Z3B1L2FtZGdwdV9zeW5jLmMKaW5kZXggYzUwZDlmOTJhMGNkLi5hNDQ3ODMzMmE3OWUgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9zeW5jLmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3N5bmMuYwpAQCAtMjAxLDEwICsyMDEsOSBA
QCBpbnQgYW1kZ3B1X3N5bmNfcmVzdihzdHJ1Y3QgYW1kZ3B1X2RldmljZSAqYWRldiwgc3RydWN0
IGFtZGdwdV9zeW5jICpzeW5jLAogCQkgICAgIHN0cnVjdCBkbWFfcmVzdiAqcmVzdiwgZW51bSBh
bWRncHVfc3luY19tb2RlIG1vZGUsCiAJCSAgICAgdm9pZCAqb3duZXIpCiB7Ci0Jc3RydWN0IGRt
YV9yZXN2X2xpc3QgKmZsaXN0OworCXN0cnVjdCBkbWFfcmVzdl9jdXJzb3IgY3Vyc29yOwogCXN0
cnVjdCBkbWFfZmVuY2UgKmY7Ci0JdW5zaWduZWQgaTsKLQlpbnQgciA9IDA7CisJaW50IHI7CiAK
IAlpZiAocmVzdiA9PSBOVUxMKQogCQlyZXR1cm4gLUVJTlZBTDsKQEAgLTIxMiwxNyArMjExLDEy
IEBAIGludCBhbWRncHVfc3luY19yZXN2KHN0cnVjdCBhbWRncHVfZGV2aWNlICphZGV2LCBzdHJ1
Y3QgYW1kZ3B1X3N5bmMgKnN5bmMsCiAJLyogYWx3YXlzIHN5bmMgdG8gdGhlIGV4Y2x1c2l2ZSBm
ZW5jZSAqLwogCWYgPSBkbWFfcmVzdl9leGNsdXNpdmUocmVzdik7CiAJciA9IGFtZGdwdV9zeW5j
X2ZlbmNlKHN5bmMsIGYpOwotCi0JZmxpc3QgPSBkbWFfcmVzdl9zaGFyZWQocmVzdik7Ci0JaWYg
KCFmbGlzdCB8fCByKQorCWlmIChyKQogCQlyZXR1cm4gcjsKIAotCWZvciAoaSA9IDA7IGkgPCBm
bGlzdC0+c2hhcmVkX2NvdW50OyArK2kpIHsKKwlkbWFfcmVzdl9mb3JfZWFjaF9zaGFyZWQocmVz
diwgJmN1cnNvciwgZikgewogCQl2b2lkICpmZW5jZV9vd25lcjsKIAotCQlmID0gcmN1X2RlcmVm
ZXJlbmNlX3Byb3RlY3RlZChmbGlzdC0+c2hhcmVkW2ldLAotCQkJCQkgICAgICBkbWFfcmVzdl9o
ZWxkKHJlc3YpKTsKLQogCQlmZW5jZV9vd25lciA9IGFtZGdwdV9zeW5jX2dldF9vd25lcihmKTsK
IAogCQkvKiBBbHdheXMgc3luYyB0byBtb3Zlcywgbm8gbWF0dGVyIHdoYXQgKi8KZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV90dG0uYyBiL2RyaXZlcnMvZ3B1
L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV90dG0uYwppbmRleCA2YWI1MDgxMGJkNTQuLmJhODllMzVj
MWI4NCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X3R0bS5j
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV90dG0uYwpAQCAtMTM5NCwx
MCArMTM5NCw5IEBAIHN0YXRpYyBib29sIGFtZGdwdV90dG1fYm9fZXZpY3Rpb25fdmFsdWFibGUo
c3RydWN0IHR0bV9idWZmZXJfb2JqZWN0ICpibywKIAkJCQkJICAgIGNvbnN0IHN0cnVjdCB0dG1f
cGxhY2UgKnBsYWNlKQogewogCXVuc2lnbmVkIGxvbmcgbnVtX3BhZ2VzID0gYm8tPm1lbS5udW1f
cGFnZXM7CisJc3RydWN0IGRtYV9yZXN2X2N1cnNvciByZXN2X2N1cnNvcjsKIAlzdHJ1Y3QgYW1k
Z3B1X3Jlc19jdXJzb3IgY3Vyc29yOwotCXN0cnVjdCBkbWFfcmVzdl9saXN0ICpmbGlzdDsKIAlz
dHJ1Y3QgZG1hX2ZlbmNlICpmOwotCWludCBpOwogCiAJaWYgKGJvLT50eXBlID09IHR0bV9ib190
eXBlX2tlcm5lbCAmJgogCSAgICAhYW1kZ3B1X3ZtX2V2aWN0YWJsZSh0dG1fdG9fYW1kZ3B1X2Jv
KGJvKSkpCkBAIC0xNDA3LDE0ICsxNDA2LDkgQEAgc3RhdGljIGJvb2wgYW1kZ3B1X3R0bV9ib19l
dmljdGlvbl92YWx1YWJsZShzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJvLAogCSAqIElmIHRy
dWUsIHRoZW4gcmV0dXJuIGZhbHNlIGFzIGFueSBLRkQgcHJvY2VzcyBuZWVkcyBhbGwgaXRzIEJP
cyB0bwogCSAqIGJlIHJlc2lkZW50IHRvIHJ1biBzdWNjZXNzZnVsbHkKIAkgKi8KLQlmbGlzdCA9
IGRtYV9yZXN2X3NoYXJlZChiby0+YmFzZS5yZXN2KTsKLQlpZiAoZmxpc3QpIHsKLQkJZm9yIChp
ID0gMDsgaSA8IGZsaXN0LT5zaGFyZWRfY291bnQ7ICsraSkgewotCQkJZiA9IHJjdV9kZXJlZmVy
ZW5jZV9wcm90ZWN0ZWQoZmxpc3QtPnNoYXJlZFtpXSwKLQkJCQlkbWFfcmVzdl9oZWxkKGJvLT5i
YXNlLnJlc3YpKTsKLQkJCWlmIChhbWRrZmRfZmVuY2VfY2hlY2tfbW0oZiwgY3VycmVudC0+bW0p
KQotCQkJCXJldHVybiBmYWxzZTsKLQkJfQorCWRtYV9yZXN2X2Zvcl9lYWNoX3NoYXJlZChiby0+
YmFzZS5yZXN2LCAmcmVzdl9jdXJzb3IsIGYpIHsKKwkJaWYgKGFtZGtmZF9mZW5jZV9jaGVja19t
bShmLCBjdXJyZW50LT5tbSkpCisJCQlyZXR1cm4gZmFsc2U7CiAJfQogCiAJc3dpdGNoIChiby0+
bWVtLm1lbV90eXBlKSB7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5h
dml2X2dlbS5jIGIvZHJpdmVycy9ncHUvZHJtL2V0bmF2aXYvZXRuYXZpdl9nZW0uYwppbmRleCA0
ZDQzYjg2MzBmMGUuLjUyZTllYWE0M2YyZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2V0
bmF2aXYvZXRuYXZpdl9nZW0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2
X2dlbS5jCkBAIC00NTAsMTAgKzQ1MCwxMCBAQCBzdGF0aWMgdm9pZCBldG5hdml2X2dlbV9kZXNj
cmliZV9mZW5jZShzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSwKIHN0YXRpYyB2b2lkIGV0bmF2aXZf
Z2VtX2Rlc2NyaWJlKHN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqLCBzdHJ1Y3Qgc2VxX2ZpbGUg
Km0pCiB7CiAJc3RydWN0IGV0bmF2aXZfZ2VtX29iamVjdCAqZXRuYXZpdl9vYmogPSB0b19ldG5h
dml2X2JvKG9iaik7CisJdW5zaWduZWQgbG9uZyBvZmYgPSBkcm1fdm1hX25vZGVfc3RhcnQoJm9i
ai0+dm1hX25vZGUpOwogCXN0cnVjdCBkbWFfcmVzdiAqcm9iaiA9IG9iai0+cmVzdjsKLQlzdHJ1
Y3QgZG1hX3Jlc3ZfbGlzdCAqZm9iajsKKwlzdHJ1Y3QgZG1hX3Jlc3ZfY3Vyc29yIGN1cnNvcjsK
IAlzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZTsKLQl1bnNpZ25lZCBsb25nIG9mZiA9IGRybV92bWFf
bm9kZV9zdGFydCgmb2JqLT52bWFfbm9kZSk7CiAKIAlzZXFfcHJpbnRmKG0sICIlMDh4OiAlYyAl
MmQgKCUyZCkgJTA4bHggJXAgJXpkXG4iLAogCQkJZXRuYXZpdl9vYmotPmZsYWdzLCBpc19hY3Rp
dmUoZXRuYXZpdl9vYmopID8gJ0EnIDogJ0knLApAQCAtNDYxLDE1ICs0NjEsOCBAQCBzdGF0aWMg
dm9pZCBldG5hdml2X2dlbV9kZXNjcmliZShzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaiwgc3Ry
dWN0IHNlcV9maWxlICptKQogCQkJb2ZmLCBldG5hdml2X29iai0+dmFkZHIsIG9iai0+c2l6ZSk7
CiAKIAlyY3VfcmVhZF9sb2NrKCk7Ci0JZm9iaiA9IGRtYV9yZXN2X3NoYXJlZChyb2JqKTsKLQlp
ZiAoZm9iaikgewotCQl1bnNpZ25lZCBpbnQgaSwgc2hhcmVkX2NvdW50ID0gZm9iai0+c2hhcmVk
X2NvdW50OwotCi0JCWZvciAoaSA9IDA7IGkgPCBzaGFyZWRfY291bnQ7IGkrKykgewotCQkJZmVu
Y2UgPSByY3VfZGVyZWZlcmVuY2UoZm9iai0+c2hhcmVkW2ldKTsKLQkJCWV0bmF2aXZfZ2VtX2Rl
c2NyaWJlX2ZlbmNlKGZlbmNlLCAiU2hhcmVkIiwgbSk7Ci0JCX0KLQl9CisJZG1hX3Jlc3ZfZm9y
X2VhY2hfc2hhcmVkKHJvYmosICZjdXJzb3IsIGZlbmNlKQorCQlldG5hdml2X2dlbV9kZXNjcmli
ZV9mZW5jZShmZW5jZSwgIlNoYXJlZCIsIG0pOwogCiAJZmVuY2UgPSBkbWFfcmVzdl9leGNsdXNp
dmUocm9iaik7CiAJaWYgKGZlbmNlKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z2VtL2k5MTVfZ2VtX2J1c3kuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9i
dXN5LmMKaW5kZXggM2Y5NGJlY2FjNTQxLi4xMDI4ZGY2Y2VlNjcgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9idXN5LmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ2VtL2k5MTVfZ2VtX2J1c3kuYwpAQCAtODIsNyArODIsOCBAQCBpOTE1X2dlbV9idXN5
X2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCiB7CiAJc3RydWN0IGRy
bV9pOTE1X2dlbV9idXN5ICphcmdzID0gZGF0YTsKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVj
dCAqb2JqOwotCXN0cnVjdCBkbWFfcmVzdl9saXN0ICpsaXN0OworCXN0cnVjdCBkbWFfcmVzdl9j
dXJzb3IgY3Vyc29yOworCXN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlOwogCXVuc2lnbmVkIGludCBz
ZXE7CiAJaW50IGVycjsKIApAQCAtMTE2LDE3ICsxMTcsOCBAQCBpOTE1X2dlbV9idXN5X2lvY3Rs
KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCiAJYXJncy0+YnVzeSA9IGJ1c3lf
Y2hlY2tfd3JpdGVyKGRtYV9yZXN2X2V4Y2x1c2l2ZShvYmotPmJhc2UucmVzdikpOwogCiAJLyog
VHJhbnNsYXRlIHNoYXJlZCBmZW5jZXMgdG8gUkVBRCBzZXQgb2YgZW5naW5lcyAqLwotCWxpc3Qg
PSBkbWFfcmVzdl9zaGFyZWQob2JqLT5iYXNlLnJlc3YpOwotCWlmIChsaXN0KSB7Ci0JCXVuc2ln
bmVkIGludCBzaGFyZWRfY291bnQgPSBsaXN0LT5zaGFyZWRfY291bnQsIGk7Ci0KLQkJZm9yIChp
ID0gMDsgaSA8IHNoYXJlZF9jb3VudDsgKytpKSB7Ci0JCQlzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5j
ZSA9Ci0JCQkJcmN1X2RlcmVmZXJlbmNlKGxpc3QtPnNoYXJlZFtpXSk7Ci0KLQkJCWFyZ3MtPmJ1
c3kgfD0gYnVzeV9jaGVja19yZWFkZXIoZmVuY2UpOwotCQl9Ci0JfQorCWRtYV9yZXN2X2Zvcl9l
YWNoX3NoYXJlZChvYmotPmJhc2UucmVzdiwgJmN1cnNvciwgZmVuY2UpCisJCWFyZ3MtPmJ1c3kg
fD0gYnVzeV9jaGVja19yZWFkZXIoZmVuY2UpOwogCiAJaWYgKGFyZ3MtPmJ1c3kgJiYgcmVhZF9z
ZXFjb3VudF9yZXRyeSgmb2JqLT5iYXNlLnJlc3YtPnNlcSwgc2VxKSkKIAkJZ290byByZXRyeTsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9ub3V2ZWF1L25vdXZlYXVfZmVuY2UuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9ub3V2ZWF1L25vdXZlYXVfZmVuY2UuYwppbmRleCA1Y2U0NDFjNjU1ZWEu
LjllZmU0NzkzMmI0MiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL25vdXZlYXUvbm91dmVh
dV9mZW5jZS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9ub3V2ZWF1L25vdXZlYXVfZmVuY2UuYwpA
QCAtMzQyLDExICszNDIsMTEgQEAgaW50CiBub3V2ZWF1X2ZlbmNlX3N5bmMoc3RydWN0IG5vdXZl
YXVfYm8gKm52Ym8sIHN0cnVjdCBub3V2ZWF1X2NoYW5uZWwgKmNoYW4sIGJvb2wgZXhjbHVzaXZl
LCBib29sIGludHIpCiB7CiAJc3RydWN0IG5vdXZlYXVfZmVuY2VfY2hhbiAqZmN0eCA9IGNoYW4t
PmZlbmNlOwotCXN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlOwogCXN0cnVjdCBkbWFfcmVzdiAqcmVz
diA9IG52Ym8tPmJvLmJhc2UucmVzdjsKLQlzdHJ1Y3QgZG1hX3Jlc3ZfbGlzdCAqZm9iajsKKwlz
dHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSwgKnNoYXJlZDsKKwlzdHJ1Y3QgZG1hX3Jlc3ZfY3Vyc29y
IGN1cnNvcjsKIAlzdHJ1Y3Qgbm91dmVhdV9mZW5jZSAqZjsKLQlpbnQgcmV0ID0gMCwgaTsKKwlp
bnQgcmV0ID0gMDsKIAogCWlmICghZXhjbHVzaXZlKSB7CiAJCXJldCA9IGRtYV9yZXN2X3Jlc2Vy
dmVfc2hhcmVkKHJlc3YsIDEpOwpAQCAtMzU1LDEwICszNTUsMTAgQEAgbm91dmVhdV9mZW5jZV9z
eW5jKHN0cnVjdCBub3V2ZWF1X2JvICpudmJvLCBzdHJ1Y3Qgbm91dmVhdV9jaGFubmVsICpjaGFu
LCBib29sIGUKIAkJCXJldHVybiByZXQ7CiAJfQogCi0JZm9iaiA9IGRtYV9yZXN2X3NoYXJlZChy
ZXN2KTsKKwlzaGFyZWQgPSBkbWFfcmVzdl9maXJzdF9zaGFyZWQocmVzdiwgJmN1cnNvcik7CiAJ
ZmVuY2UgPSBkbWFfcmVzdl9leGNsdXNpdmUocmVzdik7CiAKLQlpZiAoZmVuY2UgJiYgKCFleGNs
dXNpdmUgfHwgIWZvYmogfHwgIWZvYmotPnNoYXJlZF9jb3VudCkpIHsKKwlpZiAoZmVuY2UgJiYg
KCFleGNsdXNpdmUgfHwgIXNoYXJlZCkpIHsKIAkJc3RydWN0IG5vdXZlYXVfY2hhbm5lbCAqcHJl
diA9IE5VTEw7CiAJCWJvb2wgbXVzdF93YWl0ID0gdHJ1ZTsKIApAQCAtMzc3LDE3ICszNzcsMTUg
QEAgbm91dmVhdV9mZW5jZV9zeW5jKHN0cnVjdCBub3V2ZWF1X2JvICpudmJvLCBzdHJ1Y3Qgbm91
dmVhdV9jaGFubmVsICpjaGFuLCBib29sIGUKIAkJcmV0dXJuIHJldDsKIAl9CiAKLQlpZiAoIWV4
Y2x1c2l2ZSB8fCAhZm9iaikKKwlpZiAoIWV4Y2x1c2l2ZSB8fCAhc2hhcmVkKQogCQlyZXR1cm4g
cmV0OwogCi0JZm9yIChpID0gMDsgaSA8IGZvYmotPnNoYXJlZF9jb3VudCAmJiAhcmV0OyArK2kp
IHsKKworCWRvIHsKIAkJc3RydWN0IG5vdXZlYXVfY2hhbm5lbCAqcHJldiA9IE5VTEw7CiAJCWJv
b2wgbXVzdF93YWl0ID0gdHJ1ZTsKIAotCQlmZW5jZSA9IHJjdV9kZXJlZmVyZW5jZV9wcm90ZWN0
ZWQoZm9iai0+c2hhcmVkW2ldLAotCQkJCQkJZG1hX3Jlc3ZfaGVsZChyZXN2KSk7Ci0KLQkJZiA9
IG5vdXZlYXVfbG9jYWxfZmVuY2UoZmVuY2UsIGNoYW4tPmRybSk7CisJCWYgPSBub3V2ZWF1X2xv
Y2FsX2ZlbmNlKHNoYXJlZCwgY2hhbi0+ZHJtKTsKIAkJaWYgKGYpIHsKIAkJCXJjdV9yZWFkX2xv
Y2soKTsKIAkJCXByZXYgPSByY3VfZGVyZWZlcmVuY2UoZi0+Y2hhbm5lbCk7CkBAIC0zOTcsOCAr
Mzk1LDggQEAgbm91dmVhdV9mZW5jZV9zeW5jKHN0cnVjdCBub3V2ZWF1X2JvICpudmJvLCBzdHJ1
Y3Qgbm91dmVhdV9jaGFubmVsICpjaGFuLCBib29sIGUKIAkJfQogCiAJCWlmIChtdXN0X3dhaXQp
Ci0JCQlyZXQgPSBkbWFfZmVuY2Vfd2FpdChmZW5jZSwgaW50cik7Ci0JfQorCQkJcmV0ID0gZG1h
X2ZlbmNlX3dhaXQoc2hhcmVkLCBpbnRyKTsKKwl9IHdoaWxlICgoc2hhcmVkID0gZG1hX3Jlc3Zf
bmV4dF9zaGFyZWQocmVzdiwgJmN1cnNvcikpKTsKIAogCXJldHVybiByZXQ7CiB9CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vcXhsL3F4bF9kZWJ1Z2ZzLmMgYi9kcml2ZXJzL2dwdS9kcm0v
cXhsL3F4bF9kZWJ1Z2ZzLmMKaW5kZXggMGFjYzcwYTZkM2RkLi4xZDI0ZTAyZjQ2NTIgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9xeGwvcXhsX2RlYnVnZnMuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vcXhsL3F4bF9kZWJ1Z2ZzLmMKQEAgLTU3LDEyICs1NywxNCBAQCBxeGxfZGVidWdmc19i
dWZmZXJzX2luZm8oc3RydWN0IHNlcV9maWxlICptLCB2b2lkICpkYXRhKQogCXN0cnVjdCBxeGxf
Ym8gKmJvOwogCiAJbGlzdF9mb3JfZWFjaF9lbnRyeShibywgJnFkZXYtPmdlbS5vYmplY3RzLCBs
aXN0KSB7Ci0JCXN0cnVjdCBkbWFfcmVzdl9saXN0ICpmb2JqOwotCQlpbnQgcmVsOworCQlzdHJ1
Y3QgZG1hX3Jlc3ZfY3Vyc29yIGN1cnNvcjsKKwkJc3RydWN0IGRtYV9mZW5jZSAqZjsKKwkJaW50
IHJlbCA9IDA7CiAKKwkJLyogVE9ETzogSXMgdGhpcyBzdWZmaWNpZW50IGZhc3QgZW5vdWdoID8g
Ki8KIAkJcmN1X3JlYWRfbG9jaygpOwotCQlmb2JqID0gZG1hX3Jlc3Zfc2hhcmVkKGJvLT50Ym8u
YmFzZS5yZXN2KTsKLQkJcmVsID0gZm9iaiA/IGZvYmotPnNoYXJlZF9jb3VudCA6IDA7CisJCWRt
YV9yZXN2X2Zvcl9lYWNoX3NoYXJlZChiby0+dGJvLmJhc2UucmVzdiwgJmN1cnNvciwgZikKKwkJ
CSsrcmVsOwogCQlyY3VfcmVhZF91bmxvY2soKTsKIAogCQlzZXFfcHJpbnRmKG0sICJzaXplICVs
ZCwgcGMgJWQsIG51bSByZWxlYXNlcyAlZFxuIiwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9yYWRlb24vcmFkZW9uX3N5bmMuYyBiL2RyaXZlcnMvZ3B1L2RybS9yYWRlb24vcmFkZW9uX3N5
bmMuYwppbmRleCBhOWNkYjg4ZGExNzMuLjkxNWFjMGRlMDYzMyAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL3JhZGVvbi9yYWRlb25fc3luYy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9yYWRl
b24vcmFkZW9uX3N5bmMuYwpAQCAtOTEsMTEgKzkxLDEwIEBAIGludCByYWRlb25fc3luY19yZXN2
KHN0cnVjdCByYWRlb25fZGV2aWNlICpyZGV2LAogCQkgICAgIHN0cnVjdCBkbWFfcmVzdiAqcmVz
diwKIAkJICAgICBib29sIHNoYXJlZCkKIHsKLQlzdHJ1Y3QgZG1hX3Jlc3ZfbGlzdCAqZmxpc3Q7
Ci0Jc3RydWN0IGRtYV9mZW5jZSAqZjsKKwlzdHJ1Y3QgZG1hX3Jlc3ZfY3Vyc29yIGN1cnNvcjsK
IAlzdHJ1Y3QgcmFkZW9uX2ZlbmNlICpmZW5jZTsKLQl1bnNpZ25lZCBpOwotCWludCByID0gMDsK
KwlzdHJ1Y3QgZG1hX2ZlbmNlICpmOworCWludCByOwogCiAJLyogYWx3YXlzIHN5bmMgdG8gdGhl
IGV4Y2x1c2l2ZSBmZW5jZSAqLwogCWYgPSBkbWFfcmVzdl9leGNsdXNpdmUocmVzdik7CkBAIC0x
MDUsMTMgKzEwNCwxMCBAQCBpbnQgcmFkZW9uX3N5bmNfcmVzdihzdHJ1Y3QgcmFkZW9uX2Rldmlj
ZSAqcmRldiwKIAllbHNlIGlmIChmKQogCQlyID0gZG1hX2ZlbmNlX3dhaXQoZiwgdHJ1ZSk7CiAK
LQlmbGlzdCA9IGRtYV9yZXN2X3NoYXJlZChyZXN2KTsKLQlpZiAoc2hhcmVkIHx8ICFmbGlzdCB8
fCByKQorCWlmIChzaGFyZWQgfHwgcikKIAkJcmV0dXJuIHI7CiAKLQlmb3IgKGkgPSAwOyBpIDwg
Zmxpc3QtPnNoYXJlZF9jb3VudDsgKytpKSB7Ci0JCWYgPSByY3VfZGVyZWZlcmVuY2VfcHJvdGVj
dGVkKGZsaXN0LT5zaGFyZWRbaV0sCi0JCQkJCSAgICAgIGRtYV9yZXN2X2hlbGQocmVzdikpOwor
CWRtYV9yZXN2X2Zvcl9lYWNoX3NoYXJlZChyZXN2LCAmY3Vyc29yLCBmKSB7CiAJCWZlbmNlID0g
dG9fcmFkZW9uX2ZlbmNlKGYpOwogCQlpZiAoZmVuY2UgJiYgZmVuY2UtPnJkZXYgPT0gcmRldikK
IAkJCXJhZGVvbl9zeW5jX2ZlbmNlKHN5bmMsIGZlbmNlKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS90dG0vdHRtX2JvLmMgYi9kcml2ZXJzL2dwdS9kcm0vdHRtL3R0bV9iby5jCmluZGV4
IDlkNDUzYzJjYTgwMC4uMTZiODY5ZDliMWQ2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
dHRtL3R0bV9iby5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS90dG0vdHRtX2JvLmMKQEAgLTI1NCwy
MiArMjU0LDE3IEBAIHN0YXRpYyBpbnQgdHRtX2JvX2luZGl2aWR1YWxpemVfcmVzdihzdHJ1Y3Qg
dHRtX2J1ZmZlcl9vYmplY3QgKmJvKQogc3RhdGljIHZvaWQgdHRtX2JvX2ZsdXNoX2FsbF9mZW5j
ZXMoc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0ICpibykKIHsKIAlzdHJ1Y3QgZG1hX3Jlc3YgKnJl
c3YgPSAmYm8tPmJhc2UuX3Jlc3Y7Ci0Jc3RydWN0IGRtYV9yZXN2X2xpc3QgKmZvYmo7CisJc3Ry
dWN0IGRtYV9yZXN2X2N1cnNvciBjdXJzb3I7CiAJc3RydWN0IGRtYV9mZW5jZSAqZmVuY2U7Ci0J
aW50IGk7CiAKIAlyY3VfcmVhZF9sb2NrKCk7Ci0JZm9iaiA9IGRtYV9yZXN2X3NoYXJlZChyZXN2
KTsKLQlmZW5jZSA9IGRtYV9yZXN2X2V4Y2x1c2l2ZShyZXN2KTsKLQlpZiAoZmVuY2UgJiYgIWZl
bmNlLT5vcHMtPnNpZ25hbGVkKQotCQlkbWFfZmVuY2VfZW5hYmxlX3N3X3NpZ25hbGluZyhmZW5j
ZSk7Ci0KLQlmb3IgKGkgPSAwOyBmb2JqICYmIGkgPCBmb2JqLT5zaGFyZWRfY291bnQ7ICsraSkg
ewotCQlmZW5jZSA9IHJjdV9kZXJlZmVyZW5jZShmb2JqLT5zaGFyZWRbaV0pOwotCisJZG1hX3Jl
c3ZfZm9yX2VhY2hfc2hhcmVkKHJlc3YsICZjdXJzb3IsIGZlbmNlKSB7CiAJCWlmICghZmVuY2Ut
Pm9wcy0+c2lnbmFsZWQpCiAJCQlkbWFfZmVuY2VfZW5hYmxlX3N3X3NpZ25hbGluZyhmZW5jZSk7
CiAJfQorCWZlbmNlID0gZG1hX3Jlc3ZfZXhjbHVzaXZlKHJlc3YpOworCWlmIChmZW5jZSAmJiAh
ZmVuY2UtPm9wcy0+c2lnbmFsZWQpCisJCWRtYV9mZW5jZV9lbmFibGVfc3dfc2lnbmFsaW5nKGZl
bmNlKTsKIAlyY3VfcmVhZF91bmxvY2soKTsKIH0KIApkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51
eC9kbWEtcmVzdi5oIGIvaW5jbHVkZS9saW51eC9kbWEtcmVzdi5oCmluZGV4IDc0YjIxN2I4MmYz
OS4uYmI2OTExYmFhYzNkIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L2RtYS1yZXN2LmgKKysr
IGIvaW5jbHVkZS9saW51eC9kbWEtcmVzdi5oCkBAIC00NSwyMCArNDUsOSBAQAogI2luY2x1ZGUg
PGxpbnV4L3NlcWxvY2suaD4KICNpbmNsdWRlIDxsaW51eC9yY3VwZGF0ZS5oPgogCi1leHRlcm4g
c3RydWN0IHd3X2NsYXNzIHJlc2VydmF0aW9uX3d3X2NsYXNzOworc3RydWN0IGRtYV9yZXN2X2xp
c3Q7CiAKLS8qKgotICogc3RydWN0IGRtYV9yZXN2X2xpc3QgLSBhIGxpc3Qgb2Ygc2hhcmVkIGZl
bmNlcwotICogQHJjdTogZm9yIGludGVybmFsIHVzZQotICogQHNoYXJlZF9jb3VudDogdGFibGUg
b2Ygc2hhcmVkIGZlbmNlcwotICogQHNoYXJlZF9tYXg6IGZvciBncm93aW5nIHNoYXJlZCBmZW5j
ZSB0YWJsZQotICogQHNoYXJlZDogc2hhcmVkIGZlbmNlIHRhYmxlCi0gKi8KLXN0cnVjdCBkbWFf
cmVzdl9saXN0IHsKLQlzdHJ1Y3QgcmN1X2hlYWQgcmN1OwotCXUzMiBzaGFyZWRfY291bnQsIHNo
YXJlZF9tYXg7Ci0Jc3RydWN0IGRtYV9mZW5jZSBfX3JjdSAqc2hhcmVkW107Ci19OworZXh0ZXJu
IHN0cnVjdCB3d19jbGFzcyByZXNlcnZhdGlvbl93d19jbGFzczsKIAogLyoqCiAgKiBzdHJ1Y3Qg
ZG1hX3Jlc3YgLSBhIHJlc2VydmF0aW9uIG9iamVjdCBtYW5hZ2VzIGZlbmNlcyBmb3IgYSBidWZm
ZXIKQEAgLTc1LDkgKzY0LDIzIEBAIHN0cnVjdCBkbWFfcmVzdiB7CiAJc3RydWN0IGRtYV9yZXN2
X2xpc3QgX19yY3UgKmZlbmNlOwogfTsKIAorc3RydWN0IGRtYV9yZXN2X2N1cnNvciB7CisJc3Ry
dWN0IGRtYV9yZXN2X2xpc3QgKmZlbmNlczsKKwl1bnNpZ25lZCBpbnQgaTsKK307CisKICNkZWZp
bmUgZG1hX3Jlc3ZfaGVsZChvYmopIGxvY2tkZXBfaXNfaGVsZCgmKG9iaiktPmxvY2suYmFzZSkK
ICNkZWZpbmUgZG1hX3Jlc3ZfYXNzZXJ0X2hlbGQob2JqKSBsb2NrZGVwX2Fzc2VydF9oZWxkKCYo
b2JqKS0+bG9jay5iYXNlKQogCitzdHJ1Y3QgZG1hX2ZlbmNlICpkbWFfcmVzdl9maXJzdF9zaGFy
ZWQoc3RydWN0IGRtYV9yZXN2ICpvYmosCisJCQkJCXN0cnVjdCBkbWFfcmVzdl9jdXJzb3IgKmN1
cnNvcik7CitzdHJ1Y3QgZG1hX2ZlbmNlICpkbWFfcmVzdl9uZXh0X3NoYXJlZChzdHJ1Y3QgZG1h
X3Jlc3YgKm9iaiwKKwkJCQkgICAgICAgc3RydWN0IGRtYV9yZXN2X2N1cnNvciAqY3Vyc29yKTsK
KworI2RlZmluZSBkbWFfcmVzdl9mb3JfZWFjaF9zaGFyZWQob2JqLCBjdXJzb3IsIGZlbmNlKQkJ
XAorCWZvciAoZmVuY2UgPSBkbWFfcmVzdl9maXJzdF9zaGFyZWQob2JqLCBjdXJzb3IpOyBmZW5j
ZTsJXAorCSAgICAgZmVuY2UgPSBkbWFfcmVzdl9uZXh0X3NoYXJlZChvYmosIGN1cnNvcikpCisK
ICNpZmRlZiBDT05GSUdfREVCVUdfTVVURVhFUwogdm9pZCBkbWFfcmVzdl9yZXNldF9zaGFyZWRf
bWF4KHN0cnVjdCBkbWFfcmVzdiAqb2JqKTsKICNlbHNlCkBAIC0yNTMsMTcgKzI1Niw2IEBAIGRt
YV9yZXN2X2dldF9leGNsX3JjdShzdHJ1Y3QgZG1hX3Jlc3YgKm9iaikKIAlyZXR1cm4gZmVuY2U7
CiB9CiAKLS8qKgotICogZG1hX3Jlc3Zfc2hhcmVkIC0gZ2V0IHRoZSByZXNlcnZhdGlvbiBvYmpl
Y3QncyBzaGFyZWQgZmVuY2UgbGlzdAotICogQG9iajogdGhlIHJlc2VydmF0aW9uIG9iamVjdAot
ICoKLSAqIFJldHVybnMgdGhlIHNoYXJlZCBmZW5jZSBsaXN0LiBUaGUgb2JqLT5sb2NrIG9yIHJj
dSByZWFkIHNpZGUgbXVzdCBiZSBoZWxkLgotICovCi1zdGF0aWMgaW5saW5lIHN0cnVjdCBkbWFf
cmVzdl9saXN0ICpkbWFfcmVzdl9zaGFyZWQoc3RydWN0IGRtYV9yZXN2ICpvYmopCi17Ci0JcmV0
dXJuIHJjdV9kZXJlZmVyZW5jZV9jaGVjayhvYmotPmZlbmNlLCBkbWFfcmVzdl9oZWxkKG9iaikp
OwotfQotCiB2b2lkIGRtYV9yZXN2X2luaXQoc3RydWN0IGRtYV9yZXN2ICpvYmopOwogdm9pZCBk
bWFfcmVzdl9maW5pKHN0cnVjdCBkbWFfcmVzdiAqb2JqKTsKIGludCBkbWFfcmVzdl9yZXNlcnZl
X3NoYXJlZChzdHJ1Y3QgZG1hX3Jlc3YgKm9iaiwgdW5zaWduZWQgaW50IG51bV9mZW5jZXMpOwot
LSAKMi4yNS4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
XwpMaW5hcm8tbW0tc2lnIG1haWxpbmcgbGlzdApMaW5hcm8tbW0tc2lnQGxpc3RzLmxpbmFyby5v
cmcKaHR0cHM6Ly9saXN0cy5saW5hcm8ub3JnL21haWxtYW4vbGlzdGluZm8vbGluYXJvLW1tLXNp
Zwo=
