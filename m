Return-Path: <linaro-mm-sig-bounces+lists+linaro-mm-sig=lfdr.de@lists.linaro.org>
X-Original-To: lists+linaro-mm-sig@lfdr.de
Delivered-To: lists+linaro-mm-sig@lfdr.de
Received: from lists.linaro.org (lists.linaro.org [3.208.193.21])
	by mail.lfdr.de (Postfix) with ESMTPS id 223C9BA3014
	for <lists+linaro-mm-sig@lfdr.de>; Fri, 26 Sep 2025 10:47:26 +0200 (CEST)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 3C14344857
	for <lists+linaro-mm-sig@lfdr.de>; Fri, 26 Sep 2025 08:47:25 +0000 (UTC)
Received: from mgamail.intel.com (mgamail.intel.com [192.198.163.12])
	by lists.linaro.org (Postfix) with ESMTPS id 7252B447F1
	for <linaro-mm-sig@lists.linaro.org>; Fri, 26 Sep 2025 08:46:52 +0000 (UTC)
Authentication-Results: lists.linaro.org;
	dkim=pass header.d=intel.com header.s=Intel header.b=WJlQQ6uH;
	dmarc=pass (policy=none) header.from=intel.com;
	spf=pass (lists.linaro.org: domain of thomas.hellstrom@linux.intel.com designates 192.198.163.12 as permitted sender) smtp.mailfrom=thomas.hellstrom@linux.intel.com
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1758876412; x=1790412412;
  h=from:to:cc:subject:date:message-id:in-reply-to:
   references:mime-version:content-transfer-encoding;
  bh=MqJdruCHgnjZUj9KwJr+po8RkBPfCkgtOTm3sDWYslA=;
  b=WJlQQ6uHexWe0BN3P4iNs+G0An9DQJTn4AQvrcM0sLw8nD7/2zX26N+L
   BTZoHiOeBeihSIMsjAeMBYvvI/QmYN2UGfl4LBgEZ9WvnWZsQQll6av/s
   vmIGj6aqYZyoEU9xwvtBnkTFNl40UvclQX3PxEqByslt/WavBumOKd+HY
   HHnMczDa3rX85gn4NHZTBd+5gBq+BiZ1dMz47tbVTCEqZUF4CTDsDObLL
   nh6C6kMD+/okkDf33A4300GkHYt9KqREG++Brb1QN1F8M93VmmGlLxFtD
   P/D5MVA5rpcY5P8mPtCzY3zjuAdAEHLyWSF8mIj886JlMeo2SdYqrZHNK
   A==;
X-CSE-ConnectionGUID: YDbR6M1ZS7KdZBQ9O0jQAQ==
X-CSE-MsgGUID: Z42/mzYGQuejY6Ms3OBdpA==
X-IronPort-AV: E=McAfee;i="6800,10657,11564"; a="65054070"
X-IronPort-AV: E=Sophos;i="6.18,294,1751266800";
   d="scan'208";a="65054070"
Received: from fmviesa004.fm.intel.com ([10.60.135.144])
  by fmvoesa106.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 26 Sep 2025 01:46:52 -0700
X-CSE-ConnectionGUID: bJtP7oYBRf6WLoR+7FRE8Q==
X-CSE-MsgGUID: Hz7qb9q1SnKH5sCDz+a+yA==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.18,294,1751266800";
   d="scan'208";a="182839743"
Received: from opintica-mobl1 (HELO fedora) ([10.245.244.247])
  by fmviesa004-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 26 Sep 2025 01:46:50 -0700
From: =?UTF-8?q?Thomas=20Hellstr=C3=B6m?= <thomas.hellstrom@linux.intel.com>
To: intel-xe@lists.freedesktop.org
Date: Fri, 26 Sep 2025 10:46:24 +0200
Message-ID: <20250926084624.2288-3-thomas.hellstrom@linux.intel.com>
X-Mailer: git-send-email 2.51.0
In-Reply-To: <20250926084624.2288-1-thomas.hellstrom@linux.intel.com>
References: <20250926084624.2288-1-thomas.hellstrom@linux.intel.com>
MIME-Version: 1.0
X-Rspamd-Queue-Id: 7252B447F1
X-Spamd-Bar: ------
X-Spamd-Result: default: False [-6.00 / 15.00];
	WHITELIST_SPF_DKIM(-3.00)[intel.com:d:+,intel.com:s:+];
	BAYES_HAM(-3.00)[100.00%];
	MID_CONTAINS_FROM(1.00)[];
	DMARC_POLICY_ALLOW(-0.50)[intel.com,none];
	R_DKIM_ALLOW(-0.20)[intel.com:s=Intel];
	R_SPF_ALLOW(-0.20)[+ip4:192.198.163.0/26:c];
	MIME_GOOD(-0.10)[text/plain];
	ARC_NA(0.00)[];
	FROM_HAS_DN(0.00)[];
	TO_MATCH_ENVRCPT_SOME(0.00)[];
	MIME_TRACE(0.00)[0:+];
	ASN(0.00)[asn:4983, ipnet:192.198.162.0/23, country:US];
	FROM_EQ_ENVFROM(0.00)[];
	RCPT_COUNT_SEVEN(0.00)[10];
	NEURAL_HAM(-0.00)[-1.000];
	DNSWL_BLOCKED(0.00)[192.198.163.12:from];
	RCVD_COUNT_TWO(0.00)[2];
	RCVD_TLS_LAST(0.00)[];
	TO_DN_SOME(0.00)[];
	DKIM_TRACE(0.00)[intel.com:+]
X-Rspamd-Action: no action
X-Rspamd-Server: lists.linaro.org
Message-ID-Hash: KJ6FOPTUNY6WZMHLJPYY3GC4JVHUASRX
X-Message-ID-Hash: KJ6FOPTUNY6WZMHLJPYY3GC4JVHUASRX
X-MailFrom: thomas.hellstrom@linux.intel.com
X-Mailman-Rule-Hits: nonmember-moderation
X-Mailman-Rule-Misses: dmarc-mitigation; no-senders; approved; emergency; loop; banned-address; member-moderation
CC: =?UTF-8?q?Thomas=20Hellstr=C3=B6m?= <thomas.hellstrom@linux.intel.com>, Matthew Brost <matthew.brost@intel.com>, Maarten Lankhorst <maarten.lankhorst@linux.intel.com>, =?UTF-8?q?Christian=20K=C3=B6nig?= <christian.koenig@amd.com>, Kasireddy Vivek <vivek.kasireddy@intel.com>, Simona Vetter <simona.vetter@ffwll.ch>, Jason Gunthorpe <jgg@nvidia.com>, dri-devel@lists.freedesktop.org, linaro-mm-sig@lists.linaro.org
X-Mailman-Version: 3.3.5
Precedence: list
Subject: [Linaro-mm-sig] [RFC PATCH v2 2/2] drm/xe/dma-buf: Add generic interconnect support framework
List-Id: "Unified memory management interest group." <linaro-mm-sig.lists.linaro.org>
Archived-At: <https://lists.linaro.org/archives/list/linaro-mm-sig@lists.linaro.org/message/KJ6FOPTUNY6WZMHLJPYY3GC4JVHUASRX/>
List-Archive: <https://lists.linaro.org/archives/list/linaro-mm-sig@lists.linaro.org/>
List-Help: <mailto:linaro-mm-sig-request@lists.linaro.org?subject=help>
List-Owner: <mailto:linaro-mm-sig-owner@lists.linaro.org>
List-Post: <mailto:linaro-mm-sig@lists.linaro.org>
List-Subscribe: <mailto:linaro-mm-sig-join@lists.linaro.org>
List-Unsubscribe: <mailto:linaro-mm-sig-leave@lists.linaro.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64

TmVnb3RpYXRlIHRvIHVzZSBhbiB4ZS1zcGVjaWZpYyBpbnRlcmNvbm5lY3QuDQoNClNpZ25lZC1v
ZmYtYnk6IFRob21hcyBIZWxsc3Ryw7ZtIDx0aG9tYXMuaGVsbHN0cm9tQGxpbnV4LmludGVsLmNv
bT4NCi0tLQ0KIGRyaXZlcnMvZ3B1L2RybS94ZS90ZXN0cy94ZV9kbWFfYnVmLmMgfCAxMiArKy0t
LQ0KIGRyaXZlcnMvZ3B1L2RybS94ZS94ZV9kbWFfYnVmLmMgICAgICAgfCA3MyArKysrKysrKysr
KysrKysrKysrKysrKystLS0NCiBkcml2ZXJzL2dwdS9kcm0veGUveGVfZG1hX2J1Zi5oICAgICAg
IHwgIDEgLQ0KIGRyaXZlcnMvZ3B1L2RybS94ZS94ZV9pbnRlcmNvbm5lY3QuaCAgfCAzMSArKysr
KysrKysrKysNCiA0IGZpbGVzIGNoYW5nZWQsIDEwNCBpbnNlcnRpb25zKCspLCAxMyBkZWxldGlv
bnMoLSkNCiBjcmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL3hlL3hlX2ludGVyY29u
bmVjdC5oDQoNCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0veGUvdGVzdHMveGVfZG1hX2J1
Zi5jIGIvZHJpdmVycy9ncHUvZHJtL3hlL3Rlc3RzL3hlX2RtYV9idWYuYw0KaW5kZXggNWRmOThk
ZTViYTNjLi44ZWFlYTZjMmEzYjcgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0veGUvdGVz
dHMveGVfZG1hX2J1Zi5jDQorKysgYi9kcml2ZXJzL2dwdS9kcm0veGUvdGVzdHMveGVfZG1hX2J1
Zi5jDQpAQCAtMjEwLDkgKzIxMCw5IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgZG1hX2J1Zl9hdHRh
Y2hfb3BzIG5vcDJwX2F0dGFjaF9vcHMgPSB7DQogICovDQogc3RhdGljIGNvbnN0IHN0cnVjdCBk
bWFfYnVmX3Rlc3RfcGFyYW1zIHRlc3RfcGFyYW1zW10gPSB7DQogCXsubWVtX21hc2sgPSBYRV9C
T19GTEFHX1ZSQU0wLA0KLQkgLmF0dGFjaF9vcHMgPSAmeGVfZG1hX2J1Zl9hdHRhY2hfb3BzfSwN
CisJIC5hdHRhY2hfb3BzID0gJnhlX2RtYV9idWZfYXR0YWNoX29wcy5kbWFfb3BzfSwNCiAJey5t
ZW1fbWFzayA9IFhFX0JPX0ZMQUdfVlJBTTAgfCBYRV9CT19GTEFHX05FRURTX0NQVV9BQ0NFU1Ms
DQotCSAuYXR0YWNoX29wcyA9ICZ4ZV9kbWFfYnVmX2F0dGFjaF9vcHMsDQorCSAuYXR0YWNoX29w
cyA9ICZ4ZV9kbWFfYnVmX2F0dGFjaF9vcHMuZG1hX29wcywNCiAJIC5mb3JjZV9kaWZmZXJlbnRf
ZGV2aWNlcyA9IHRydWV9LA0KIA0KIAl7Lm1lbV9tYXNrID0gWEVfQk9fRkxBR19WUkFNMCwNCkBA
IC0yMjYsOSArMjI2LDkgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBkbWFfYnVmX3Rlc3RfcGFyYW1z
IHRlc3RfcGFyYW1zW10gPSB7DQogCSAuZm9yY2VfZGlmZmVyZW50X2RldmljZXMgPSB0cnVlfSwN
CiANCiAJey5tZW1fbWFzayA9IFhFX0JPX0ZMQUdfU1lTVEVNLA0KLQkgLmF0dGFjaF9vcHMgPSAm
eGVfZG1hX2J1Zl9hdHRhY2hfb3BzfSwNCisJIC5hdHRhY2hfb3BzID0gJnhlX2RtYV9idWZfYXR0
YWNoX29wcy5kbWFfb3BzfSwNCiAJey5tZW1fbWFzayA9IFhFX0JPX0ZMQUdfU1lTVEVNLA0KLQkg
LmF0dGFjaF9vcHMgPSAmeGVfZG1hX2J1Zl9hdHRhY2hfb3BzLA0KKwkgLmF0dGFjaF9vcHMgPSAm
eGVfZG1hX2J1Zl9hdHRhY2hfb3BzLmRtYV9vcHMsDQogCSAuZm9yY2VfZGlmZmVyZW50X2Rldmlj
ZXMgPSB0cnVlfSwNCiANCiAJey5tZW1fbWFzayA9IFhFX0JPX0ZMQUdfU1lTVEVNLA0KQEAgLTI0
MiwxMCArMjQyLDEwIEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgZG1hX2J1Zl90ZXN0X3BhcmFtcyB0
ZXN0X3BhcmFtc1tdID0gew0KIAkgLmZvcmNlX2RpZmZlcmVudF9kZXZpY2VzID0gdHJ1ZX0sDQog
DQogCXsubWVtX21hc2sgPSBYRV9CT19GTEFHX1NZU1RFTSB8IFhFX0JPX0ZMQUdfVlJBTTAsDQot
CSAuYXR0YWNoX29wcyA9ICZ4ZV9kbWFfYnVmX2F0dGFjaF9vcHN9LA0KKwkgLmF0dGFjaF9vcHMg
PSAmeGVfZG1hX2J1Zl9hdHRhY2hfb3BzLmRtYV9vcHN9LA0KIAl7Lm1lbV9tYXNrID0gWEVfQk9f
RkxBR19TWVNURU0gfCBYRV9CT19GTEFHX1ZSQU0wIHwNCiAJCSAgICAgWEVfQk9fRkxBR19ORUVE
U19DUFVfQUNDRVNTLA0KLQkgLmF0dGFjaF9vcHMgPSAmeGVfZG1hX2J1Zl9hdHRhY2hfb3BzLA0K
KwkgLmF0dGFjaF9vcHMgPSAmeGVfZG1hX2J1Zl9hdHRhY2hfb3BzLmRtYV9vcHMsDQogCSAuZm9y
Y2VfZGlmZmVyZW50X2RldmljZXMgPSB0cnVlfSwNCiANCiAJey5tZW1fbWFzayA9IFhFX0JPX0ZM
QUdfU1lTVEVNIHwgWEVfQk9fRkxBR19WUkFNMCwNCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0veGUveGVfZG1hX2J1Zi5jIGIvZHJpdmVycy9ncHUvZHJtL3hlL3hlX2RtYV9idWYuYw0KaW5k
ZXggNTRlNDI5NjBkYWFkLi5mZmIwMGQ1NGJiOWUgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2dwdS9k
cm0veGUveGVfZG1hX2J1Zi5jDQorKysgYi9kcml2ZXJzL2dwdS9kcm0veGUveGVfZG1hX2J1Zi5j
DQpAQCAtMTYsMTggKzE2LDQ5IEBADQogI2luY2x1ZGUgInRlc3RzL3hlX3Rlc3QuaCINCiAjaW5j
bHVkZSAieGVfYm8uaCINCiAjaW5jbHVkZSAieGVfZGV2aWNlLmgiDQorI2luY2x1ZGUgInhlX2lu
dGVyY29ubmVjdC5oIg0KICNpbmNsdWRlICJ4ZV9wbS5oIg0KICNpbmNsdWRlICJ4ZV90dG1fdnJh
bV9tZ3IuaCINCiAjaW5jbHVkZSAieGVfdm0uaCINCiANCiBNT0RVTEVfSU1QT1JUX05TKCJETUFf
QlVGIik7DQogDQorc3RydWN0IHhlX2RtYV9idWZfYXR0YWNoX29wcyB7DQorCXN0cnVjdCBkbWFf
YnVmX2F0dGFjaF9vcHMgZG1hX29wczsNCisJc3RydWN0IHhlX2ludGVyY29ubmVjdF9hdHRhY2hf
b3BzIGljX29wczsNCit9Ow0KKw0KK3N0YXRpYyBjb25zdCBzdHJ1Y3QgeGVfZG1hX2J1Zl9hdHRh
Y2hfb3BzICoNCit0b194ZV9kbWFfYnVmX2F0dGFjaF9vcHMoc3RydWN0IGRtYV9idWZfYXR0YWNo
bWVudCAqYXR0YWNoKQ0KK3sNCisJY29uc3Qgc3RydWN0IGRtYV9idWZfYXR0YWNoX29wcyAqYW9w
cyA9IGF0dGFjaC0+aW1wb3J0ZXJfb3BzOw0KKwljb25zdCBzdHJ1Y3QgZG1hX2J1Zl9pbnRlcmNv
bm5lY3RfYXR0YWNoX29wcyAqaWFvcHM7DQorDQorCWlmICghYW9wcyB8fCAhYW9wcy0+c3VwcG9y
dHNfaW50ZXJjb25uZWN0KQ0KKwkJcmV0dXJuIE5VTEw7DQorDQorCWlhb3BzID0gYW9wcy0+c3Vw
cG9ydHNfaW50ZXJjb25uZWN0KGF0dGFjaCwgeGVfaW50ZXJjb25uZWN0KTsNCisJcmV0dXJuIGlh
b3BzID8gY29udGFpbmVyX29mKGlhb3BzLCBzdHJ1Y3QgeGVfZG1hX2J1Zl9hdHRhY2hfb3BzLCBp
Y19vcHMuYmFzZSkgOiBOVUxMOw0KK30NCisNCiBzdGF0aWMgaW50IHhlX2RtYV9idWZfYXR0YWNo
KHN0cnVjdCBkbWFfYnVmICpkbWFidWYsDQogCQkJICAgICBzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2ht
ZW50ICphdHRhY2gpDQogew0KIAlzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaiA9IGF0dGFjaC0+
ZG1hYnVmLT5wcml2Ow0KKwljb25zdCBzdHJ1Y3QgeGVfZG1hX2J1Zl9hdHRhY2hfb3BzICp4ZV9h
dHRhY2hfb3BzID0NCisJCXRvX3hlX2RtYV9idWZfYXR0YWNoX29wcyhhdHRhY2gpOw0KKw0KKwlp
ZiAoeGVfYXR0YWNoX29wcyAmJiB4ZV9hdHRhY2hfb3BzLT5pY19vcHMuYWxsb3dfaWMpIHsNCisJ
CXN0cnVjdCB4ZV9pbnRlcmNvbm5lY3RfYXR0YWNoICp4ZV9hdHRhY2ggPSBremFsbG9jKHNpemVv
ZigqYXR0YWNoKSwgR0ZQX0tFUk5FTCk7DQorDQorCQlpZiAoeGVfYXR0YWNoKSB7DQorCQkJeGVf
YXR0YWNoLT5iYXNlLmludGVyY29ubmVjdCA9IHhlX2ludGVyY29ubmVjdDsNCisJCQl4ZV9hdHRh
Y2gtPnNnX2xpc3RfcmVwbGFjZW1lbnQgPSBOVUxMOw0KKwkJCWF0dGFjaC0+aW50ZXJjb25uZWN0
X2F0dGFjaCA9ICZ4ZV9hdHRhY2gtPmJhc2U7DQorCQl9DQorCX0NCiANCi0JaWYgKGF0dGFjaC0+
cGVlcjJwZWVyICYmDQorCWlmICghYXR0YWNoLT5pbnRlcmNvbm5lY3RfYXR0YWNoICYmIGF0dGFj
aC0+cGVlcjJwZWVyICYmDQogCSAgICBwY2lfcDJwZG1hX2Rpc3RhbmNlKHRvX3BjaV9kZXYob2Jq
LT5kZXYtPmRldiksIGF0dGFjaC0+ZGV2LCBmYWxzZSkgPCAwKQ0KIAkJYXR0YWNoLT5wZWVyMnBl
ZXIgPSBmYWxzZTsNCiANCkBAIC00Myw2ICs3NCw3IEBAIHN0YXRpYyB2b2lkIHhlX2RtYV9idWZf
ZGV0YWNoKHN0cnVjdCBkbWFfYnVmICpkbWFidWYsDQogew0KIAlzdHJ1Y3QgZHJtX2dlbV9vYmpl
Y3QgKm9iaiA9IGF0dGFjaC0+ZG1hYnVmLT5wcml2Ow0KIA0KKwlrZnJlZShhdHRhY2gtPmludGVy
Y29ubmVjdF9hdHRhY2gpOw0KIAl4ZV9wbV9ydW50aW1lX3B1dCh0b194ZV9kZXZpY2Uob2JqLT5k
ZXYpKTsNCiB9DQogDQpAQCAtMTM1LDYgKzE2NywxMSBAQCBzdGF0aWMgc3RydWN0IHNnX3RhYmxl
ICp4ZV9kbWFfYnVmX21hcChzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2htZW50ICphdHRhY2gsDQogDQog
CWNhc2UgWEVfUExfVlJBTTA6DQogCWNhc2UgWEVfUExfVlJBTTE6DQorCQlpZiAoYXR0YWNoLT5p
bnRlcmNvbm5lY3RfYXR0YWNoICYmDQorCQkgICAgYXR0YWNoLT5pbnRlcmNvbm5lY3RfYXR0YWNo
LT5pbnRlcmNvbm5lY3QgPT0geGVfaW50ZXJjb25uZWN0KSB7DQorCQkJLyogTWFwIHVzaW5nIHNv
bWV0aGluZyBlbHNlIHRoYW4gc2dsaXN0ICovDQorCQkJOw0KKwkJfQ0KIAkJciA9IHhlX3R0bV92
cmFtX21ncl9hbGxvY19zZ3QoeGVfYm9fZGV2aWNlKGJvKSwNCiAJCQkJCSAgICAgIGJvLT50dG0u
cmVzb3VyY2UsIDAsDQogCQkJCQkgICAgICBiby0+dHRtLmJhc2Uuc2l6ZSwgYXR0YWNoLT5kZXYs
DQpAQCAtMjg1LDkgKzMyMiwyOCBAQCBzdGF0aWMgdm9pZCB4ZV9kbWFfYnVmX21vdmVfbm90aWZ5
KHN0cnVjdCBkbWFfYnVmX2F0dGFjaG1lbnQgKmF0dGFjaCkNCiAJWEVfV0FSTl9PTih4ZV9ib19l
dmljdChibywgZXhlYykpOw0KIH0NCiANCi1zdGF0aWMgY29uc3Qgc3RydWN0IGRtYV9idWZfYXR0
YWNoX29wcyB4ZV9kbWFfYnVmX2F0dGFjaF9vcHMgPSB7DQotCS5hbGxvd19wZWVyMnBlZXIgPSB0
cnVlLA0KLQkubW92ZV9ub3RpZnkgPSB4ZV9kbWFfYnVmX21vdmVfbm90aWZ5DQorc3RhdGljIGNv
bnN0IHN0cnVjdCBkbWFfYnVmX2ludGVyY29ubmVjdF9hdHRhY2hfb3BzICoNCit4ZV9kbWFfYnVm
X3N1cHBvcnRzX2ludGVyY29ubmVjdChzdHJ1Y3QgZG1hX2J1Zl9hdHRhY2htZW50ICphdHRhY2gs
DQorCQkJCSBjb25zdCBzdHJ1Y3QgZG1hX2J1Zl9pbnRlcmNvbm5lY3QgKmludGVyY29ubmVjdCkN
Cit7DQorCWlmIChpbnRlcmNvbm5lY3QgPT0geGVfaW50ZXJjb25uZWN0KSB7DQorCQlyZXR1cm4g
JmNvbnRhaW5lcl9vZihhdHRhY2gtPmltcG9ydGVyX29wcywNCisJCQkJICAgICBjb25zdCBzdHJ1
Y3QgeGVfZG1hX2J1Zl9hdHRhY2hfb3BzLA0KKwkJCQkgICAgIGRtYV9vcHMpLT5pY19vcHMuYmFz
ZTsNCisJfQ0KKw0KKwlyZXR1cm4gTlVMTDsNCit9DQorDQorc3RhdGljIGNvbnN0IHN0cnVjdCB4
ZV9kbWFfYnVmX2F0dGFjaF9vcHMgeGVfZG1hX2J1Zl9hdHRhY2hfb3BzID0gew0KKwkuZG1hX29w
cyA9IHsNCisJCS5hbGxvd19wZWVyMnBlZXIgPSB0cnVlLA0KKwkJLm1vdmVfbm90aWZ5ID0geGVf
ZG1hX2J1Zl9tb3ZlX25vdGlmeSwNCisJCS5zdXBwb3J0c19pbnRlcmNvbm5lY3QgPSB4ZV9kbWFf
YnVmX3N1cHBvcnRzX2ludGVyY29ubmVjdCwNCisJfSwNCisJLmljX29wcyA9IHsNCisJCS5hbGxv
d19pYyA9IHRydWUsDQorCX0NCiB9Ow0KIA0KICNpZiBJU19FTkFCTEVEKENPTkZJR19EUk1fWEVf
S1VOSVRfVEVTVCkNCkBAIC0zMzYsMTIgKzM5MiwxMSBAQCBzdHJ1Y3QgZHJtX2dlbV9vYmplY3Qg
KnhlX2dlbV9wcmltZV9pbXBvcnQoc3RydWN0IGRybV9kZXZpY2UgKmRldiwNCiAJaWYgKElTX0VS
UihibykpDQogCQlyZXR1cm4gRVJSX0NBU1QoYm8pOw0KIA0KLQlhdHRhY2hfb3BzID0gJnhlX2Rt
YV9idWZfYXR0YWNoX29wczsNCisJYXR0YWNoX29wcyA9ICZ4ZV9kbWFfYnVmX2F0dGFjaF9vcHMu
ZG1hX29wczsNCiAjaWYgSVNfRU5BQkxFRChDT05GSUdfRFJNX1hFX0tVTklUX1RFU1QpDQogCWlm
ICh0ZXN0KQ0KIAkJYXR0YWNoX29wcyA9IHRlc3QtPmF0dGFjaF9vcHM7DQogI2VuZGlmDQotDQog
CWF0dGFjaCA9IGRtYV9idWZfZHluYW1pY19hdHRhY2goZG1hX2J1ZiwgZGV2LT5kZXYsIGF0dGFj
aF9vcHMsICZiby0+dHRtLmJhc2UpOw0KIAlpZiAoSVNfRVJSKGF0dGFjaCkpIHsNCiAJCW9iaiA9
IEVSUl9DQVNUKGF0dGFjaCk7DQpAQCAtMzY0LDYgKzQxOSwxMiBAQCBzdHJ1Y3QgZHJtX2dlbV9v
YmplY3QgKnhlX2dlbV9wcmltZV9pbXBvcnQoc3RydWN0IGRybV9kZXZpY2UgKmRldiwNCiAJcmV0
dXJuIG9iajsNCiB9DQogDQorc3RhdGljIGNvbnN0IHN0cnVjdCBkbWFfYnVmX2ludGVyY29ubmVj
dCBfeGVfaW50ZXJjb25uZWN0ID0gew0KKwkubmFtZSA9ICJ4ZV9pbnRlcmNvbm5lY3QiLA0KK307
DQorDQorY29uc3Qgc3RydWN0IGRtYV9idWZfaW50ZXJjb25uZWN0ICp4ZV9pbnRlcmNvbm5lY3Qg
PSAmX3hlX2ludGVyY29ubmVjdDsNCisNCiAjaWYgSVNfRU5BQkxFRChDT05GSUdfRFJNX1hFX0tV
TklUX1RFU1QpDQogI2luY2x1ZGUgInRlc3RzL3hlX2RtYV9idWYuYyINCiAjZW5kaWYNCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0veGUveGVfZG1hX2J1Zi5oIGIvZHJpdmVycy9ncHUvZHJt
L3hlL3hlX2RtYV9idWYuaA0KaW5kZXggODYxZGQyOGE4NjJjLi42YjM4MWNlNGI3YzEgMTAwNjQ0
DQotLS0gYS9kcml2ZXJzL2dwdS9kcm0veGUveGVfZG1hX2J1Zi5oDQorKysgYi9kcml2ZXJzL2dw
dS9kcm0veGUveGVfZG1hX2J1Zi5oDQpAQCAtMTEsNSArMTEsNCBAQA0KIHN0cnVjdCBkbWFfYnVm
ICp4ZV9nZW1fcHJpbWVfZXhwb3J0KHN0cnVjdCBkcm1fZ2VtX29iamVjdCAqb2JqLCBpbnQgZmxh
Z3MpOw0KIHN0cnVjdCBkcm1fZ2VtX29iamVjdCAqeGVfZ2VtX3ByaW1lX2ltcG9ydChzdHJ1Y3Qg
ZHJtX2RldmljZSAqZGV2LA0KIAkJCQkJICAgc3RydWN0IGRtYV9idWYgKmRtYV9idWYpOw0KLQ0K
ICNlbmRpZg0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS94ZS94ZV9pbnRlcmNvbm5lY3Qu
aCBiL2RyaXZlcnMvZ3B1L2RybS94ZS94ZV9pbnRlcmNvbm5lY3QuaA0KbmV3IGZpbGUgbW9kZSAx
MDA2NDQNCmluZGV4IDAwMDAwMDAwMDAwMC4uMmI4YmM5YmYxYzhkDQotLS0gL2Rldi9udWxsDQor
KysgYi9kcml2ZXJzL2dwdS9kcm0veGUveGVfaW50ZXJjb25uZWN0LmgNCkBAIC0wLDAgKzEsMzEg
QEANCisvKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUICovDQorLyoNCisgKiBDb3B5cmln
aHQgwqkgMjAyNSBJbnRlbCBDb3Jwb3JhdGlvbg0KKyAqLw0KKyNpZm5kZWYgX1hFX0lOVEVSQ09O
TkVDVF9IXw0KKyNkZWZpbmUgX1hFX0lOVEVSQ09OTkVDVF9IXw0KKw0KKyNpbmNsdWRlIDxsaW51
eC90eXBlcy5oPg0KKyNpbmNsdWRlIDxsaW51eC9kbWEtYnVmLmg+DQorDQorc3RydWN0IGRldmlj
ZV9wcml2YXRlX2FkZHJlc3M7DQorDQorLyogVGhpcyBmaWxlIG5lZWRzIHRvIGJlIHNoYXJlZCBi
ZXR3ZWVuIHRoZSBpbXBvcnRlciBhbmQgZXhwb3J0ZXIgb2YgdGhlIGludGVyY29ubmVjdCAqLw0K
Kw0KK2V4dGVybiBjb25zdCBzdHJ1Y3QgZG1hX2J1Zl9pbnRlcmNvbm5lY3QgKnhlX2ludGVyY29u
bmVjdDsNCisNCitzdHJ1Y3QgeGVfaW50ZXJjb25uZWN0X2F0dGFjaF9vcHMgew0KKwlzdHJ1Y3Qg
ZG1hX2J1Zl9pbnRlcmNvbm5lY3RfYXR0YWNoX29wcyBiYXNlOw0KKwkvKg0KKwkgKiBIZXJlIGlu
dGVyY29ubmVjdC1wcml2YXRlIHN0dWZmIGNhbiBiZSBhZGRlZC4NCisJICogTGlrZSBhIGZ1bmN0
aW9uIHRvIGNoZWNrIGludGVyY29ubmVjdCBwb3NzaWJpbGl0eS4NCisJICovDQorCWJvb2wgYWxs
b3dfaWM7DQorfTsNCisNCitzdHJ1Y3QgeGVfaW50ZXJjb25uZWN0X2F0dGFjaCB7DQorCXN0cnVj
dCBkbWFfYnVmX2ludGVyY29ubmVjdF9hdHRhY2ggYmFzZTsNCisJc3RydWN0IGRldmljZV9wcml2
YXRlX2FkZHJlc3MgKnNnX2xpc3RfcmVwbGFjZW1lbnQ7DQorfTsNCisNCisjZW5kaWYNCi0tIA0K
Mi41MS4wDQoNCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
CkxpbmFyby1tbS1zaWcgbWFpbGluZyBsaXN0IC0tIGxpbmFyby1tbS1zaWdAbGlzdHMubGluYXJv
Lm9yZwpUbyB1bnN1YnNjcmliZSBzZW5kIGFuIGVtYWlsIHRvIGxpbmFyby1tbS1zaWctbGVhdmVA
bGlzdHMubGluYXJvLm9yZwo=
